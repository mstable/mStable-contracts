{
  "contractName": "Systok",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nexus",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_initialRecipient",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_Governance",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_Manager",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_Nexus",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_OracleHub",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_Recollateraliser",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_Staking",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_Systok",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nexus",
      "outputs": [
        {
          "internalType": "contract INexus",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nexus\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialRecipient\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_Governance\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_Manager\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_Nexus\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_OracleHub\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_Recollateraliser\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_Staking\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_Systok\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nexus\",\"outputs\":[{\"internalType\":\"contract INexus\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Stability Labs Pty Ltd.\",\"details\":\"Implementation of Systok - the token used hroughout the mStable Standard;     namely through governance, forging and re-collateralisation * BURN/MINT PRIVS Only Recollateraliser can mint new Meta post completed auction Anyone can burn and burnFrom Meta, provided they have the allowance\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"burn(uint256)\":{\"details\":\"Destoys `amount` tokens from the caller.     * See `ERC20._burn`.\"},\"burnFrom(address,uint256)\":{\"details\":\"See `ERC20._burnFrom`.\"},\"constructor\":{\"details\":\"Basic constructor to initialise the Systok \"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"See `ERC20._mint`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Systok (System Token)\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/systok/Systok.sol\":\"Systok\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/interfaces/INexus.sol\":{\"keccak256\":\"0x563ab9ff02a2d4bd21fa7b00ff49e656ae915eb7c81de373931f5cfccf4d99e0\",\"urls\":[\"bzz-raw://fba2bba7c24d720e3fd2e970747fab28a3d8af00a3a5b851f09021c7da1cb3d7\",\"dweb:/ipfs/QmdP2iDyposKGTt8JX6sfGfhMWkRb4JHkTCM5LjAri9X32\"]},\"/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/interfaces/ISystok.sol\":{\"keccak256\":\"0x0aa7033328d5cfdf5e05f347f784d21e94ab79aaaf7d041c1933705c4bb4427e\",\"urls\":[\"bzz-raw://8ce3f4703e4a7717fc8ce6beb0606400ddbee355309f987918f635d0150487b9\",\"dweb:/ipfs/QmcewASTNkbS6exUSgUMFgBHEFt6XpGbsdquj9JCJt8mTj\"]},\"/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/shared/Module.sol\":{\"keccak256\":\"0x462ce32f7350e444e1b912e646f7aee825e58fa378494ab9903a4cd2aa39dea7\",\"urls\":[\"bzz-raw://bd5cc2d545616d9ad73f90e9a1e38b986db97b9d61c289ef5af514defaecf091\",\"dweb:/ipfs/QmNvv8bzckxA3g5nEoai9mwyXAt7Qi2qFjPELtkp3CFMFT\"]},\"/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/shared/ModuleKeys.sol\":{\"keccak256\":\"0xe35afc02d95adfa840a01b0914e93a988aad85940a9581f35c59ee2377d86f4c\",\"urls\":[\"bzz-raw://31f9d5955e32b5ae851ba77a316d25e965a214594e6d2eefe22f40f0bab91df2\",\"dweb:/ipfs/QmbuvtrMuZb2gy7wmFUNuAoJLwaGcDnc1fZNpJtf1eP1oK\"]},\"/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/systok/MetaToken.sol\":{\"keccak256\":\"0xb3452e8093e3f4eaee1d72e34a0dc8818456a9fd860df2c04619aad4c16684ab\",\"urls\":[\"bzz-raw://33241b6ab5c9ca5af73fcbc779baa54e0e56606336aea31b1619f9dbca012acd\",\"dweb:/ipfs/QmeHf1kVrFLX1HKiiNzurHumvvRADVq6ZFNyAVVTtCWmNv\"]},\"/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/systok/Systok.sol\":{\"keccak256\":\"0xa33a55880ac6b6ec10608cd96f84ea09811cb1b05b261152793b35c5e79bf412\",\"urls\":[\"bzz-raw://7472a704b277fabc3341d2b3eedd03a342cd08c442a52beae46f89a2940ef766\",\"dweb:/ipfs/QmPD6pq8ABNxaDz2F57CtPsLdGYMbCKefmS3EqCzhkxgrq\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa5ebf3344a36eb60e723e0764d85251c496e15e4b2d737b56415502b559a1765\",\"urls\":[\"bzz-raw://c543fd1fc299b7d32c658c86118ff2d0e7897a7c8b9d5f576fe6c0271c28961b\",\"dweb:/ipfs/QmNMrjLnsC4JP54aXLHhpra5NPTAs8rrd2bgXfYYYdJMhS\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200113738038062001137833981810160405260408110156200003757600080fd5b508051602091820151604080518082018252600c81526b6d537461626c65204d65746160a01b818601908152825180840190935260038352624d544160e81b95830195909552600080546001600160a01b0319166001600160a01b0386161790558051939492938493919291601291620000b4916004916200026b565b508151620000ca9060059060208501906200026b565b506006805460ff191660ff92909216919091179055506a52b7d2dcc80cd2e40000009050620000fa828262000104565b5050505062000310565b6001600160a01b03821662000160576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200017c816003546200020960201b62000a6e1790919060201c565b6003556001600160a01b038216600090815260016020908152604090912054620001b191839062000a6e62000209821b17901c565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101562000264576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002ae57805160ff1916838001178555620002de565b82800160010185558215620002de579182015b82811115620002de578251825591602001919060010190620002c1565b50620002ec929150620002f0565b5090565b6200030d91905b80821115620002ec5760008155600101620002f7565b90565b610e1780620003206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806379cc6790116100c3578063aa271e1a1161007c578063aa271e1a146103e2578063ae2efd9114610408578063b97e0ac614610410578063dd62ed3e14610418578063e551784114610446578063f3bdedd21461044e5761014d565b806379cc67901461032a5780637b4aec791461035657806395d89b411461035e578063a3f5c1d214610366578063a457c2d71461038a578063a9059cbb146103b65761014d565b8063313ce56711610115578063313ce56714610267578063395093511461028557806340c10f19146102b157806342966c68146102dd5780635eae58b9146102fc57806370a08231146103045761014d565b806306fdde0314610152578063095ea7b3146101cf5780630aa8d59a1461020f57806318160ddd1461022957806323b872dd14610231575b600080fd5b61015a610456565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019457818101518382015260200161017c565b50505050905090810190601f1680156101c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fb600480360360408110156101e557600080fd5b506001600160a01b0381351690602001356104ec565b604080519115158252519081900360200190f35b610217610502565b60408051918252519081900360200190f35b610217610510565b6101fb6004803603606081101561024757600080fd5b506001600160a01b03813581169160208101359091169060400135610516565b61026f61056d565b6040805160ff9092168252519081900360200190f35b6101fb6004803603604081101561029b57600080fd5b506001600160a01b038135169060200135610576565b6101fb600480360360408110156102c757600080fd5b506001600160a01b0381351690602001356105b2565b6102fa600480360360208110156102f357600080fd5b5035610602565b005b61021761060f565b6102176004803603602081101561031a57600080fd5b50356001600160a01b031661061c565b6102fa6004803603604081101561034057600080fd5b506001600160a01b038135169060200135610637565b610217610645565b61015a610653565b61036e6106b4565b604080516001600160a01b039092168252519081900360200190f35b6101fb600480360360408110156103a057600080fd5b506001600160a01b0381351690602001356106c3565b6101fb600480360360408110156103cc57600080fd5b506001600160a01b0381351690602001356106ff565b6101fb600480360360208110156103f857600080fd5b50356001600160a01b031661070c565b610217610772565b610217610789565b6102176004803603604081101561042e57600080fd5b506001600160a01b0381358116916020013516610799565b6102176107c4565b6102176107d0565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e25780601f106104b7576101008083540402835291602001916104e2565b820191906000526020600020905b8154815290600101906020018083116104c557829003601f168201915b5050505050905090565b60006104f93384846107e1565b50600192915050565b665374616b696e6760c81b81565b60035490565b60006105238484846108cd565b6001600160a01b03841660009081526002602090815260408083203380855292529091205461056391869161055e908663ffffffff610a1116565b6107e1565b5060019392505050565b60065460ff1690565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916104f991859061055e908663ffffffff610a6e16565b60006105bd3361070c565b6105f85760405162461bcd60e51b8152600401808060200182810382526030815260200180610d276030913960400191505060405180910390fd5b6104f98383610acf565b61060c3382610bc1565b50565b65537973746f6b60d01b81565b6001600160a01b031660009081526001602052604090205490565b6106418282610c9c565b5050565b6626b0b730b3b2b960c91b81565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e25780601f106104b7576101008083540402835291602001916104e2565b6000546001600160a01b031681565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916104f991859061055e908663ffffffff610a1116565b60006104f93384846108cd565b60006001600160a01b0382166107535760405162461bcd60e51b8152600401808060200182810382526022815260200180610d576022913960400191505060405180910390fd5b506001600160a01b031660009081526007602052604090205460ff1690565b6f2932b1b7b63630ba32b930b634b9b2b960811b81565b6827b930b1b632a43ab160b91b81565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b644e6578757360d81b81565b69476f7665726e616e636560b01b81565b6001600160a01b0383166108265760405162461bcd60e51b8152600401808060200182810382526024815260200180610dbf6024913960400191505060405180910390fd5b6001600160a01b03821661086b5760405162461bcd60e51b8152600401808060200182810382526022815260200180610d056022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109125760405162461bcd60e51b8152600401808060200182810382526025815260200180610d9a6025913960400191505060405180910390fd5b6001600160a01b0382166109575760405162461bcd60e51b8152600401808060200182810382526023815260200180610ce26023913960400191505060405180910390fd5b6001600160a01b038316600090815260016020526040902054610980908263ffffffff610a1116565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546109b5908263ffffffff610a6e16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610a68576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610ac8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610b2a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610b3d908263ffffffff610a6e16565b6003556001600160a01b038216600090815260016020526040902054610b69908263ffffffff610a6e16565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610c065760405162461bcd60e51b8152600401808060200182810382526021815260200180610d796021913960400191505060405180910390fd5b600354610c19908263ffffffff610a1116565b6003556001600160a01b038216600090815260016020526040902054610c45908263ffffffff610a1116565b6001600160a01b0383166000818152600160209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610ca68282610bc1565b6001600160a01b03821660009081526002602090815260408083203380855292529091205461064191849161055e908563ffffffff610a111656fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a723158200cd691ff4b1c7b6a9361afd6f3c91d2b7f69f8308e303c1df71d2a61cc0a5dbe64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806379cc6790116100c3578063aa271e1a1161007c578063aa271e1a146103e2578063ae2efd9114610408578063b97e0ac614610410578063dd62ed3e14610418578063e551784114610446578063f3bdedd21461044e5761014d565b806379cc67901461032a5780637b4aec791461035657806395d89b411461035e578063a3f5c1d214610366578063a457c2d71461038a578063a9059cbb146103b65761014d565b8063313ce56711610115578063313ce56714610267578063395093511461028557806340c10f19146102b157806342966c68146102dd5780635eae58b9146102fc57806370a08231146103045761014d565b806306fdde0314610152578063095ea7b3146101cf5780630aa8d59a1461020f57806318160ddd1461022957806323b872dd14610231575b600080fd5b61015a610456565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019457818101518382015260200161017c565b50505050905090810190601f1680156101c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fb600480360360408110156101e557600080fd5b506001600160a01b0381351690602001356104ec565b604080519115158252519081900360200190f35b610217610502565b60408051918252519081900360200190f35b610217610510565b6101fb6004803603606081101561024757600080fd5b506001600160a01b03813581169160208101359091169060400135610516565b61026f61056d565b6040805160ff9092168252519081900360200190f35b6101fb6004803603604081101561029b57600080fd5b506001600160a01b038135169060200135610576565b6101fb600480360360408110156102c757600080fd5b506001600160a01b0381351690602001356105b2565b6102fa600480360360208110156102f357600080fd5b5035610602565b005b61021761060f565b6102176004803603602081101561031a57600080fd5b50356001600160a01b031661061c565b6102fa6004803603604081101561034057600080fd5b506001600160a01b038135169060200135610637565b610217610645565b61015a610653565b61036e6106b4565b604080516001600160a01b039092168252519081900360200190f35b6101fb600480360360408110156103a057600080fd5b506001600160a01b0381351690602001356106c3565b6101fb600480360360408110156103cc57600080fd5b506001600160a01b0381351690602001356106ff565b6101fb600480360360208110156103f857600080fd5b50356001600160a01b031661070c565b610217610772565b610217610789565b6102176004803603604081101561042e57600080fd5b506001600160a01b0381358116916020013516610799565b6102176107c4565b6102176107d0565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e25780601f106104b7576101008083540402835291602001916104e2565b820191906000526020600020905b8154815290600101906020018083116104c557829003601f168201915b5050505050905090565b60006104f93384846107e1565b50600192915050565b665374616b696e6760c81b81565b60035490565b60006105238484846108cd565b6001600160a01b03841660009081526002602090815260408083203380855292529091205461056391869161055e908663ffffffff610a1116565b6107e1565b5060019392505050565b60065460ff1690565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916104f991859061055e908663ffffffff610a6e16565b60006105bd3361070c565b6105f85760405162461bcd60e51b8152600401808060200182810382526030815260200180610d276030913960400191505060405180910390fd5b6104f98383610acf565b61060c3382610bc1565b50565b65537973746f6b60d01b81565b6001600160a01b031660009081526001602052604090205490565b6106418282610c9c565b5050565b6626b0b730b3b2b960c91b81565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e25780601f106104b7576101008083540402835291602001916104e2565b6000546001600160a01b031681565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916104f991859061055e908663ffffffff610a1116565b60006104f93384846108cd565b60006001600160a01b0382166107535760405162461bcd60e51b8152600401808060200182810382526022815260200180610d576022913960400191505060405180910390fd5b506001600160a01b031660009081526007602052604090205460ff1690565b6f2932b1b7b63630ba32b930b634b9b2b960811b81565b6827b930b1b632a43ab160b91b81565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b644e6578757360d81b81565b69476f7665726e616e636560b01b81565b6001600160a01b0383166108265760405162461bcd60e51b8152600401808060200182810382526024815260200180610dbf6024913960400191505060405180910390fd5b6001600160a01b03821661086b5760405162461bcd60e51b8152600401808060200182810382526022815260200180610d056022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109125760405162461bcd60e51b8152600401808060200182810382526025815260200180610d9a6025913960400191505060405180910390fd5b6001600160a01b0382166109575760405162461bcd60e51b8152600401808060200182810382526023815260200180610ce26023913960400191505060405180910390fd5b6001600160a01b038316600090815260016020526040902054610980908263ffffffff610a1116565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546109b5908263ffffffff610a6e16565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610a68576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610ac8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610b2a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610b3d908263ffffffff610a6e16565b6003556001600160a01b038216600090815260016020526040902054610b69908263ffffffff610a6e16565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610c065760405162461bcd60e51b8152600401808060200182810382526021815260200180610d796021913960400191505060405180910390fd5b600354610c19908263ffffffff610a1116565b6003556001600160a01b038216600090815260016020526040902054610c45908263ffffffff610a1116565b6001600160a01b0383166000818152600160209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610ca68282610bc1565b6001600160a01b03821660009081526002602090815260408083203380855292529091205461064191849161055e908563ffffffff610a111656fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a723158200cd691ff4b1c7b6a9361afd6f3c91d2b7f69f8308e303c1df71d2a61cc0a5dbe64736f6c63430005100032",
  "sourceMap": "608:1079:35:-;;;822:163;8:9:-1;5:2;;;30:1;27;20:12;5:2;822:163:35;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;822:163:35;;;;;;;;416::53;;;;;;;;;;-1:-1:-1;;;416:163:53;;;;;;;;;;;;;;;;;-1:-1:-1;;;416:163:53;;;;;;;-1:-1:-1;464:22:26;;-1:-1:-1;;;;;;464:22:26;-1:-1:-1;;;;;464:22:26;;;;;504:12:53;;822:163:35;;;;;;416::53;;;2096:2:34;;504:12:53;;:5;;:12;:::i;:::-;-1:-1:-1;526:16:53;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:53;:20;;-1:-1:-1;;552:20:53;;;;;;;;;;;;-1:-1:-1;2144:22:34;;-1:-1:-1;2176:39:34;2182:17;2144:22;2176:5;:39::i;:::-;1945:277;;822:163:35;;608:1079;;5771:302:51;-1:-1:-1;;;;;5846:21:51;;5838:65;;;;;-1:-1:-1;;;5838:65:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:24;5946:6;5929:12;;:16;;;;;;:24;;;;:::i;:::-;5914:12;:39;-1:-1:-1;;;;;5984:18:51;;;;;;:9;:18;;;;;;;;;:30;;6007:6;;5984:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;5963:18:51;;;;;;:9;:18;;;;;;;;:51;;;;6029:37;;;;;;;5963:18;;;;6029:37;;;;;;;;;;5771:302;;:::o;834:176:50:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:50:o;608:1079:35:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;608:1079:35;;;-1:-1:-1;608:1079:35;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "608:1079:35:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;608:1079:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:145:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2453:145:51;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;381:47:27;;;:::i;:::-;;;;;;;;;;;;;;;;1514:89:51;;;:::i;3055:252::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3055:252:51;;;;;;;;;;;;;;;;;:::i;1478:81:53:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3702:203:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3702:203:51;;;;;;;;:::i;1491:140:34:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1491:140:34;;;;;;;;:::i;397:79:52:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;397:79:52;;:::i;:::-;;435:45:27;;;:::i;1661:108:51:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1661:108:51;-1:-1:-1;;;;;1661:108:51;;:::i;533:101:52:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;533:101:52;;;;;;;;:::i;545:47:27:-;;;:::i;838:85:53:-;;;:::i;278:19:26:-;;;:::i;:::-;;;;-1:-1:-1;;;;;278:19:26;;;;;;;;;;;;;;4392:213:51;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4392:213:51;;;;;;;;:::i;1972:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1972:153:51;;;;;;;;:::i;689:181:34:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;689:181:34;-1:-1:-1;;;;;689:181:34;;:::i;599:65:27:-;;;:::i;487:51::-;;;:::i;2183:132:51:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2183:132:51;;;;;;;;;;:::i;267:43:27:-;;;:::i;317:53::-;;;:::i;644:81:53:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2453:145:51:-;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;-1:-1:-1;2587:4:51;2453:145;;;;:::o;381:47:27:-;-1:-1:-1;;;381:47:27;:::o;1514:89:51:-;1584:12;;1514:89;:::o;3055:252::-;3144:4;3160:36;3170:6;3178:9;3189:6;3160:9;:36::i;:::-;-1:-1:-1;;;;;3235:19:51;;;;;;:11;:19;;;;;;;;3223:10;3235:31;;;;;;;;;3206:73;;3215:6;;3235:43;;3271:6;3235:43;:35;:43;:::i;:::-;3206:8;:73::i;:::-;-1:-1:-1;3296:4:51;3055:252;;;;;:::o;1478:81:53:-;1543:9;;;;1478:81;:::o;3702:203:51:-;3807:10;3782:4;3828:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3828:32:51;;;;;;;;;;3782:4;;3798:79;;3819:7;;3828:48;;3865:10;3828:48;:36;:48;:::i;1491:140:34:-;1565:4;592:20;601:10;592:8;:20::i;:::-;584:81;;;;-1:-1:-1;;;584:81:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1581:22;1587:7;1596:6;1581:5;:22::i;397:79:52:-;444:25;450:10;462:6;444:5;:25::i;:::-;397:79;:::o;435:45:27:-;-1:-1:-1;;;435:45:27;:::o;1661:108:51:-;-1:-1:-1;;;;;1744:18:51;1718:7;1744:18;;;:9;:18;;;;;;;1661:108::o;533:101:52:-;601:26;611:7;620:6;601:9;:26::i;:::-;533:101;;:::o;545:47:27:-;-1:-1:-1;;;545:47:27;:::o;838:85:53:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;278:19:26;;;-1:-1:-1;;;;;278:19:26;;:::o;4392:213:51:-;4502:10;4477:4;4523:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4523:32:51;;;;;;;;;;4477:4;;4493:84;;4514:7;;4523:53;;4560:15;4523:53;:36;:53;:::i;1972:153::-;2041:4;2057:40;2067:10;2079:9;2090:6;2057:9;:40::i;689:181:34:-;745:4;-1:-1:-1;;;;;769:21:34;;761:68;;;;-1:-1:-1;;;761:68:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;846:17:34;;;;;:8;:17;;;;;;;;;689:181::o;599:65:27:-;-1:-1:-1;;;599:65:27;:::o;487:51::-;-1:-1:-1;;;487:51:27;:::o;2183:132:51:-;-1:-1:-1;;;;;2281:18:51;;;2255:7;2281:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2183:132::o;267:43:27:-;-1:-1:-1;;;267:43:27;:::o;317:53::-;-1:-1:-1;;;317:53:27;:::o;7117:329:51:-;-1:-1:-1;;;;;7209:19:51;;7201:68;;;;-1:-1:-1;;;7201:68:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7287:21:51;;7279:68;;;;-1:-1:-1;;;7279:68:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7358:18:51;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;7408:31;;;;;;;;;;;;;;;;;7117:329;;;:::o;5079:422::-;-1:-1:-1;;;;;5176:20:51;;5168:70;;;;-1:-1:-1;;;5168:70:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5256:23:51;;5248:71;;;;-1:-1:-1;;;5248:71:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5350:17:51;;;;;;:9;:17;;;;;;:29;;5372:6;5350:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;5330:17:51;;;;;;;:9;:17;;;;;;:49;;;;5412:20;;;;;;;:32;;5437:6;5412:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5389:20:51;;;;;;;:9;:20;;;;;;;;;:55;;;;5459:35;;;;;;;5389:20;;5459:35;;;;;;;;;;;;;5079:422;;;:::o;1274:179:50:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;1351:49:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:50;;;1274:179::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:50:o;5771:302:51:-;-1:-1:-1;;;;;5846:21:51;;5838:65;;;;;-1:-1:-1;;;5838:65:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:12;;:24;;5946:6;5929:24;:16;:24;:::i;:::-;5914:12;:39;-1:-1:-1;;;;;5984:18:51;;;;;;:9;:18;;;;;;:30;;6007:6;5984:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;5963:18:51;;;;;;:9;:18;;;;;;;;:51;;;;6029:37;;;;;;;5963:18;;;;6029:37;;;;;;;;;;5771:302;;:::o;6392:300::-;-1:-1:-1;;;;;6466:21:51;;6458:67;;;;-1:-1:-1;;;6458:67:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6551:12;;:23;;6568:5;6551:23;:16;:23;:::i;:::-;6536:12;:38;-1:-1:-1;;;;;6605:18:51;;;;;;:9;:18;;;;;;:29;;6628:5;6605:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6584:18:51;;;;;;:9;:18;;;;;;;;:50;;;;6649:36;;;;;;;6584:18;;6649:36;;;;;;;;;;;6392:300;;:::o;7623:185::-;7694:22;7700:7;7709:6;7694:5;:22::i;:::-;-1:-1:-1;;;;;7756:20:51;;;;;;:11;:20;;;;;;;;7744:10;7756:32;;;;;;;;;7726:75;;7735:7;;7756:44;;7793:6;7756:44;:36;:44;:::i",
  "source": "pragma solidity ^0.5.12;\n\nimport { MetaToken } from \"./MetaToken.sol\";\nimport { Module } from \"../shared/Module.sol\";\n\nimport { INexus } from \"../interfaces/INexus.sol\";\nimport { ISystok } from \"../interfaces/ISystok.sol\";\n\n/**\n * @title Systok (System Token)\n * @author Stability Labs Pty Ltd.\n * @dev Implementation of Systok - the token used hroughout the mStable Standard;\n *      namely through governance, forging and re-collateralisation\n *\n * BURN/MINT PRIVS\n * Only Recollateraliser can mint new Meta post completed auction\n * Anyone can burn and burnFrom Meta, provided they have the allowance\n */\ncontract Systok is ISystok, Module, MetaToken {\n\n\n    /** @dev Events to emit */\n    // event RecolUpdated(bytes32 indexed key, address newAddress);\n\n\n    /** @dev Basic constructor to initialise the Systok */\n    constructor(\n        address _nexus,\n        address _initialRecipient\n    )\n        public\n        MetaToken(_initialRecipient)\n        Module(_nexus)\n    {\n    }\n\n    // /**\n    //   * @dev Internally handles updates to the system modules\n    //   * @param _key         Module key\n    //   * @param _newAddress  Address of the updated Module\n    //   */\n    // function _internalUpdateModule(bytes32 _key, address _newAddress)\n    // internal {\n\n    //     if (_key == Key_Recollateraliser) {\n    //         address old = address(recollateraliser);\n    //         // Remove privs from old recollateraliser\n    //         if(old != address(0)) {\n    //           _removeMinter(old);\n    //         }\n    //         recollateraliser = _newAddress;\n    //         _addMinter(_newAddress);\n\n    //         emit RecolUpdated(_key, _newAddress);\n    //     }\n    // }\n}",
  "sourcePath": "/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/systok/Systok.sol",
  "ast": {
    "absolutePath": "/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/systok/Systok.sol",
    "exportedSymbols": {
      "Systok": [
        10162
      ]
    },
    "id": 10163,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10133,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:35"
      },
      {
        "absolutePath": "/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/systok/MetaToken.sol",
        "file": "./MetaToken.sol",
        "id": 10135,
        "nodeType": "ImportDirective",
        "scope": 10163,
        "sourceUnit": 10132,
        "src": "26:44:35",
        "symbolAliases": [
          {
            "foreign": 10134,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/shared/Module.sol",
        "file": "../shared/Module.sol",
        "id": 10137,
        "nodeType": "ImportDirective",
        "scope": 10163,
        "sourceUnit": 8542,
        "src": "71:46:35",
        "symbolAliases": [
          {
            "foreign": 10136,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/interfaces/INexus.sol",
        "file": "../interfaces/INexus.sol",
        "id": 10139,
        "nodeType": "ImportDirective",
        "scope": 10163,
        "sourceUnit": 1729,
        "src": "119:50:35",
        "symbolAliases": [
          {
            "foreign": 10138,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/interfaces/ISystok.sol",
        "file": "../interfaces/ISystok.sol",
        "id": 10141,
        "nodeType": "ImportDirective",
        "scope": 10163,
        "sourceUnit": 1847,
        "src": "170:52:35",
        "symbolAliases": [
          {
            "foreign": 10140,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10142,
              "name": "ISystok",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1846,
              "src": "627:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISystok_$1846",
                "typeString": "contract ISystok"
              }
            },
            "id": 10143,
            "nodeType": "InheritanceSpecifier",
            "src": "627:7:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10144,
              "name": "Module",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8541,
              "src": "636:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Module_$8541",
                "typeString": "contract Module"
              }
            },
            "id": 10145,
            "nodeType": "InheritanceSpecifier",
            "src": "636:6:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10146,
              "name": "MetaToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10131,
              "src": "644:9:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MetaToken_$10131",
                "typeString": "contract MetaToken"
              }
            },
            "id": 10147,
            "nodeType": "InheritanceSpecifier",
            "src": "644:9:35"
          }
        ],
        "contractDependencies": [
          1846,
          8541,
          8565,
          10075,
          10099,
          10131,
          11077,
          11108,
          11166,
          11235
        ],
        "contractKind": "contract",
        "documentation": "@title Systok (System Token)\n@author Stability Labs Pty Ltd.\n@dev Implementation of Systok - the token used hroughout the mStable Standard;\n     namely through governance, forging and re-collateralisation\n * BURN/MINT PRIVS\nOnly Recollateraliser can mint new Meta post completed auction\nAnyone can burn and burnFrom Meta, provided they have the allowance",
        "fullyImplemented": true,
        "id": 10162,
        "linearizedBaseContracts": [
          10162,
          10131,
          10099,
          10075,
          11166,
          11108,
          11077,
          11235,
          8541,
          8565,
          1846
        ],
        "name": "Systok",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10160,
              "nodeType": "Block",
              "src": "978:7:35",
              "statements": []
            },
            "documentation": "@dev Basic constructor to initialise the Systok ",
            "id": 10161,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10154,
                    "name": "_initialRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10151,
                    "src": "932:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10155,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10153,
                  "name": "MetaToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10131,
                  "src": "922:9:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MetaToken_$10131_$",
                    "typeString": "type(contract MetaToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "922:28:35"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10157,
                    "name": "_nexus",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10149,
                    "src": "966:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10158,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10156,
                  "name": "Module",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8541,
                  "src": "959:6:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Module_$8541_$",
                    "typeString": "type(contract Module)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "959:14:35"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10149,
                  "name": "_nexus",
                  "nodeType": "VariableDeclaration",
                  "scope": 10161,
                  "src": "843:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10151,
                  "name": "_initialRecipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 10161,
                  "src": "867:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "833:65:35"
            },
            "returnParameters": {
              "id": 10159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:35"
            },
            "scope": 10162,
            "src": "822:163:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10163,
        "src": "608:1079:35"
      }
    ],
    "src": "0:1687:35"
  },
  "legacyAST": {
    "absolutePath": "/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/systok/Systok.sol",
    "exportedSymbols": {
      "Systok": [
        10162
      ]
    },
    "id": 10163,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10133,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:35"
      },
      {
        "absolutePath": "/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/systok/MetaToken.sol",
        "file": "./MetaToken.sol",
        "id": 10135,
        "nodeType": "ImportDirective",
        "scope": 10163,
        "sourceUnit": 10132,
        "src": "26:44:35",
        "symbolAliases": [
          {
            "foreign": 10134,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/shared/Module.sol",
        "file": "../shared/Module.sol",
        "id": 10137,
        "nodeType": "ImportDirective",
        "scope": 10163,
        "sourceUnit": 8542,
        "src": "71:46:35",
        "symbolAliases": [
          {
            "foreign": 10136,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/interfaces/INexus.sol",
        "file": "../interfaces/INexus.sol",
        "id": 10139,
        "nodeType": "ImportDirective",
        "scope": 10163,
        "sourceUnit": 1729,
        "src": "119:50:35",
        "symbolAliases": [
          {
            "foreign": 10138,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/alex/projects/stability-labs/mstable/mstable-contracts/contracts/interfaces/ISystok.sol",
        "file": "../interfaces/ISystok.sol",
        "id": 10141,
        "nodeType": "ImportDirective",
        "scope": 10163,
        "sourceUnit": 1847,
        "src": "170:52:35",
        "symbolAliases": [
          {
            "foreign": 10140,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10142,
              "name": "ISystok",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1846,
              "src": "627:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISystok_$1846",
                "typeString": "contract ISystok"
              }
            },
            "id": 10143,
            "nodeType": "InheritanceSpecifier",
            "src": "627:7:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10144,
              "name": "Module",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8541,
              "src": "636:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Module_$8541",
                "typeString": "contract Module"
              }
            },
            "id": 10145,
            "nodeType": "InheritanceSpecifier",
            "src": "636:6:35"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10146,
              "name": "MetaToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10131,
              "src": "644:9:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MetaToken_$10131",
                "typeString": "contract MetaToken"
              }
            },
            "id": 10147,
            "nodeType": "InheritanceSpecifier",
            "src": "644:9:35"
          }
        ],
        "contractDependencies": [
          1846,
          8541,
          8565,
          10075,
          10099,
          10131,
          11077,
          11108,
          11166,
          11235
        ],
        "contractKind": "contract",
        "documentation": "@title Systok (System Token)\n@author Stability Labs Pty Ltd.\n@dev Implementation of Systok - the token used hroughout the mStable Standard;\n     namely through governance, forging and re-collateralisation\n * BURN/MINT PRIVS\nOnly Recollateraliser can mint new Meta post completed auction\nAnyone can burn and burnFrom Meta, provided they have the allowance",
        "fullyImplemented": true,
        "id": 10162,
        "linearizedBaseContracts": [
          10162,
          10131,
          10099,
          10075,
          11166,
          11108,
          11077,
          11235,
          8541,
          8565,
          1846
        ],
        "name": "Systok",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10160,
              "nodeType": "Block",
              "src": "978:7:35",
              "statements": []
            },
            "documentation": "@dev Basic constructor to initialise the Systok ",
            "id": 10161,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10154,
                    "name": "_initialRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10151,
                    "src": "932:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10155,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10153,
                  "name": "MetaToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10131,
                  "src": "922:9:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MetaToken_$10131_$",
                    "typeString": "type(contract MetaToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "922:28:35"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10157,
                    "name": "_nexus",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10149,
                    "src": "966:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10158,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10156,
                  "name": "Module",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8541,
                  "src": "959:6:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Module_$8541_$",
                    "typeString": "type(contract Module)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "959:14:35"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10149,
                  "name": "_nexus",
                  "nodeType": "VariableDeclaration",
                  "scope": 10161,
                  "src": "843:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10151,
                  "name": "_initialRecipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 10161,
                  "src": "867:25:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "833:65:35"
            },
            "returnParameters": {
              "id": 10159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:35"
            },
            "scope": 10162,
            "src": "822:163:35",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 10163,
        "src": "608:1079:35"
      }
    ],
    "src": "0:1687:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1581432541310": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9af747b6FDfEbB2ED966a28acF0082b29504Bf14",
      "transactionHash": "0xb8e1985433b2eaa18eb4742b7f213103dea2795c500dfa3203e0854defca919c"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-02-17T19:56:32.943Z",
  "devdoc": {
    "author": "Stability Labs Pty Ltd.",
    "details": "Implementation of Systok - the token used hroughout the mStable Standard;     namely through governance, forging and re-collateralisation * BURN/MINT PRIVS Only Recollateraliser can mint new Meta post completed auction Anyone can burn and burnFrom Meta, provided they have the allowance",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "burn(uint256)": {
        "details": "Destoys `amount` tokens from the caller.     * See `ERC20._burn`."
      },
      "burnFrom(address,uint256)": {
        "details": "See `ERC20._burnFrom`."
      },
      "constructor": {
        "details": "Basic constructor to initialise the Systok "
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "See `ERC20._mint`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    },
    "title": "Systok (System Token)"
  },
  "userdoc": {
    "methods": {}
  }
}