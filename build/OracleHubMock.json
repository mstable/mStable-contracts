{
  "contractName": "OracleHubMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nexus",
          "type": "address"
        },
        {
          "internalType": "contract OracleHubPriceData",
          "name": "_data",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_sources",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "ModuleUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "symbol",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "price",
          "type": "uint64"
        }
      ],
      "name": "Price",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_Governance",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_Manager",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_Nexus",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_OracleHub",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_Recollateraliser",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "Key_Systok",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newSource",
          "type": "address"
        }
      ],
      "name": "addSource",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "data",
      "outputs": [
        {
          "internalType": "contract OracleHubData",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "symbol",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "sources_",
          "type": "address[]"
        }
      ],
      "name": "medianPrice",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "median",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "messages",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "symbols",
          "type": "bytes32[]"
        }
      ],
      "name": "postPrices",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "prices",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "readPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32[2]",
          "name": "_keys",
          "type": "bytes32[2]"
        }
      ],
      "name": "readPricePair",
      "outputs": [
        {
          "internalType": "bool[2]",
          "name": "_isFresh",
          "type": "bool[2]"
        },
        {
          "internalType": "uint64[2]",
          "name": "_prices",
          "type": "uint64[2]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sources",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "updateModule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint64[]",
          "name": "values",
          "type": "uint64[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "symbols",
          "type": "bytes32[]"
        }
      ],
      "name": "addMockPrices",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nexus\",\"type\":\"address\"},{\"internalType\":\"contract OracleHubPriceData\",\"name\":\"_data\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_sources\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ModuleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"price\",\"type\":\"uint64\"}],\"name\":\"Price\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_Governance\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_Manager\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_Nexus\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_OracleHub\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_Recollateraliser\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"Key_Systok\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"values\",\"type\":\"uint64[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"symbols\",\"type\":\"bytes32[]\"}],\"name\":\"addMockPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newSource\",\"type\":\"address\"}],\"name\":\"addSource\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"contract OracleHubData\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"sources_\",\"type\":\"address[]\"}],\"name\":\"medianPrice\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"median\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"messages\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"symbols\",\"type\":\"bytes32[]\"}],\"name\":\"postPrices\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"readPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[2]\",\"name\":\"_keys\",\"type\":\"bytes32[2]\"}],\"name\":\"readPricePair\",\"outputs\":[{\"internalType\":\"bool[2]\",\"name\":\"_isFresh\",\"type\":\"bool[2]\"},{\"internalType\":\"uint64[2]\",\"name\":\"_prices\",\"type\":\"uint64[2]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sources\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"updateModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Stability Labs\",\"methods\":{\"addSource(address)\":{\"details\":\"Whitelist a source for use in medianizing\",\"params\":{\"_newSource\":\"Address of the whitelisted source\"}},\"medianPrice(bytes32,address[])\":{\"params\":{\"sources_\":\"The sources to use when calculating the median price\",\"symbol\":\"The symbol to calculate the median price of\"},\"return\":\"median The median price over the set of sources\"},\"postPrices(bytes[],bytes[],bytes32[])\":{\"details\":\"We let anyone pay to post anything, but only sources count for prices.\",\"params\":{\"messages\":\"The messages to post to the oracle\",\"signatures\":\"The signatures for the corresponding messages\"}},\"readPrice(bytes32)\":{\"details\":\"Read a medianized price from our storage\",\"params\":{\"_key\":\"Key of the asset to read price\"},\"return\":\"bool price is freshuint64 Price as $1 == 1e6\"},\"readPricePair(bytes32[2])\":{\"details\":\"Read a medianized price from our storage\",\"params\":{\"_keys\":\"Keys of the asset to read price\"},\"return\":\"bool price is freshuint64 Price as $1 == 1e6\"},\"updateModule(bytes32,address)\":{\"details\":\"Higher order function to allow for module updates only via publisher\",\"params\":{\"_key\":\"Key of the new module\",\"_newAddress\":\"Address of the new module\"}}},\"title\":\"OracleHubMock allows us to put custom price data into the Oracle without signing messages\"},\"userdoc\":{\"methods\":{\"medianPrice(bytes32,address[])\":{\"notice\":\"Calculates the median price over any set of sources\"},\"postPrices(bytes[],bytes[],bytes32[])\":{\"notice\":\"Primary entry point to post and recalculate prices\"}},\"notice\":\"Values stored in this contract should represent a relative price to pegged asset\"}},\"settings\":{\"compilationTarget\":{\"/Users/james/mstable/mStable-contracts/contracts/z_mocks/oracles/OracleHubMock.sol\":\"OracleHubMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/james/mstable/mStable-contracts/contracts/interfaces/IManager.sol\":{\"keccak256\":\"0x2433af16af735a80bbccc766e07c7b7a88cdcb807d4ab58bfced0e53daab602a\",\"urls\":[\"bzz-raw://3a2c22f53b3a38601f4322a52786ed2f5515520af67af8a2efb0f2c3342aa4bb\",\"dweb:/ipfs/QmYRaW3ReyLXiQffqERXkqVzHayvXRJ1xaddEcLPb7nLeF\"]},\"/Users/james/mstable/mStable-contracts/contracts/interfaces/IOracleHub.sol\":{\"keccak256\":\"0x10f34be4e2ffd2fffd0a056a0999efd11476c2b5396a6cbedd2e2448e5f398d9\",\"urls\":[\"bzz-raw://09a4bb42b6058db2d55f0e92f2a1e7c2c013aca49f7a969b3c1ea7d3bfc3f9aa\",\"dweb:/ipfs/QmQPntXkxiQZVHdgGVS15LPT2uiYksEuPmGDwkcNATeN1K\"]},\"/Users/james/mstable/mStable-contracts/contracts/oracle-hub/OracleHubModule.sol\":{\"keccak256\":\"0xc9c5b73387e141ef1f5ff215879422494cc122409bc49ee192e43b970af043e3\",\"urls\":[\"bzz-raw://c29f69f84280d28f35bb491527e392cbc52642a2a521ae36ca6ebccbe4787bc1\",\"dweb:/ipfs/QmTseVVRUJzJrVnMmCofCneDKau7v7ZKHb1xPrmn1hPcBj\"]},\"/Users/james/mstable/mStable-contracts/contracts/oracle-hub/open-oracle/OracleHub.sol\":{\"keccak256\":\"0xa5284df65bae0796dbfdfd97edde169703605530748b33278943e656d56e1717\",\"urls\":[\"bzz-raw://17c8ffa7f1b75c37941983c8fc86f2a1633606bfc3652a901576d8b15c6a0414\",\"dweb:/ipfs/QmdC1GLowYzC44aGExkbNTQBmquyUW5htJUWm1Tsp7E7wR\"]},\"/Users/james/mstable/mStable-contracts/contracts/oracle-hub/open-oracle/OracleHubView.sol\":{\"keccak256\":\"0x8868f627264a77c18e6ba584ee23a7518c07315eb392bf0d97d139f6b9d35f60\",\"urls\":[\"bzz-raw://5af942fdbc03af4a8860acbcaabc66411118563dddb67fee877ab84310ba2ba7\",\"dweb:/ipfs/QmWQ7NEkqt1dh2GeeDPYKNdqkub9QYhPLHdhhJYBdQxj3c\"]},\"/Users/james/mstable/mStable-contracts/contracts/oracle-hub/open-oracle/data/OracleHubData.sol\":{\"keccak256\":\"0xa69ff2b79822f71442510cca9161bac400a0e4de6aa3835b19c6ca31837a082d\",\"urls\":[\"bzz-raw://0409bfd42688f36271a83e5e9bd4cadadbc08783c919e1a13f09f1477a42ee2c\",\"dweb:/ipfs/QmUFwvfmeEQisvgFnhEzJnm9ZeqkBnMKkBNd1fhaG3n1FD\"]},\"/Users/james/mstable/mStable-contracts/contracts/oracle-hub/open-oracle/data/OracleHubPriceData.sol\":{\"keccak256\":\"0xe6bc9cc5cc9316bf24cb78a5b2179a2860931d7158f78b502508fc8ad202b429\",\"urls\":[\"bzz-raw://182de31d5ffdd1b5ced14c9bc7e94f4d05e3f9901016971000de68648fef82d7\",\"dweb:/ipfs/QmfFbfsDbFqXB6jQL6vCjog4GiHY5hc24sXSQC32HECvTd\"]},\"/Users/james/mstable/mStable-contracts/contracts/shared/pubsub/ModuleKeys.sol\":{\"keccak256\":\"0x7390003ecacc7c9c25ce3adfb64af104477dcced24f62db00aea506766cb6c20\",\"urls\":[\"bzz-raw://2c4054221062f59e480d00d3780255c5aa2b67f1f08e80d94788d9b341795f98\",\"dweb:/ipfs/Qmf3RVA28zYmoiWycZhMxFXSheNLgbv1L7PABBohCVH3jH\"]},\"/Users/james/mstable/mStable-contracts/contracts/shared/pubsub/ModuleSub.sol\":{\"keccak256\":\"0xf2b3b0f4bf02b15b8af9e1016d5c92994227c7db2618cf2a66aeba16a0a34d34\",\"urls\":[\"bzz-raw://3ac1a22e45864ee6335301a1e08a41b6c31e25110f2da288e0ece2d9628b6c4a\",\"dweb:/ipfs/QmUh9g54BWeEELpmLBMQuj7yyevLHKTXuBbBZKv1PijxxS\"]},\"/Users/james/mstable/mStable-contracts/contracts/z_mocks/oracles/OracleHubMock.sol\":{\"keccak256\":\"0xbdd015572dbbd3533e0acfd87092258c753b2d66c050616dfd6ab0195e665483\",\"urls\":[\"bzz-raw://74cdf446351df3d9dcb50f76d949d3dbc28f86fc4204b3884839e9806ee6826f\",\"dweb:/ipfs/Qmc2ssqhbaPLtyjTTmiB1JdVEvu39fDXfYGgiypErYugr7\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200181a3803806200181a8339810160408190526200003491620003dc565b600080546001600160a01b0319166001600160a01b0384161790558051849084908490849083908190849084906200007490600190602084019062000219565b50505080600260006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000606080836001600160a01b031663b2494df36040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620000df57600080fd5b505af1158015620000f4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200011e91908101906200045e565b9194509250905060005b8381101562000174576200016b8382815181106200014257fe5b60200260200101518383815181106200015757fe5b6020026020010151620001a960201b60201c565b60010162000128565b5050600380546001600160a01b0319166001600160a01b03999099169890981790975550620005a19950505050505050505050565b817ff0d0fe9ecd941ad0096a6b95e0998ddcd76ba6a240a106fef284fc2d4f0caa4182604051620001db9190620004f3565b60405180910390a269476f7665726e616e636560b01b8214156200021557600380546001600160a01b0319166001600160a01b0383161790555b5050565b82805482825590600052602060002090810192821562000271579160200282015b828111156200027157825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200023a565b506200027f92915062000283565b5090565b620002aa91905b808211156200027f5780546001600160a01b03191681556001016200028a565b90565b8051620002ba8162000571565b92915050565b600082601f830112620002d257600080fd5b8151620002e9620002e3826200052a565b62000503565b915081818352602084019350602081019050838560208402820111156200030f57600080fd5b60005b838110156200033f5781620003288882620002ad565b845250602092830192919091019060010162000312565b5050505092915050565b600082601f8301126200035b57600080fd5b81516200036c620002e3826200052a565b915081818352602084019350602081019050838560208402820111156200039257600080fd5b60005b838110156200033f5781620003ab8882620003c2565b845250602092830192919091019060010162000395565b8051620002ba816200058b565b8051620002ba8162000596565b60008060008060808587031215620003f357600080fd5b6000620004018787620002ad565b94505060206200041487828801620002ad565b93505060406200042787828801620003cf565b92505060608501516001600160401b038111156200044457600080fd5b6200045287828801620002c0565b91505092959194509250565b6000806000606084860312156200047457600080fd5b6000620004828686620003c2565b93505060208401516001600160401b038111156200049f57600080fd5b620004ad8682870162000349565b92505060408401516001600160401b03811115620004ca57600080fd5b620004d886828701620002c0565b9150509250925092565b620004ed816200054b565b82525050565b60208101620002ba8284620004e2565b6040518181016001600160401b03811182821017156200052257600080fd5b604052919050565b60006001600160401b038211156200054157600080fd5b5060209081020190565b6000620002ba8262000565565b6000620002ba826200054b565b6001600160a01b031690565b6200057c816200054b565b81146200058857600080fd5b50565b6200057c81620002aa565b6200057c8162000558565b61126980620005b16000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639b05c8a211610097578063b97e0ac611610066578063b97e0ac614610218578063c097b1fb14610220578063e551784114610233578063f3bdedd21461023b57610100565b80639b05c8a2146101ca578063a3663d37146101dd578063ae2efd91146101fd578063b6d4d1471461020557610100565b806360846bc6116100d357806360846bc61461017a57806373d4a13a1461019a5780637b4aec79146101af5780638d0f55f9146101b757610100565b806308f4c320146101055780632a142b0b1461012f5780635b3e92f1146101445780635eae58b914610165575b600080fd5b610118610113366004610cd0565b610243565b60405161012692919061107d565b60405180910390f35b61014261013d366004610b80565b610263565b005b610157610152366004610ba6565b6102e7565b604051610126929190611062565b61016d61037c565b6040516101269190611098565b61018d610188366004610cd0565b610389565b6040516101269190611143565b6101a26103a4565b60405161012691906110e5565b61016d6103b3565b6101426101c5366004610bc4565b6103c1565b6101426101d8366004610c62565b610623565b6101f06101eb366004610cd0565b6106c5565b6040516101269190611032565b61016d6106ec565b61018d610213366004610d46565b610703565b61016d610857565b61014261022e366004610d0c565b610867565b61016d6108cb565b61016d6108d7565b6000818152600460205260409020546001906001600160401b0316915091565b6003546001600160a01b031633146102965760405162461bcd60e51b815260040161028d90611123565b60405180910390fd5b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0392909216919091179055565b6102ef610a53565b6102f7610a53565b60005b60028110156103765760016004600086846002811061031557fe5b602090810291909101358252810191909152604001600020546001600160401b031684836002811061034357fe5b6020020184846002811061035357fe5b6001600160401b03909316602093909302019190915290151590526001016102fa565b50915091565b65537973746f6b60d01b81565b6004602052600090815260409020546001600160401b031681565b6000546001600160a01b031681565b6626b0b730b3b2b960c91b81565b8483146103e05760405162461bcd60e51b815260040161028d90611113565b60005b85811015610522576000546001600160a01b03166338636e9a88888481811061040857fe5b602002820190508035601e193684900301811261042457600080fd5b909101602081019150356001600160401b0381111561044257600080fd5b3681900382131561045257600080fd5b88888681811061045e57fe5b602002820190508035601e193684900301811261047a57600080fd5b909101602081019150356001600160401b0381111561049857600080fd5b368190038213156104a857600080fd5b6040518563ffffffff1660e01b81526004016104c794939291906110b4565b602060405180830381600087803b1580156104e157600080fd5b505af11580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105199190810190610cee565b506001016103e3565b5060005b8181101561061a57600083838381811061053c57fe5b90506020020135905060006105ab8260018054806020026020016040519081016040528092919081815260200182805480156105a157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610583575b5050505050610703565b60008381526004602052604090819020805467ffffffffffffffff19166001600160401b038416179055519091507fe399d968bb02c19e67a017e9b405161ce424aa0be4d35b2f9cc7610a81c1d38a9061060890849084906110a6565b60405180910390a15050600101610526565b50505050505050565b8281146106425760405162461bcd60e51b815260040161028d90611103565b60005b838110156106be5784848281811061065957fe5b905060200201602061066e9190810190610d8d565b6004600085858581811061067e57fe5b60209081029290920135835250810191909152604001600020805467ffffffffffffffff19166001600160401b0392909216919091179055600101610645565b5050505050565b600181815481106106d257fe5b6000918252602090912001546001600160a01b0316905081565b6f2932b1b7b63630ba32b930b634b9b2b960811b81565b6000808251116107255760405162461bcd60e51b815260040161028d90611133565b8151604080518281526020808402820101909152606090828015610753578160200160208202803883390190505b50905060005b828110156108265760005485516001600160a01b039091169063a1aaf6c79087908490811061078457fe5b6020026020010151886040518363ffffffff1660e01b81526004016107aa929190611040565b60206040518083038186803b1580156107c257600080fd5b505afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107fa9190810190610dab565b82828151811061080657fe5b6001600160401b0390921660209283029190910190910152600101610759565b506060610832826108e8565b905080600284048151811061084357fe5b602002602001015193505050505b92915050565b6827b930b1b632a43ab160b91b81565b6002546001600160a01b031633146108915760405162461bcd60e51b815260040161028d906110f3565b644e6578757360d81b8214156108bd57600280546001600160a01b0319166001600160a01b0383161790555b6108c782826109e5565b5050565b644e6578757360d81b81565b69476f7665726e616e636560b01b81565b805160609060005b818110156109dd57600181015b828110156109d45784818151811061091157fe5b60200260200101516001600160401b031685838151811061092e57fe5b60200260200101516001600160401b031611156109cc57600085838151811061095357fe5b6020026020010151905085828151811061096957fe5b602002602001015186848151811061097d57fe5b60200260200101906001600160401b031690816001600160401b031681525050808683815181106109aa57fe5b60200260200101906001600160401b031690816001600160401b031681525050505b6001016108fd565b506001016108f0565b509192915050565b817ff0d0fe9ecd941ad0096a6b95e0998ddcd76ba6a240a106fef284fc2d4f0caa4182604051610a159190611032565b60405180910390a269476f7665726e616e636560b01b8214156108c757600380546001600160a01b0383166001600160a01b03199091161790555050565b60405180604001604052806002906020820280388339509192915050565b8035610851816111fd565b600082601f830112610a8d57600080fd5b8135610aa0610a9b82611177565b611151565b91508181835260208401935060208101905083856020840282011115610ac557600080fd5b60005b83811015610af15781610adb8882610a71565b8452506020928301929190910190600101610ac8565b5050505092915050565b806040810183101561085157600080fd5b60008083601f840112610b1e57600080fd5b5081356001600160401b03811115610b3557600080fd5b602083019150836020820283011115610b4d57600080fd5b9250929050565b803561085181611214565b805161085181611214565b80356108518161121d565b80516108518161121d565b600060208284031215610b9257600080fd5b6000610b9e8484610a71565b949350505050565b600060408284031215610bb857600080fd5b6000610b9e8484610afb565b60008060008060008060608789031215610bdd57600080fd5b86356001600160401b03811115610bf357600080fd5b610bff89828a01610b0c565b965096505060208701356001600160401b03811115610c1d57600080fd5b610c2989828a01610b0c565b945094505060408701356001600160401b03811115610c4757600080fd5b610c5389828a01610b0c565b92509250509295509295509295565b60008060008060408587031215610c7857600080fd5b84356001600160401b03811115610c8e57600080fd5b610c9a87828801610b0c565b945094505060208501356001600160401b03811115610cb857600080fd5b610cc487828801610b0c565b95989497509550505050565b600060208284031215610ce257600080fd5b6000610b9e8484610b54565b600060208284031215610d0057600080fd5b6000610b9e8484610b5f565b60008060408385031215610d1f57600080fd5b6000610d2b8585610b54565b9250506020610d3c85828601610a71565b9150509250929050565b60008060408385031215610d5957600080fd5b6000610d658585610b54565b92505060208301356001600160401b03811115610d8157600080fd5b610d3c85828601610a7c565b600060208284031215610d9f57600080fd5b6000610b9e8484610b6a565b600060208284031215610dbd57600080fd5b6000610b9e8484610b75565b6000610dd58383610e98565b505060200190565b6000610dd58383611029565b610df2816111b4565b82525050565b610e018161119a565b610e0b81846111a6565b9250610e1682611197565b8060005b83811015610e44578151610e2e8782610dc9565b9650610e39836111a0565b925050600101610e1a565b505050505050565b610e558161119a565b610e5f81846111a6565b9250610e6a82611197565b8060005b83811015610e44578151610e828782610ddd565b9650610e8d836111a0565b925050600101610e6e565b610df2816111bf565b610df281611197565b6000610eb683856111ab565b9350610ec38385846111e7565b610ecc836111f3565b9093019392505050565b610df2816111dc565b6000610eec6023836111ab565b7f4f6e6c79207075626c6973686572206d61792063616c6c2074686973206d65748152621a1bd960ea1b602082015260400192915050565b6000610f31601e836111ab565b7f76616c75657320616e642073796d626f6c73206d75737420626520313a310000815260200192915050565b6000610f6a6023836111ab565b7f6d6573736167657320616e64207369676e617475726573206d75737420626520815262313a3160e81b602082015260400192915050565b6000610faf602c836111ab565b7f4f6e6c792074686520676f7665726e6f72206d617920706572666f726d20746881526b34b99037b832b930ba34b7b760a11b602082015260400192915050565b6000610ffd601e836111ab565b7f736f7572636573206c697374206d757374206e6f7420626520656d7074790000815260200192915050565b610df2816111d0565b602081016108518284610de9565b6040810161104e8285610de9565b61105b6020830184610ea1565b9392505050565b608081016110708285610df8565b61105b6040830184610e4c565b6040810161108b8285610e98565b61105b6020830184611029565b602081016108518284610ea1565b6040810161108b8285610ea1565b604080825281016110c6818688610eaa565b905081810360208301526110db818486610eaa565b9695505050505050565b602081016108518284610ed6565b6020808252810161085181610edf565b6020808252810161085181610f24565b6020808252810161085181610f5d565b6020808252810161085181610fa2565b6020808252810161085181610ff0565b602081016108518284611029565b6040518181016001600160401b038111828210171561116f57600080fd5b604052919050565b60006001600160401b0382111561118d57600080fd5b5060209081020190565b90565b50600290565b60200190565b919050565b90815260200190565b6000610851826111c4565b151590565b6001600160a01b031690565b6001600160401b031690565b6000610851826111b4565b82818337506000910152565b601f01601f191690565b611206816111b4565b811461121157600080fd5b50565b61120681611197565b611206816111d056fea365627a7a723158205942647551fe8fe8f72bea024c84c73e21906e9a628060c358a447f81646a3286c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80639b05c8a211610097578063b97e0ac611610066578063b97e0ac614610218578063c097b1fb14610220578063e551784114610233578063f3bdedd21461023b57610100565b80639b05c8a2146101ca578063a3663d37146101dd578063ae2efd91146101fd578063b6d4d1471461020557610100565b806360846bc6116100d357806360846bc61461017a57806373d4a13a1461019a5780637b4aec79146101af5780638d0f55f9146101b757610100565b806308f4c320146101055780632a142b0b1461012f5780635b3e92f1146101445780635eae58b914610165575b600080fd5b610118610113366004610cd0565b610243565b60405161012692919061107d565b60405180910390f35b61014261013d366004610b80565b610263565b005b610157610152366004610ba6565b6102e7565b604051610126929190611062565b61016d61037c565b6040516101269190611098565b61018d610188366004610cd0565b610389565b6040516101269190611143565b6101a26103a4565b60405161012691906110e5565b61016d6103b3565b6101426101c5366004610bc4565b6103c1565b6101426101d8366004610c62565b610623565b6101f06101eb366004610cd0565b6106c5565b6040516101269190611032565b61016d6106ec565b61018d610213366004610d46565b610703565b61016d610857565b61014261022e366004610d0c565b610867565b61016d6108cb565b61016d6108d7565b6000818152600460205260409020546001906001600160401b0316915091565b6003546001600160a01b031633146102965760405162461bcd60e51b815260040161028d90611123565b60405180910390fd5b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0392909216919091179055565b6102ef610a53565b6102f7610a53565b60005b60028110156103765760016004600086846002811061031557fe5b602090810291909101358252810191909152604001600020546001600160401b031684836002811061034357fe5b6020020184846002811061035357fe5b6001600160401b03909316602093909302019190915290151590526001016102fa565b50915091565b65537973746f6b60d01b81565b6004602052600090815260409020546001600160401b031681565b6000546001600160a01b031681565b6626b0b730b3b2b960c91b81565b8483146103e05760405162461bcd60e51b815260040161028d90611113565b60005b85811015610522576000546001600160a01b03166338636e9a88888481811061040857fe5b602002820190508035601e193684900301811261042457600080fd5b909101602081019150356001600160401b0381111561044257600080fd5b3681900382131561045257600080fd5b88888681811061045e57fe5b602002820190508035601e193684900301811261047a57600080fd5b909101602081019150356001600160401b0381111561049857600080fd5b368190038213156104a857600080fd5b6040518563ffffffff1660e01b81526004016104c794939291906110b4565b602060405180830381600087803b1580156104e157600080fd5b505af11580156104f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105199190810190610cee565b506001016103e3565b5060005b8181101561061a57600083838381811061053c57fe5b90506020020135905060006105ab8260018054806020026020016040519081016040528092919081815260200182805480156105a157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610583575b5050505050610703565b60008381526004602052604090819020805467ffffffffffffffff19166001600160401b038416179055519091507fe399d968bb02c19e67a017e9b405161ce424aa0be4d35b2f9cc7610a81c1d38a9061060890849084906110a6565b60405180910390a15050600101610526565b50505050505050565b8281146106425760405162461bcd60e51b815260040161028d90611103565b60005b838110156106be5784848281811061065957fe5b905060200201602061066e9190810190610d8d565b6004600085858581811061067e57fe5b60209081029290920135835250810191909152604001600020805467ffffffffffffffff19166001600160401b0392909216919091179055600101610645565b5050505050565b600181815481106106d257fe5b6000918252602090912001546001600160a01b0316905081565b6f2932b1b7b63630ba32b930b634b9b2b960811b81565b6000808251116107255760405162461bcd60e51b815260040161028d90611133565b8151604080518281526020808402820101909152606090828015610753578160200160208202803883390190505b50905060005b828110156108265760005485516001600160a01b039091169063a1aaf6c79087908490811061078457fe5b6020026020010151886040518363ffffffff1660e01b81526004016107aa929190611040565b60206040518083038186803b1580156107c257600080fd5b505afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107fa9190810190610dab565b82828151811061080657fe5b6001600160401b0390921660209283029190910190910152600101610759565b506060610832826108e8565b905080600284048151811061084357fe5b602002602001015193505050505b92915050565b6827b930b1b632a43ab160b91b81565b6002546001600160a01b031633146108915760405162461bcd60e51b815260040161028d906110f3565b644e6578757360d81b8214156108bd57600280546001600160a01b0319166001600160a01b0383161790555b6108c782826109e5565b5050565b644e6578757360d81b81565b69476f7665726e616e636560b01b81565b805160609060005b818110156109dd57600181015b828110156109d45784818151811061091157fe5b60200260200101516001600160401b031685838151811061092e57fe5b60200260200101516001600160401b031611156109cc57600085838151811061095357fe5b6020026020010151905085828151811061096957fe5b602002602001015186848151811061097d57fe5b60200260200101906001600160401b031690816001600160401b031681525050808683815181106109aa57fe5b60200260200101906001600160401b031690816001600160401b031681525050505b6001016108fd565b506001016108f0565b509192915050565b817ff0d0fe9ecd941ad0096a6b95e0998ddcd76ba6a240a106fef284fc2d4f0caa4182604051610a159190611032565b60405180910390a269476f7665726e616e636560b01b8214156108c757600380546001600160a01b0383166001600160a01b03199091161790555050565b60405180604001604052806002906020820280388339509192915050565b8035610851816111fd565b600082601f830112610a8d57600080fd5b8135610aa0610a9b82611177565b611151565b91508181835260208401935060208101905083856020840282011115610ac557600080fd5b60005b83811015610af15781610adb8882610a71565b8452506020928301929190910190600101610ac8565b5050505092915050565b806040810183101561085157600080fd5b60008083601f840112610b1e57600080fd5b5081356001600160401b03811115610b3557600080fd5b602083019150836020820283011115610b4d57600080fd5b9250929050565b803561085181611214565b805161085181611214565b80356108518161121d565b80516108518161121d565b600060208284031215610b9257600080fd5b6000610b9e8484610a71565b949350505050565b600060408284031215610bb857600080fd5b6000610b9e8484610afb565b60008060008060008060608789031215610bdd57600080fd5b86356001600160401b03811115610bf357600080fd5b610bff89828a01610b0c565b965096505060208701356001600160401b03811115610c1d57600080fd5b610c2989828a01610b0c565b945094505060408701356001600160401b03811115610c4757600080fd5b610c5389828a01610b0c565b92509250509295509295509295565b60008060008060408587031215610c7857600080fd5b84356001600160401b03811115610c8e57600080fd5b610c9a87828801610b0c565b945094505060208501356001600160401b03811115610cb857600080fd5b610cc487828801610b0c565b95989497509550505050565b600060208284031215610ce257600080fd5b6000610b9e8484610b54565b600060208284031215610d0057600080fd5b6000610b9e8484610b5f565b60008060408385031215610d1f57600080fd5b6000610d2b8585610b54565b9250506020610d3c85828601610a71565b9150509250929050565b60008060408385031215610d5957600080fd5b6000610d658585610b54565b92505060208301356001600160401b03811115610d8157600080fd5b610d3c85828601610a7c565b600060208284031215610d9f57600080fd5b6000610b9e8484610b6a565b600060208284031215610dbd57600080fd5b6000610b9e8484610b75565b6000610dd58383610e98565b505060200190565b6000610dd58383611029565b610df2816111b4565b82525050565b610e018161119a565b610e0b81846111a6565b9250610e1682611197565b8060005b83811015610e44578151610e2e8782610dc9565b9650610e39836111a0565b925050600101610e1a565b505050505050565b610e558161119a565b610e5f81846111a6565b9250610e6a82611197565b8060005b83811015610e44578151610e828782610ddd565b9650610e8d836111a0565b925050600101610e6e565b610df2816111bf565b610df281611197565b6000610eb683856111ab565b9350610ec38385846111e7565b610ecc836111f3565b9093019392505050565b610df2816111dc565b6000610eec6023836111ab565b7f4f6e6c79207075626c6973686572206d61792063616c6c2074686973206d65748152621a1bd960ea1b602082015260400192915050565b6000610f31601e836111ab565b7f76616c75657320616e642073796d626f6c73206d75737420626520313a310000815260200192915050565b6000610f6a6023836111ab565b7f6d6573736167657320616e64207369676e617475726573206d75737420626520815262313a3160e81b602082015260400192915050565b6000610faf602c836111ab565b7f4f6e6c792074686520676f7665726e6f72206d617920706572666f726d20746881526b34b99037b832b930ba34b7b760a11b602082015260400192915050565b6000610ffd601e836111ab565b7f736f7572636573206c697374206d757374206e6f7420626520656d7074790000815260200192915050565b610df2816111d0565b602081016108518284610de9565b6040810161104e8285610de9565b61105b6020830184610ea1565b9392505050565b608081016110708285610df8565b61105b6040830184610e4c565b6040810161108b8285610e98565b61105b6020830184611029565b602081016108518284610ea1565b6040810161108b8285610ea1565b604080825281016110c6818688610eaa565b905081810360208301526110db818486610eaa565b9695505050505050565b602081016108518284610ed6565b6020808252810161085181610edf565b6020808252810161085181610f24565b6020808252810161085181610f5d565b6020808252810161085181610fa2565b6020808252810161085181610ff0565b602081016108518284611029565b6040518181016001600160401b038111828210171561116f57600080fd5b604052919050565b60006001600160401b0382111561118d57600080fd5b5060209081020190565b90565b50600290565b60200190565b919050565b90815260200190565b6000610851826111c4565b151590565b6001600160a01b031690565b6001600160401b031690565b6000610851826111b4565b82818337506000910152565b601f01601f191690565b611206816111b4565b811461121157600080fd5b50565b61120681611197565b611206816111d056fea365627a7a723158205942647551fe8fe8f72bea024c84c73e21906e9a628060c358a447f81646a3286c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "380:741:63:-;;;424:275;8:9:-1;5:2;;;30:1;27;20:12;5:2;424:275:63;;;;;;;;;;;;;;;;;;;;;1202:4:32;:12;;-1:-1:-1;;;;;;1202:12:32;-1:-1:-1;;;;;1202:12:32;;;;;1224:18;;595:11:63;;620:6;;1202:12:32;;1224:18;;620:6:63;;;;1202:12:32;;1224:18;;;;-1:-1:-1;;1224:18:32;;;;;:::i;:::-;;1125:124;;757:4:44;745:9;;:16;;;;;-1:-1:-1;;;;;745:16:44;;;;;-1:-1:-1;;;;;745:16:44;;;;;;847:10;859:22;883:27;925:4;-1:-1:-1;;;;;914:27:44;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;914:29:44;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;914:29:44;;;;;;39:16:-1;36:1;17:17;2:54;101:4;914:29:44;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;914:29:44;;;;;;;;;846:97;;-1:-1:-1;846:97:44;-1:-1:-1;846:97:44;-1:-1:-1;957:6:44;953:102;973:5;969:1;:9;953:102;;;998:46;1020:5;1026:1;1020:8;;;;;;;;;;;;;;1030:10;1041:1;1030:13;;;;;;;;;;;;;;998:21;;;:46;;:::i;:::-;980:3;;953:102;;;-1:-1:-1;;1297:10:31;:24;;-1:-1:-1;;;;;;1297:24:31;-1:-1:-1;;;;;1297:24:31;;;;;;;;;;;-1:-1:-1;380:741:63;;-1:-1:-1;;;;;;;;;;380:741:63;923:220:29;1031:4;1017:32;1037:11;1017:32;;;;;;;;;;;;;;;-1:-1:-1;;;1064:4:29;:22;1060:77;;;1102:10;:24;;-1:-1:-1;;;;;;1102:24:29;-1:-1:-1;;;;;1102:24:29;;;;;1060:77;923:220;;:::o;380:741:63:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;380:741:63;-1:-1:-1;;;;;380:741:63;;;;;;;;;;;-1:-1:-1;380:741:63;;;;;;;-1:-1:-1;380:741:63;;;-1:-1:-1;380:741:63;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;380:741:63;;;;;;;;;:::o;5:134:-1:-;83:13;;101:33;83:13;101:33;;;68:71;;;;;164:722;;292:3;285:4;277:6;273:17;269:27;259:2;;310:1;307;300:12;259:2;340:6;334:13;362:80;377:64;434:6;377:64;;;362:80;;;353:89;;459:5;484:6;477:5;470:21;514:4;506:6;502:17;492:27;;536:4;531:3;527:14;520:21;;589:6;636:3;628:4;620:6;616:17;611:3;607:27;604:36;601:2;;;653:1;650;643:12;601:2;678:1;663:217;688:6;685:1;682:13;663:217;;;746:3;768:48;812:3;800:10;768:48;;;756:61;;-1:-1;840:4;831:14;;;;859;;;;;710:1;703:9;663:217;;;667:14;252:634;;;;;;;;912:722;;1040:3;1033:4;1025:6;1021:17;1017:27;1007:2;;1058:1;1055;1048:12;1007:2;1088:6;1082:13;1110:80;1125:64;1182:6;1125:64;;1110:80;1101:89;;1207:5;1232:6;1225:5;1218:21;1262:4;1254:6;1250:17;1240:27;;1284:4;1279:3;1275:14;1268:21;;1337:6;1384:3;1376:4;1368:6;1364:17;1359:3;1355:27;1352:36;1349:2;;;1401:1;1398;1391:12;1349:2;1426:1;1411:217;1436:6;1433:1;1430:13;1411:217;;;1494:3;1516:48;1560:3;1548:10;1516:48;;;1504:61;;-1:-1;1588:4;1579:14;;;;1607;;;;;1458:1;1451:9;1411:217;;1642:134;1720:13;;1738:33;1720:13;1738:33;;1783:188;1888:13;;1906:60;1888:13;1906:60;;2119:855;;;;;2337:3;2325:9;2316:7;2312:23;2308:33;2305:2;;;2354:1;2351;2344:12;2305:2;2389:1;2406:64;2462:7;2442:9;2406:64;;;2396:74;;2368:108;2507:2;2525:64;2581:7;2572:6;2561:9;2557:22;2525:64;;;2515:74;;2486:109;2626:2;2644:91;2727:7;2718:6;2707:9;2703:22;2644:91;;;2634:101;;2605:136;2793:2;2782:9;2778:18;2772:25;-1:-1;;;;;2809:6;2806:30;2803:2;;;2849:1;2846;2839:12;2803:2;2869:89;2950:7;2941:6;2930:9;2926:22;2869:89;;;2859:99;;2751:213;2299:675;;;;;;;;2981:793;;;;3180:2;3168:9;3159:7;3155:23;3151:32;3148:2;;;3196:1;3193;3186:12;3148:2;3231:1;3248:64;3304:7;3284:9;3248:64;;;3238:74;;3210:108;3370:2;3359:9;3355:18;3349:25;-1:-1;;;;;3386:6;3383:30;3380:2;;;3426:1;3423;3416:12;3380:2;3446:89;3527:7;3518:6;3507:9;3503:22;3446:89;;;3436:99;;3328:213;3593:2;3582:9;3578:18;3572:25;-1:-1;;;;;3609:6;3606:30;3603:2;;;3649:1;3646;3639:12;3603:2;3669:89;3750:7;3741:6;3730:9;3726:22;3669:89;;;3659:99;;3551:213;3142:632;;;;;;3781:113;3864:24;3882:5;3864:24;;;3859:3;3852:37;3846:48;;;3901:213;4019:2;4004:18;;4033:71;4008:9;4077:6;4033:71;;4121:256;4183:2;4177:9;4209:17;;;-1:-1;;;;;4269:34;;4305:22;;;4266:62;4263:2;;;4341:1;4338;4331:12;4263:2;4357;4350:22;4161:216;;-1:-1;4161:216;4384:304;;-1:-1;;;;;4535:6;4532:30;4529:2;;;4575:1;4572;4565:12;4529:2;-1:-1;4610:4;4598:17;;;4663:15;;4466:222;5006:91;;5068:24;5086:5;5068:24;;5183:118;;5272:24;5290:5;5272:24;;5308:121;-1:-1;;;;;5370:54;;5353:76;5515:117;5584:24;5602:5;5584:24;;;5577:5;5574:35;5564:2;;5623:1;5620;5613:12;5564:2;5558:74;;5639:117;5708:24;5726:5;5708:24;;5763:171;5859:51;5904:5;5859:51;;5984:74;380:741:63;;;;;;",
  "deployedSourceMap": "380:741:63:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;380:741:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1768:125:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2536:112;;;;;;;;;:::i;:::-;;2096:305;;;;;;;;;:::i;:::-;;;;;;;;;375:45:42;;;:::i;:::-;;;;;;;;1010:40:31;;;;;;;;;:::i;:::-;;;;;;;;461:25:32;;;:::i;:::-;;;;;;;;483:47:42;;;:::i;2948:817:31:-;;;;;;;;;:::i;706:412:63:-;;;;;;;;;:::i;725:24:32:-;;;;;;;;;:::i;:::-;;;;;;;;536:65:42;;;:::i;4058:522:31:-;;;;;;;;;:::i;426:51:42:-;;;:::i;1723:230:44:-;;;;;;;;;:::i;267:43:42:-;;;:::i;316:53::-;;;:::i;1768:125:31:-;1835:4;1873:12;;;:6;:12;;;;;;1867:4;;-1:-1:-1;;;;;1873:12:31;1768:125;;;:::o;2536:112::-;1475:10;;-1:-1:-1;;;;;1475:10:31;1489;1475:24;1467:81;;;;-1:-1:-1;;;1467:81:31;;;;;;;;;;;;;;;;;2617:7;27:10:-1;;23:18;;;45:23;;-1:-1;2617:24:31;;;;;;;;-1:-1:-1;;;;;;2617:24:31;-1:-1:-1;;;;;2617:24:31;;;;;;;;;;2536:112::o;2096:305::-;2180:23;;:::i;:::-;2205:24;;:::i;:::-;2297:6;2293:102;2313:1;2309;:5;2293:102;;;2361:4;2367:6;:16;2374:5;2380:1;2374:8;;;;;;;;;;;;;;;;2367:16;;;;;;;;;;-1:-1:-1;2367:16:31;;-1:-1:-1;;;;;2367:16:31;2333:8;2342:1;2333:11;;;;;;;;;;2346:7;2354:1;2346:10;;;;;;;-1:-1:-1;;;;;2332:52:31;;;2346:10;;;;;;2332:52;;;;;;;;;2316:3;;2293:102;;;;2096:305;;;:::o;375:45:42:-;-1:-1:-1;;;375:45:42;:::o;1010:40:31:-;;;;;;;;;;;;-1:-1:-1;;;;;1010:40:31;;:::o;461:25:32:-;;;-1:-1:-1;;;;;461:25:32;;:::o;483:47:42:-;-1:-1:-1;;;483:47:42;:::o;2948:817:31:-;3109:36;;;3101:84;;;;-1:-1:-1;;;3101:84:31;;;;;;;;;3249:6;3244:133;3261:19;;;3244:133;;;3328:4;;-1:-1:-1;;;;;3328:4:31;3301:37;3339:8;;3348:1;3339:11;;;;;;;;;;;;-1:-1:-1;30:25;;-1:-1;;100:14;96:29;;;92:48;68:73;;58:2;;155:1;152;145:12;58:2;174:33;;;69:4;55:19;;;-1:-1;16:22;-1:-1;;;;;82:30;;79:2;;;125:1;122;115:12;79:2;155:14;151:38;;;137:53;;134:2;;;203:1;200;193:12;134:2;3352:10:31;;3363:1;3352:13;;;;;;;;;;;;-1:-1:-1;30:25;;-1:-1;;100:14;96:29;;;92:48;68:73;;58:2;;155:1;152;145:12;58:2;174:33;;;69:4;55:19;;;-1:-1;16:22;-1:-1;;;;;82:30;;79:2;;;125:1;122;115:12;79:2;155:14;151:38;;;137:53;;134:2;;;203:1;200;193:12;134:2;3301:65:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3301:65:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3301:65:31;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3301:65:31;;;;;;;;;-1:-1:-1;3282:3:31;;3244:133;;;-1:-1:-1;3458:6:31;3453:306;3470:18;;;3453:306;;;3509:14;3526:7;;3534:1;3526:10;;;;;;;;;;;;;3509:27;;3630:12;3645:28;3657:6;3665:7;3645:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3645:28:31;;;;;;;;;;;;;;;;;;;;;:11;:28::i;:::-;3687:14;;;;:6;:14;;;;;;;:22;;-1:-1:-1;;3687:22:31;-1:-1:-1;;;;;3687:22:31;;;;;3728:20;3687:22;;-1:-1:-1;3728:20:31;;;;3687:14;;:22;;3728:20;;;;;;;;;;-1:-1:-1;;3490:3:31;;3453:306;;;;2948:817;;;;;;:::o;706:412:63:-;873:31;;;865:74;;;;-1:-1:-1;;;865:74:63;;;;;;;;;1021:6;1016:96;1033:17;;;1016:96;;;1092:6;;1099:1;1092:9;;;;;;;;;;;;;;;;;;;;;;1071:6;:18;1078:7;;1086:1;1078:10;;;;;;;;;;;;;;;;1071:18;;-1:-1:-1;1071:18:63;;;;;;;;-1:-1:-1;1071:18:63;:30;;-1:-1:-1;;1071:30:63;-1:-1:-1;;;;;1071:30:63;;;;;;;;;;-1:-1:-1;1052:3:63;1016:96;;;;706:412;;;;:::o;725:24:32:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;725:24:32;;-1:-1:-1;725:24:32;:::o;536:65:42:-;-1:-1:-1;;;536:65:42;:::o;4058:522:31:-;4155:13;4206:1;4188:8;:15;:19;4180:62;;;;-1:-1:-1;;;4180:62:31;;;;;;;;;4262:15;;4318;;;;;;;;;;;;;;;;4287:28;;4262:15;4318;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4318:15:31;-1:-1:-1;4287:46:31;-1:-1:-1;4348:6:31;4343:135;4364:1;4360;:5;4343:135;;;4431:4;;4447:11;;-1:-1:-1;;;;;4431:4:31;;;;4404:42;;4447:8;;4456:1;;4447:11;;;;;;;;;;;;4460:6;4404:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4404:63:31;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4404:63:31;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4404:63:31;;;;;;;;;4386:12;4399:1;4386:15;;;;;;;;-1:-1:-1;;;;;4386:81:31;;;:15;;;;;;;;;;;:81;4367:3;;4343:135;;;;4488:28;4519:18;4524:12;4519:4;:18::i;:::-;4488:49;-1:-1:-1;4488:49:31;4571:1;4567;:5;4554:19;;;;;;;;;;;;;;4547:26;;;;;4058:522;;;;;:::o;426:51:42:-;-1:-1:-1;;;426:51:42;:::o;1723:230:44:-;1177:9;;-1:-1:-1;;;;;1177:9:44;1190:10;1177:23;1169:71;;;;-1:-1:-1;;;1169:71:44;;;;;;;;;-1:-1:-1;;;1819:4:44;:28;1815:82;;;1863:9;:23;;-1:-1:-1;;;;;;1863:23:44;-1:-1:-1;;;;;1863:23:44;;;;;1815:82;1906:40;1928:4;1934:11;1906:21;:40::i;:::-;1723:230;;:::o;267:43:42:-;-1:-1:-1;;;267:43:42;:::o;316:53::-;-1:-1:-1;;;316:53:42;:::o;4740:439:31:-;4847:12;;4811:15;;4838:6;4869:282;4890:1;4886;:5;4869:282;;;4930:1;4926:5;;4912:229;4937:1;4933;:5;4912:229;;;4978:5;4984:1;4978:8;;;;;;;;;;;;;;-1:-1:-1;;;;;4967:19:31;:5;4973:1;4967:8;;;;;;;;;;;;;;-1:-1:-1;;;;;4967:19:31;;4963:164;;;5010:10;5023:5;5029:1;5023:8;;;;;;;;;;;;;;5010:21;;5064:5;5070:1;5064:8;;;;;;;;;;;;;;5053:5;5059:1;5053:8;;;;;;;;;;;;;:19;-1:-1:-1;;;;;5053:19:31;;;-1:-1:-1;;;;;5053:19:31;;;;;5105:3;5094:5;5100:1;5094:8;;;;;;;;;;;;;:14;-1:-1:-1;;;;;5094:14:31;;;-1:-1:-1;;;;;5094:14:31;;;;;4963:164;;4940:3;;4912:229;;;-1:-1:-1;4893:3:31;;4869:282;;;-1:-1:-1;5167:5:31;;4740:439;-1:-1:-1;;4740:439:31:o;923:220:29:-;1031:4;1017:32;1037:11;1017:32;;;;;;;;;;;;;;;-1:-1:-1;;;1064:4:29;:22;1060:77;;;1102:10;:24;;-1:-1:-1;;;;;1102:24:29;;-1:-1:-1;;;;;;1102:24:29;;;;;;923:220;;:::o;380:741:63:-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;380:741:63;;;-1:-1:-1;;380:741:63:o;5:130:-1:-;72:20;;97:33;72:20;97:33;;160:707;;277:3;270:4;262:6;258:17;254:27;244:2;;295:1;292;285:12;244:2;332:6;319:20;354:80;369:64;426:6;369:64;;;354:80;;;345:89;;451:5;476:6;469:5;462:21;506:4;498:6;494:17;484:27;;528:4;523:3;519:14;512:21;;581:6;628:3;620:4;612:6;608:17;603:3;599:27;596:36;593:2;;;645:1;642;635:12;593:2;670:1;655:206;680:6;677:1;674:13;655:206;;;738:3;760:37;793:3;781:10;760:37;;;748:50;;-1:-1;821:4;812:14;;;;840;;;;;702:1;695:9;655:206;;;659:14;237:630;;;;;;;;894:176;993:6;1025:15;1011:30;;1008:39;-1:-1;1005:2;;;1060:1;1057;1050:12;1096:352;;;1226:3;1219:4;1211:6;1207:17;1203:27;1193:2;;1244:1;1241;1234:12;1193:2;-1:-1;1264:20;;-1:-1;;;;;1293:30;;1290:2;;;1336:1;1333;1326:12;1290:2;1370:4;1362:6;1358:17;1346:29;;1421:3;1413:4;1405:6;1401:17;1391:8;1387:32;1384:41;1381:2;;;1438:1;1435;1428:12;1381:2;1186:262;;;;;;2215:130;2282:20;;2307:33;2282:20;2307:33;;2352:134;2430:13;;2448:33;2430:13;2448:33;;2630:128;2696:20;;2721:32;2696:20;2721:32;;2765:132;2842:13;;2860:32;2842:13;2860:32;;2904:241;;3008:2;2996:9;2987:7;2983:23;2979:32;2976:2;;;3024:1;3021;3014:12;2976:2;3059:1;3076:53;3121:7;3101:9;3076:53;;;3066:63;2970:175;-1:-1;;;;2970:175;3152:291;;3281:2;3269:9;3260:7;3256:23;3252:32;3249:2;;;3297:1;3294;3287:12;3249:2;3332:1;3349:78;3419:7;3399:9;3349:78;;3450:987;;;;;;;3707:2;3695:9;3686:7;3682:23;3678:32;3675:2;;;3723:1;3720;3713:12;3675:2;3758:31;;-1:-1;;;;;3798:30;;3795:2;;;3841:1;3838;3831:12;3795:2;3869:87;3948:7;3939:6;3928:9;3924:22;3869:87;;;3859:97;;;;3737:225;4021:2;4010:9;4006:18;3993:32;-1:-1;;;;;4037:6;4034:30;4031:2;;;4077:1;4074;4067:12;4031:2;4105:87;4184:7;4175:6;4164:9;4160:22;4105:87;;;4095:97;;;;3972:226;4257:2;4246:9;4242:18;4229:32;-1:-1;;;;;4273:6;4270:30;4267:2;;;4313:1;4310;4303:12;4267:2;4341:80;4413:7;4404:6;4393:9;4389:22;4341:80;;;4331:90;;;;4208:219;3669:768;;;;;;;;;4444:676;;;;;4634:2;4622:9;4613:7;4609:23;4605:32;4602:2;;;4650:1;4647;4640:12;4602:2;4685:31;;-1:-1;;;;;4725:30;;4722:2;;;4768:1;4765;4758:12;4722:2;4796:79;4867:7;4858:6;4847:9;4843:22;4796:79;;;4786:89;;;;4664:217;4940:2;4929:9;4925:18;4912:32;-1:-1;;;;;4956:6;4953:30;4950:2;;;4996:1;4993;4986:12;4950:2;5024:80;5096:7;5087:6;5076:9;5072:22;5024:80;;;4596:524;;;;-1:-1;5014:90;-1:-1;;;;4596:524;5127:241;;5231:2;5219:9;5210:7;5206:23;5202:32;5199:2;;;5247:1;5244;5237:12;5199:2;5282:1;5299:53;5344:7;5324:9;5299:53;;5375:263;;5490:2;5478:9;5469:7;5465:23;5461:32;5458:2;;;5506:1;5503;5496:12;5458:2;5541:1;5558:64;5614:7;5594:9;5558:64;;5645:366;;;5766:2;5754:9;5745:7;5741:23;5737:32;5734:2;;;5782:1;5779;5772:12;5734:2;5817:1;5834:53;5879:7;5859:9;5834:53;;;5824:63;;5796:97;5924:2;5942:53;5987:7;5978:6;5967:9;5963:22;5942:53;;;5932:63;;5903:98;5728:283;;;;;;6018:502;;;6164:2;6152:9;6143:7;6139:23;6135:32;6132:2;;;6180:1;6177;6170:12;6132:2;6215:1;6232:53;6277:7;6257:9;6232:53;;;6222:63;;6194:97;6350:2;6339:9;6335:18;6322:32;-1:-1;;;;;6366:6;6363:30;6360:2;;;6406:1;6403;6396:12;6360:2;6426:78;6496:7;6487:6;6476:9;6472:22;6426:78;;6775:239;;6878:2;6866:9;6857:7;6853:23;6849:32;6846:2;;;6894:1;6891;6884:12;6846:2;6929:1;6946:52;6990:7;6970:9;6946:52;;7021:261;;7135:2;7123:9;7114:7;7110:23;7106:32;7103:2;;;7151:1;7148;7141:12;7103:2;7186:1;7203:63;7258:7;7238:9;7203:63;;7290:161;;7371:40;7407:3;7399:6;7371:40;;;-1:-1;;7440:4;7431:14;;7364:87;7460:169;;7545:44;7585:3;7577:6;7545:44;;7637:113;7720:24;7738:5;7720:24;;;7715:3;7708:37;7702:48;;;7784:636;7911:49;7954:5;7911:49;;;7973:81;8047:6;8042:3;7973:81;;;7966:88;;8075:51;8120:5;8075:51;;;8146:7;8174:1;8159:249;8184:6;8181:1;8178:13;8159:249;;;8251:6;8245:13;8272:57;8325:3;8310:13;8272:57;;;8265:64;;8346:55;8394:6;8346:55;;;8336:65;-1:-1;;8206:1;8199:9;8159:249;;;8163:14;7890:530;;;;;;8459:652;8590:51;8635:5;8590:51;;;8654:83;8730:6;8725:3;8654:83;;;8647:90;;8758:53;8805:5;8758:53;;;8831:7;8859:1;8844:255;8869:6;8866:1;8863:13;8844:255;;;8936:6;8930:13;8957:61;9014:3;8999:13;8957:61;;;8950:68;;9035:57;9085:6;9035:57;;;9025:67;-1:-1;;8891:1;8884:9;8844:255;;9119:94;9186:21;9201:5;9186:21;;9331:113;9414:24;9432:5;9414:24;;9474:293;;9584:70;9647:6;9642:3;9584:70;;;9577:77;;9666:43;9702:6;9697:3;9690:5;9666:43;;;9731:29;9753:6;9731:29;;;9722:39;;;;9570:197;-1:-1;;;9570:197;9775:170;9880:59;9933:5;9880:59;;9953:372;;10113:67;10177:2;10172:3;10113:67;;;10213:34;10193:55;;-1:-1;;;10277:2;10268:12;;10261:27;10316:2;10307:12;;10099:226;-1:-1;;10099:226;10654:330;;10814:67;10878:2;10873:3;10814:67;;;10914:32;10894:53;;10975:2;10966:12;;10800:184;-1:-1;;10800:184;10993:372;;11153:67;11217:2;11212:3;11153:67;;;11253:34;11233:55;;-1:-1;;;11317:2;11308:12;;11301:27;11356:2;11347:12;;11139:226;-1:-1;;11139:226;11374:381;;11534:67;11598:2;11593:3;11534:67;;;11634:34;11614:55;;-1:-1;;;11698:2;11689:12;;11682:36;11746:2;11737:12;;11520:235;-1:-1;;11520:235;11764:330;;11924:67;11988:2;11983:3;11924:67;;;12024:32;12004:53;;12085:2;12076:12;;11910:184;-1:-1;;11910:184;12102:100;12173:23;12190:5;12173:23;;12326:213;12444:2;12429:18;;12458:71;12433:9;12502:6;12458:71;;12546:324;12692:2;12677:18;;12706:71;12681:9;12750:6;12706:71;;;12788:72;12856:2;12845:9;12841:18;12832:6;12788:72;;;12663:207;;;;;;12877:493;13107:3;13092:19;;13122:111;13096:9;13206:6;13122:111;;;13244:116;13356:2;13345:9;13341:18;13332:6;13244:116;;13377:308;13515:2;13500:18;;13529:65;13504:9;13567:6;13529:65;;;13605:70;13671:2;13660:9;13656:18;13647:6;13605:70;;13692:213;13810:2;13795:18;;13824:71;13799:9;13868:6;13824:71;;13912:320;14056:2;14041:18;;14070:71;14045:9;14114:6;14070:71;;14239:516;14433:2;14447:47;;;14418:18;;14508:82;14418:18;14576:6;14568;14508:82;;;14500:90;;14638:9;14632:4;14628:20;14623:2;14612:9;14608:18;14601:48;14663:82;14740:4;14731:6;14723;14663:82;;;14655:90;14404:351;-1:-1;;;;;;14404:351;14762:257;14902:2;14887:18;;14916:93;14891:9;14982:6;14916:93;;15026:407;15217:2;15231:47;;;15202:18;;15292:131;15202:18;15292:131;;15854:407;16045:2;16059:47;;;16030:18;;16120:131;16030:18;16120:131;;16268:407;16459:2;16473:47;;;16444:18;;16534:131;16444:18;16534:131;;16682:407;16873:2;16887:47;;;16858:18;;16948:131;16858:18;16948:131;;17096:407;17287:2;17301:47;;;17272:18;;17362:131;17272:18;17362:131;;17510:209;17626:2;17611:18;;17640:69;17615:9;17682:6;17640:69;;17726:256;17788:2;17782:9;17814:17;;;-1:-1;;;;;17874:34;;17910:22;;;17871:62;17868:2;;;17946:1;17943;17936:12;17868:2;17962;17955:22;17766:216;;-1:-1;17766:216;17989:304;;-1:-1;;;;;18140:6;18137:30;18134:2;;;18180:1;18177;18170:12;18134:2;-1:-1;18215:4;18203:17;;;18268:15;;18071:222;18300:94;18381:3;18367:27;18504:105;-1:-1;18595:4;;18573:36;18730:103;18823:4;18814:14;;18800:33;18953:137;19081:3;19059:31;-1:-1;19059:31;19247:162;19349:19;;;19398:4;19389:14;;19342:67;19589:91;;19651:24;19669:5;19651:24;;19687:85;19753:13;19746:21;;19729:43;19858:121;-1:-1;;;;;19920:54;;19903:76;20065:96;-1:-1;;;;;20126:30;;20109:52;20168:165;;20269:59;20322:5;20269:59;;20478:145;20559:6;20554:3;20549;20536:30;-1:-1;20615:1;20597:16;;20590:27;20529:94;20631:97;20719:2;20699:14;-1:-1;;20695:28;;20679:49;20736:117;20805:24;20823:5;20805:24;;;20798:5;20795:35;20785:2;;20844:1;20841;20834:12;20785:2;20779:74;;20860:117;20929:24;20947:5;20929:24;;21108:115;21176:23;21193:5;21176:23;",
  "source": "\npragma solidity ^0.5.12;\npragma experimental ABIEncoderV2;\n\nimport { OracleHub, OracleHubPriceData } from \"../../oracle-hub/open-oracle/OracleHub.sol\";\n\n/**\n * @title OracleHubMock allows us to put custom price data into the Oracle without signing messages\n * @notice Values stored in this contract should represent a relative price to pegged asset\n * @author Stability Labs\n */\ncontract OracleHubMock is OracleHub {\n\n\n    constructor(\n        address _governance,\n        address _nexus,\n        OracleHubPriceData _data,\n        address[] memory _sources\n    )\n        OracleHub(\n            _governance,\n            _nexus,\n            _data,\n            _sources\n        )\n        public\n    {}\n\n\n    function addMockPrices(\n        uint64[] calldata values,\n        // uint64[] calldata timestamps,\n        bytes32[] calldata symbols\n    ) external {\n        require(values.length == symbols.length, \"values and symbols must be 1:1\");\n\n        // Recalculate the asset prices for the symbols to update\n        for (uint i = 0; i < values.length; i++) {\n            prices[symbols[i]] = values[i];\n        }\n    }\n\n}\n",
  "sourcePath": "/Users/james/mstable/mStable-contracts/contracts/z_mocks/oracles/OracleHubMock.sol",
  "ast": {
    "absolutePath": "/Users/james/mstable/mStable-contracts/contracts/z_mocks/oracles/OracleHubMock.sol",
    "exportedSymbols": {
      "OracleHubMock": [
        10656
      ]
    },
    "id": 10657,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10588,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:24:63"
      },
      {
        "id": 10589,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "26:33:63"
      },
      {
        "absolutePath": "/Users/james/mstable/mStable-contracts/contracts/oracle-hub/open-oracle/OracleHub.sol",
        "file": "../../oracle-hub/open-oracle/OracleHub.sol",
        "id": 10592,
        "nodeType": "ImportDirective",
        "scope": 10657,
        "sourceUnit": 7961,
        "src": "61:91:63",
        "symbolAliases": [
          {
            "foreign": 10590,
            "local": null
          },
          {
            "foreign": 10591,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10593,
              "name": "OracleHub",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7960,
              "src": "406:9:63",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OracleHub_$7960",
                "typeString": "contract OracleHub"
              }
            },
            "id": 10594,
            "nodeType": "InheritanceSpecifier",
            "src": "406:9:63"
          }
        ],
        "contractDependencies": [
          1641,
          7216,
          7960,
          7988,
          9581,
          9936
        ],
        "contractKind": "contract",
        "documentation": "@title OracleHubMock allows us to put custom price data into the Oracle without signing messages\n@notice Values stored in this contract should represent a relative price to pegged asset\n@author Stability Labs",
        "fullyImplemented": true,
        "id": 10656,
        "linearizedBaseContracts": [
          10656,
          7960,
          7216,
          9936,
          9581,
          7988,
          1641
        ],
        "name": "OracleHubMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10612,
              "nodeType": "Block",
              "src": "697:2:63",
              "statements": []
            },
            "documentation": null,
            "id": 10613,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10606,
                    "name": "_governance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10596,
                    "src": "595:11:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10607,
                    "name": "_nexus",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10598,
                    "src": "620:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10608,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10600,
                    "src": "640:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleHubPriceData_$8193",
                      "typeString": "contract OracleHubPriceData"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10609,
                    "name": "_sources",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10603,
                    "src": "659:8:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 10610,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10605,
                  "name": "OracleHub",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7960,
                  "src": "572:9:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_OracleHub_$7960_$",
                    "typeString": "type(contract OracleHub)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "572:105:63"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10596,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 10613,
                  "src": "445:19:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10598,
                  "name": "_nexus",
                  "nodeType": "VariableDeclaration",
                  "scope": 10613,
                  "src": "474:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10600,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 10613,
                  "src": "498:24:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OracleHubPriceData_$8193",
                    "typeString": "contract OracleHubPriceData"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10599,
                    "name": "OracleHubPriceData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8193,
                    "src": "498:18:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleHubPriceData_$8193",
                      "typeString": "contract OracleHubPriceData"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10603,
                  "name": "_sources",
                  "nodeType": "VariableDeclaration",
                  "scope": 10613,
                  "src": "532:25:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10601,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "532:7:63",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10602,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "532:9:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "435:128:63"
            },
            "returnParameters": {
              "id": 10611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:0:63"
            },
            "scope": 10656,
            "src": "424:275:63",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10654,
              "nodeType": "Block",
              "src": "855:263:63",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10623,
                            "name": "values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10616,
                            "src": "873:6:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                              "typeString": "uint64[] calldata"
                            }
                          },
                          "id": 10624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "873:13:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10625,
                            "name": "symbols",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10619,
                            "src": "890:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 10626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "890:14:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "873:31:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c75657320616e642073796d626f6c73206d75737420626520313a31",
                        "id": 10628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "906:32:63",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb74704ce0cf01827bf851463d4abc84abdc1ae32a98b255aa4f81fdbdba9750",
                          "typeString": "literal_string \"values and symbols must be 1:1\""
                        },
                        "value": "values and symbols must be 1:1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb74704ce0cf01827bf851463d4abc84abdc1ae32a98b255aa4f81fdbdba9750",
                          "typeString": "literal_string \"values and symbols must be 1:1\""
                        }
                      ],
                      "id": 10622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11751,
                        11752
                      ],
                      "referencedDeclaration": 11752,
                      "src": "865:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:74:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10630,
                  "nodeType": "ExpressionStatement",
                  "src": "865:74:63"
                },
                {
                  "body": {
                    "id": 10652,
                    "nodeType": "Block",
                    "src": "1057:55:63",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 10650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 10642,
                              "name": "prices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7607,
                              "src": "1071:6:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                                "typeString": "mapping(bytes32 => uint64)"
                              }
                            },
                            "id": 10646,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 10643,
                                "name": "symbols",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10619,
                                "src": "1078:7:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 10645,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 10644,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10632,
                                "src": "1086:1:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1078:10:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1071:18:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 10647,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10616,
                              "src": "1092:6:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                                "typeString": "uint64[] calldata"
                              }
                            },
                            "id": 10649,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 10648,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10632,
                              "src": "1099:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1092:9:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "1071:30:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 10651,
                        "nodeType": "ExpressionStatement",
                        "src": "1071:30:63"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10635,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10632,
                      "src": "1033:1:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10636,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10616,
                        "src": "1037:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                          "typeString": "uint64[] calldata"
                        }
                      },
                      "id": 10637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1037:13:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1033:17:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10653,
                  "initializationExpression": {
                    "assignments": [
                      10632
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10632,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 10653,
                        "src": "1021:6:63",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10631,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1021:4:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 10634,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1030:1:63",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1021:10:63"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 10640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1052:3:63",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 10639,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10632,
                        "src": "1052:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10641,
                    "nodeType": "ExpressionStatement",
                    "src": "1052:3:63"
                  },
                  "nodeType": "ForStatement",
                  "src": "1016:96:63"
                }
              ]
            },
            "documentation": null,
            "id": 10655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMockPrices",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10616,
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 10655,
                  "src": "738:24:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                    "typeString": "uint64[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10614,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "738:6:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 10615,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "738:8:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
                      "typeString": "uint64[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10619,
                  "name": "symbols",
                  "nodeType": "VariableDeclaration",
                  "scope": 10655,
                  "src": "813:26:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10617,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "813:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 10618,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "813:9:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "728:117:63"
            },
            "returnParameters": {
              "id": 10621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:63"
            },
            "scope": 10656,
            "src": "706:412:63",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10657,
        "src": "380:741:63"
      }
    ],
    "src": "1:1121:63"
  },
  "legacyAST": {
    "absolutePath": "/Users/james/mstable/mStable-contracts/contracts/z_mocks/oracles/OracleHubMock.sol",
    "exportedSymbols": {
      "OracleHubMock": [
        10656
      ]
    },
    "id": 10657,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10588,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:24:63"
      },
      {
        "id": 10589,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "26:33:63"
      },
      {
        "absolutePath": "/Users/james/mstable/mStable-contracts/contracts/oracle-hub/open-oracle/OracleHub.sol",
        "file": "../../oracle-hub/open-oracle/OracleHub.sol",
        "id": 10592,
        "nodeType": "ImportDirective",
        "scope": 10657,
        "sourceUnit": 7961,
        "src": "61:91:63",
        "symbolAliases": [
          {
            "foreign": 10590,
            "local": null
          },
          {
            "foreign": 10591,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10593,
              "name": "OracleHub",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7960,
              "src": "406:9:63",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OracleHub_$7960",
                "typeString": "contract OracleHub"
              }
            },
            "id": 10594,
            "nodeType": "InheritanceSpecifier",
            "src": "406:9:63"
          }
        ],
        "contractDependencies": [
          1641,
          7216,
          7960,
          7988,
          9581,
          9936
        ],
        "contractKind": "contract",
        "documentation": "@title OracleHubMock allows us to put custom price data into the Oracle without signing messages\n@notice Values stored in this contract should represent a relative price to pegged asset\n@author Stability Labs",
        "fullyImplemented": true,
        "id": 10656,
        "linearizedBaseContracts": [
          10656,
          7960,
          7216,
          9936,
          9581,
          7988,
          1641
        ],
        "name": "OracleHubMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10612,
              "nodeType": "Block",
              "src": "697:2:63",
              "statements": []
            },
            "documentation": null,
            "id": 10613,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10606,
                    "name": "_governance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10596,
                    "src": "595:11:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10607,
                    "name": "_nexus",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10598,
                    "src": "620:6:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10608,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10600,
                    "src": "640:5:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleHubPriceData_$8193",
                      "typeString": "contract OracleHubPriceData"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 10609,
                    "name": "_sources",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10603,
                    "src": "659:8:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  }
                ],
                "id": 10610,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10605,
                  "name": "OracleHub",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7960,
                  "src": "572:9:63",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_OracleHub_$7960_$",
                    "typeString": "type(contract OracleHub)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "572:105:63"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10596,
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 10613,
                  "src": "445:19:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10598,
                  "name": "_nexus",
                  "nodeType": "VariableDeclaration",
                  "scope": 10613,
                  "src": "474:14:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10600,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 10613,
                  "src": "498:24:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OracleHubPriceData_$8193",
                    "typeString": "contract OracleHubPriceData"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10599,
                    "name": "OracleHubPriceData",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8193,
                    "src": "498:18:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleHubPriceData_$8193",
                      "typeString": "contract OracleHubPriceData"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10603,
                  "name": "_sources",
                  "nodeType": "VariableDeclaration",
                  "scope": 10613,
                  "src": "532:25:63",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10601,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "532:7:63",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 10602,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "532:9:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "435:128:63"
            },
            "returnParameters": {
              "id": 10611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:0:63"
            },
            "scope": 10656,
            "src": "424:275:63",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10654,
              "nodeType": "Block",
              "src": "855:263:63",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10623,
                            "name": "values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10616,
                            "src": "873:6:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                              "typeString": "uint64[] calldata"
                            }
                          },
                          "id": 10624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "873:13:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10625,
                            "name": "symbols",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10619,
                            "src": "890:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 10626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "890:14:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "873:31:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c75657320616e642073796d626f6c73206d75737420626520313a31",
                        "id": 10628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "906:32:63",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb74704ce0cf01827bf851463d4abc84abdc1ae32a98b255aa4f81fdbdba9750",
                          "typeString": "literal_string \"values and symbols must be 1:1\""
                        },
                        "value": "values and symbols must be 1:1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb74704ce0cf01827bf851463d4abc84abdc1ae32a98b255aa4f81fdbdba9750",
                          "typeString": "literal_string \"values and symbols must be 1:1\""
                        }
                      ],
                      "id": 10622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11751,
                        11752
                      ],
                      "referencedDeclaration": 11752,
                      "src": "865:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:74:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10630,
                  "nodeType": "ExpressionStatement",
                  "src": "865:74:63"
                },
                {
                  "body": {
                    "id": 10652,
                    "nodeType": "Block",
                    "src": "1057:55:63",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 10650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 10642,
                              "name": "prices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7607,
                              "src": "1071:6:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint64_$",
                                "typeString": "mapping(bytes32 => uint64)"
                              }
                            },
                            "id": 10646,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 10643,
                                "name": "symbols",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10619,
                                "src": "1078:7:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                  "typeString": "bytes32[] calldata"
                                }
                              },
                              "id": 10645,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 10644,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10632,
                                "src": "1086:1:63",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1078:10:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1071:18:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 10647,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10616,
                              "src": "1092:6:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                                "typeString": "uint64[] calldata"
                              }
                            },
                            "id": 10649,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 10648,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10632,
                              "src": "1099:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1092:9:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "1071:30:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 10651,
                        "nodeType": "ExpressionStatement",
                        "src": "1071:30:63"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10635,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10632,
                      "src": "1033:1:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10636,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10616,
                        "src": "1037:6:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                          "typeString": "uint64[] calldata"
                        }
                      },
                      "id": 10637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1037:13:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1033:17:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10653,
                  "initializationExpression": {
                    "assignments": [
                      10632
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 10632,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 10653,
                        "src": "1021:6:63",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 10631,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1021:4:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 10634,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1030:1:63",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1021:10:63"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 10640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1052:3:63",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 10639,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10632,
                        "src": "1052:1:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 10641,
                    "nodeType": "ExpressionStatement",
                    "src": "1052:3:63"
                  },
                  "nodeType": "ForStatement",
                  "src": "1016:96:63"
                }
              ]
            },
            "documentation": null,
            "id": 10655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMockPrices",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10616,
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 10655,
                  "src": "738:24:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint64_$dyn_calldata_ptr",
                    "typeString": "uint64[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10614,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "738:6:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "id": 10615,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "738:8:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
                      "typeString": "uint64[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10619,
                  "name": "symbols",
                  "nodeType": "VariableDeclaration",
                  "scope": 10655,
                  "src": "813:26:63",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10617,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "813:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 10618,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "813:9:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "728:117:63"
            },
            "returnParameters": {
              "id": 10621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:63"
            },
            "scope": 10656,
            "src": "706:412:63",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10657,
        "src": "380:741:63"
      }
    ],
    "src": "1:1121:63"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-02-05T09:31:38.645Z",
  "devdoc": {
    "author": "Stability Labs",
    "methods": {
      "addSource(address)": {
        "details": "Whitelist a source for use in medianizing",
        "params": {
          "_newSource": "Address of the whitelisted source"
        }
      },
      "medianPrice(bytes32,address[])": {
        "params": {
          "sources_": "The sources to use when calculating the median price",
          "symbol": "The symbol to calculate the median price of"
        },
        "return": "median The median price over the set of sources"
      },
      "postPrices(bytes[],bytes[],bytes32[])": {
        "details": "We let anyone pay to post anything, but only sources count for prices.",
        "params": {
          "messages": "The messages to post to the oracle",
          "signatures": "The signatures for the corresponding messages"
        }
      },
      "readPrice(bytes32)": {
        "details": "Read a medianized price from our storage",
        "params": {
          "_key": "Key of the asset to read price"
        },
        "return": "bool price is freshuint64 Price as $1 == 1e6"
      },
      "readPricePair(bytes32[2])": {
        "details": "Read a medianized price from our storage",
        "params": {
          "_keys": "Keys of the asset to read price"
        },
        "return": "bool price is freshuint64 Price as $1 == 1e6"
      },
      "updateModule(bytes32,address)": {
        "details": "Higher order function to allow for module updates only via publisher",
        "params": {
          "_key": "Key of the new module",
          "_newAddress": "Address of the new module"
        }
      }
    },
    "title": "OracleHubMock allows us to put custom price data into the Oracle without signing messages"
  },
  "userdoc": {
    "methods": {
      "medianPrice(bytes32,address[])": {
        "notice": "Calculates the median price over any set of sources"
      },
      "postPrices(bytes[],bytes[],bytes32[])": {
        "notice": "Primary entry point to post and recalculate prices"
      }
    },
    "notice": "Values stored in this contract should represent a relative price to pegged asset"
  }
}