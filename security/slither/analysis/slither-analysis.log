
- Fetching solc version list from solc-bin. Attempt #1

INFO:Detectors:[91m


Reentrancy in DelayedProxyAdmin.acceptUpgradeRequest(address) (upgradability/DelayedProxyAdmin.sol#88-108):
	External calls:
	- oldImpl = getProxyImplementation(_proxy) (upgradability/DelayedProxyAdmin.sol#97)
	- AdminUpgradeabilityProxy(_proxy).upgradeTo(newImpl) (upgradability/DelayedProxyAdmin.sol#101)
	- AdminUpgradeabilityProxy(_proxy).upgradeToAndCall.value(msg.value)(newImpl,data) (upgradability/DelayedProxyAdmin.sol#103)
	External calls sending eth:
	- AdminUpgradeabilityProxy(_proxy).upgradeToAndCall.value(msg.value)(newImpl,data) (upgradability/DelayedProxyAdmin.sol#103)
	State variables written after the call(s):
	- DelayedProxyAdmin.requests (upgradability/DelayedProxyAdmin.sol#37) in delete requests[_proxy] (upgradability/DelayedProxyAdmin.sol#106)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities[0m


## README ##
- "External calls": Ignoring, as those are standard OZ lib calls and controlled by Governor
- "External calls sending eth": Ignoring, as those are standard OZ lib calls and controlled by Governor
- ## FIXED ## "State variables written after the call(s)"


INFO:Detectors:[93m
Reentrancy in Masset._mintTo(address,uint256,address) (masset/Masset.sol#166-201):
	External calls:
	- props = basketManager.prepareForgeBasset(_bAsset,true) (masset/Masset.sol#177)
	- quantityTransferred = MassetHelpers.transferTokens(msg.sender,integrator,_bAsset,xferCharged,_bAssetQuantity) (masset/Masset.sol#183)
	- quantityDeposited = IPlatformIntegration(integrator).deposit(_bAsset,quantityTransferred,xferCharged) (masset/Masset.sol#184)
	- basketManager.increaseVaultBalance(props.index,integrator,quantityDeposited) (masset/Masset.sol#191)
	State variables written after the call(s):
	- ERC20._totalSupply (openzeppelin-solidity/contracts/token/ERC20/ERC20.sol#36) in _mint(_recipient,ratioedBasset) (masset/Masset.sol#197)

## README ##
- "External calls": `basketManager` is trusted contract, `MassetHelpers` trusted library
	- `IPlatformIntegration` trusted contract, only whitelisted contracts can call this function.
- "State variables written after the call(s)": All the contracts are trusted



Reentrancy in Masset._redeemTo(address,uint256,address) (masset/Masset.sol#323-365):
	External calls:
	- props = basketManager.prepareForgeBasset(_bAsset,false) (masset/Masset.sol#337)
	- basketManager.decreaseVaultBalance(props.index,props.integrator,_bAssetQuantity) (masset/Masset.sol#349)
	State variables written after the call(s):
	- ERC20._totalSupply (openzeppelin-solidity/contracts/token/ERC20/ERC20.sol#36) in _burn(msg.sender,massetQuantity) (masset/Masset.sol#358)


## README ##
- "External calls:": trusted contracts
- "State variables written after the call(s):": `IPlatformIntegration` is trusted contract


Reentrancy in BasketManager.collectInterest() (masset/BasketManager.sol#127-161):
	External calls:
	- balance = IPlatformIntegration(integrations[i]).checkBalance(b.addr) (masset/BasketManager.sol#141)
	State variables written after the call(s):
	- BasketManager.basket (masset/BasketManager.sol#40) in basket.bassets[i].vaultBalance = balance (masset/BasketManager.sol#147)


## README ##
- "External calls:": `IPlatformIntegration` trusted contract. `integrations` addresses are only added by Governor
- "State variables written after the call(s):": `IPlatformIntegration` trusted contract. `integrations` addresses are only added by Governor


Reentrancy in DelayedProxyAdmin.proposeUpgrade(address,address,bytes) (upgradability/DelayedProxyAdmin.sol#51-70):
	External calls:
	- validateProxy(_proxy,_implementation) (upgradability/DelayedProxyAdmin.sol#62)
	State variables written after the call(s):
	- DelayedProxyAdmin.requests (upgradability/DelayedProxyAdmin.sol#37) in request.implementation = _implementation (upgradability/DelayedProxyAdmin.sol#65)
	- DelayedProxyAdmin.requests (upgradability/DelayedProxyAdmin.sol#37) in request.data = _data (upgradability/DelayedProxyAdmin.sol#66)
	- DelayedProxyAdmin.requests (upgradability/DelayedProxyAdmin.sol#37) in request.timestamp = now (upgradability/DelayedProxyAdmin.sol#67)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1[0m



INFO:Detectors:[93m
BasketManager._setBasketWeights(address[],uint256[]) (masset/BasketManager.sol#261-290) contains a tautology or contradiction:
	- require(bool,string)(bassetWeight >= 0,Weight must be positive) (masset/BasketManager.sol#279)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction[0m


## README ##
- ## FIXED ## As `bassetWeight` is `uint256` which is always `>=0`.



INFO:Detectors:[93m
SavingsManager.constructor(address,address,ISavingsContract) (savings/SavingsManager.sol#44-54) ignores return value by IERC20(_mUSD).approve(address(_savingsContract),uint256(- 1)) (savings/SavingsManager.sol#53)


## README ##
- ## FIXED ## using safeApprove().



SavingsManager.withdrawUnallocatedInterest(address,address) (savings/SavingsManager.sol#139-148) ignores return value by mAsset.transfer(_recipient,balance) (savings/SavingsManager.sol#145)


## README ##
- ## FIXED ## using safeTransfer().


MassetHelpers.transferTokens(msg.sender,address(this),_reserve,true,_amount) (z_mocks/masset/platform-integrations/MockAave.sol#51)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return[0m
INFO:Detectors:[92m
Nexus.constructor(address)._governor (nexus/Nexus.sol#61) shadows:
	- Governable._governor (governance/Governable.sol#14) (state variable)
Nexus.initialize(bytes32[],address[],bool[],address)._governor (nexus/Nexus.sol#80) shadows:
	- Governable._governor (governance/Governable.sol#14) (state variable)
ClaimableGovernor.constructor(address)._governor (governance/ClaimableGovernor.sol#26) shadows:
	- Governable._governor (governance/Governable.sol#14) (state variable)
DelayedClaimableGovernor.constructor(address,uint256)._governor (governance/DelayedClaimableGovernor.sol#25) shadows:
	- Governable._governor (governance/Governable.sol#14) (state variable)
AdminUpgradeabilityProxy.constructor(address,address,bytes)._admin (@openzeppelin/upgrades/contracts/upgradeability/AdminUpgradeabilityProxy.sol#20) shadows:
	- BaseAdminUpgradeabilityProxy._admin() (@openzeppelin/upgrades/contracts/upgradeability/BaseAdminUpgradeabilityProxy.sol#94-99) (function)
InitializableAdminUpgradeabilityProxy.initialize(address,address,bytes)._admin (@openzeppelin/upgrades/contracts/upgradeability/InitializableAdminUpgradeabilityProxy.sol#21) shadows:
	- BaseAdminUpgradeabilityProxy._admin() (@openzeppelin/upgrades/contracts/upgradeability/BaseAdminUpgradeabilityProxy.sol#94-99) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
BasketManager.collectInterest() (masset/BasketManager.sol#127-161) has external calls inside a loop: balance = IPlatformIntegration(integrations[i]).checkBalance(b.addr) (masset/BasketManager.sol#141)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop[0m
INFO:Detectors:[92m




Reentrancy in Masset._mintTo(uint32,uint256[],address) (masset/Masset.sol#210-261):
	External calls:
	- props = basketManager.prepareForgeBassets(_bassetsBitmap,uint8(len),true) (masset/Masset.sol#222-223)
	State variables written after the call(s):
	- ERC20._balances (openzeppelin-solidity/contracts/token/ERC20/ERC20.sol#32) in _mint(_recipient,massetQuantity) (masset/Masset.sol#257)
	- ERC20._totalSupply (openzeppelin-solidity/contracts/token/ERC20/ERC20.sol#36) in _mint(_recipient,massetQuantity) (masset/Masset.sol#257)


## README ##
- "External calls:": `basketManager` is a trusted contract.
- "State variables written after the call(s):": `MassetHelpers`, `IPlatformIntegration`, `basketManager`, `forgeValidator` are  trusted contracts.




Reentrancy in Masset._redeemTo(uint32,uint256[],address) (masset/Masset.sol#372-430):
	External calls:
	- props = basketManager.prepareForgeBassets(_bassetsBitmap,uint8(redemptionAssetCount),false) (masset/Masset.sol#388-389)
	State variables written after the call(s):
	- ERC20._balances (openzeppelin-solidity/contracts/token/ERC20/ERC20.sol#32) in _payRedemptionFee(massetQuantity,msg.sender) (masset/Masset.sol#413)
	- ERC20._balances (openzeppelin-solidity/contracts/token/ERC20/ERC20.sol#32) in _burn(msg.sender,massetQuantity) (masset/Masset.sol#419)
	- ERC20._totalSupply (openzeppelin-solidity/contracts/token/ERC20/ERC20.sol#36) in _burn(msg.sender,massetQuantity) (masset/Masset.sol#419)


## README ##
- "External calls:": `basketManager` is trusted contract.
- "State variables written after the call(s):": `basketManager`, `forgeValidator`, `IPlatformIntegration` are trusted contracts.


Reentrancy in Masset.collectInterest() (masset/Masset.sol#514-527):
	External calls:
	- (interestCollected,bitmap,gains) = basketManager.collectInterest() (masset/Masset.sol#520)
	State variables written after the call(s):
	- ERC20._balances (openzeppelin-solidity/contracts/token/ERC20/ERC20.sol#32) in _mint(msg.sender,interestCollected) (masset/Masset.sol#523)
	- ERC20._totalSupply (openzeppelin-solidity/contracts/token/ERC20/ERC20.sol#36) in _mint(msg.sender,interestCollected) (masset/Masset.sol#523)


## README ##
- "External calls:": `basketManager` is trusted contract.
- "State variables written after the call(s):": `basketManager` is trusted contact.


Reentrancy in SavingsContract.depositInterest(uint256) (savings/SavingsContract.sol#74-95):
	External calls:
	- require(bool,string)(mUSD.transferFrom(msg.sender,address(this),_amount),Must receive tokens) (savings/SavingsContract.sol#81)
	State variables written after the call(s):
	- SavingsContract.exchangeRate (savings/SavingsContract.sol#37) in exchangeRate = totalSavings.divPrecisely(totalCredits) (savings/SavingsContract.sol#91)
	- SavingsContract.totalSavings (savings/SavingsContract.sol#31) in totalSavings = totalSavings.add(_amount) (savings/SavingsContract.sol#82)


## README ##
- "External calls:": `mUSD` is trusted contract.
- "State variables written after the call(s):": `mUSD` is trusted contract.


Reentrancy in SavingsContract.depositSavings(uint256) (savings/SavingsContract.sol#103-126):
	External calls:
	- ISavingsManager(_savingsManager()).collectAndDistributeInterest(address(mUSD)) (savings/SavingsContract.sol#111)
	- require(bool,string)(mUSD.transferFrom(msg.sender,address(this),_amount),Must receive tokens) (savings/SavingsContract.sol#115)
	State variables written after the call(s):
	- SavingsContract.creditBalances (savings/SavingsContract.sol#38) in creditBalances[msg.sender] = creditBalances[msg.sender].add(creditsIssued) (savings/SavingsContract.sol#123)
	- SavingsContract.totalCredits (savings/SavingsContract.sol#32) in totalCredits = totalCredits.add(creditsIssued) (savings/SavingsContract.sol#120)
	- SavingsContract.totalSavings (savings/SavingsContract.sol#31) in totalSavings = totalSavings.add(_amount) (savings/SavingsContract.sol#116)

## README ##
- "External calls:": `ISavingsManager`, `mUSD` are trusted contracts. However, tried to fix Reentrancy by moving SSTORE operations before external call.
- 


Reentrancy in SavingsManager.collectAndDistributeInterest(address) (savings/SavingsManager.sol#86-133):
	External calls:
	- (interestCollected,totalSupply) = mAsset.collectInterest() (savings/SavingsManager.sol#99)
	Event emitted after the call(s):
	- InterestCollected(_mAsset,interestCollected,totalSupply,extrapolatedAPY) (savings/SavingsManager.sol#118)
	- InterestCollected(_mAsset,0,totalSupply,0) (savings/SavingsManager.sol#130)

## README ##
- "External calls:": `mAsset` is trusted contract.


Reentrancy in CompoundIntegration.deposit(address,uint256,bool) (masset/platform-integrations/CompoundIntegration.sol#31-60):
	External calls:
	- prevBal = _checkBalance(cToken) (masset/platform-integrations/CompoundIntegration.sol#50)
	- assert(bool)(cToken.mint(_amount) == 0) (masset/platform-integrations/CompoundIntegration.sol#51)
	- newBal = _checkBalance(cToken) (masset/platform-integrations/CompoundIntegration.sol#52)
	- assert(bool)(cToken.mint(_amount) == 0) (masset/platform-integrations/CompoundIntegration.sol#56)
	Event emitted after the call(s):
	- Deposit(_bAsset,address(cToken),quantityDeposited) (masset/platform-integrations/CompoundIntegration.sol#59)


## README ##
- ## FIXED ## "External calls:": Calls to `deposit()` function from the `Masset` contract is non-reentrant


Reentrancy in AaveIntegration.deposit(address,uint256,bool) (masset/platform-integrations/AaveIntegration.sol#29-59):
	External calls:
	- _getLendingPool().deposit(_bAsset,_amount,referralCode) (masset/platform-integrations/AaveIntegration.sol#50)
	- _getLendingPool().deposit(_bAsset,_amount,referralCode) (masset/platform-integrations/AaveIntegration.sol#55)
	Event emitted after the call(s):
	- Deposit(_bAsset,address(aToken),quantityDeposited) (masset/platform-integrations/AaveIntegration.sol#58)


## README ##
- ## FIXED ## "External calls:": Calls to `deposit()` function from the `Masset` contract is non-reentrant


Reentrancy in SavingsContract.redeem(uint256) (savings/SavingsContract.sol#133-153):
	External calls:
	- require(bool,string)(mUSD.transfer(msg.sender,massetReturned),Must send tokens) (savings/SavingsContract.sol#150)
	Event emitted after the call(s):
	- CreditsRedeemed(msg.sender,_credits,massetReturned) (savings/SavingsContract.sol#152)

## README ##
- "External calls:": `mUSD` is trusted contract


Reentrancy in SavingsManager.setSavingsContract(address,address) (savings/SavingsManager.sol#60-71):
	External calls:
	- IERC20(_mAsset).safeApprove(address(_savingsContract),0) (savings/SavingsManager.sol#67)
	- IERC20(_mAsset).safeApprove(address(_savingsContract),uint256(- 1)) (savings/SavingsManager.sol#68)
	Event emitted after the call(s):
	- SavingsContractEnabled(_mAsset,_savingsContract) (savings/SavingsManager.sol#70)

## README ##
- ## FIXED ##


Reentrancy in CompoundIntegration.withdraw(address,address,uint256,bool) (masset/platform-integrations/CompoundIntegration.sol#69-88):
	External calls:
	- require(bool,string)(cToken.redeemUnderlying(_amount) == 0,something went wrong) (masset/platform-integrations/CompoundIntegration.sol#82)
	- IERC20(_bAsset).safeTransfer(_receiver,_amount) (masset/platform-integrations/CompoundIntegration.sol#85)
	Event emitted after the call(s):
	- Withdrawal(_bAsset,address(cToken),_amount) (masset/platform-integrations/CompoundIntegration.sol#87)

## README ##
- ## FIXED ## "External calls:": `withdraw` function call is protected with non-reentrant guard via Masset


Reentrancy in AaveIntegration.withdraw(address,address,uint256,bool) (masset/platform-integrations/AaveIntegration.sol#68-98):
	External calls:
	- aToken.redeem(_amount) (masset/platform-integrations/AaveIntegration.sol#87)
	- aToken.redeem(_amount) (masset/platform-integrations/AaveIntegration.sol#91)
	- IERC20(_bAsset).safeTransfer(_receiver,quantityWithdrawn) (masset/platform-integrations/AaveIntegration.sol#95)
	Event emitted after the call(s):
	- Withdrawal(_bAsset,address(aToken),quantityWithdrawn) (masset/platform-integrations/AaveIntegration.sol#97)

## README ##
- ## FIXED ## "External calls:": `withdraw` function call is protected with non-reentrant guard via Masset


Reentrancy in SavingsManager.withdrawUnallocatedInterest(address,address) (savings/SavingsManager.sol#139-148):
	External calls:
	- mAsset.transfer(_recipient,balance) (savings/SavingsManager.sol#145)
	Event emitted after the call(s):
	- InterestWithdrawnByGovernor(_mAsset,_recipient,balance) (savings/SavingsManager.sol#147)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3[0m

## README ##
- ## FIXED ##: Emitting event before external call.


INFO:Detectors:[92m
INFO:Detectors:[92m
Different versions of Solidity is used in :
	- Version used: ['0.5.16', '>=0.4.24<0.7.0', '^0.5.0']
	- 0.5.16 (masset/BasketManager.sol#1)
	- ABIEncoderV2 (masset/BasketManager.sol#2)
	- 0.5.16 (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#1)
	- 0.5.16 (interfaces/IMasset.sol#1)
	- 0.5.16 (interfaces/ISavingsManager.sol#1)
	- 0.5.16 (masset/platform-integrations/IAave.sol#1)
	- 0.5.16 (masset/MassetToken.sol#1)
	- 0.5.16 (savings/SavingsContract.sol#1)
	- 0.5.16 (interfaces/IBasketManager.sol#1)
	- ABIEncoderV2 (interfaces/IBasketManager.sol#2)
	- 0.5.16 (savings/SavingsManager.sol#1)
	- 0.5.16 (shared/CommonHelpers.sol#1)
	- 0.5.16 (z_mocks/shared/MockPausableModule.sol#1)
	- 0.5.16 (z_mocks/shared/MockERC20WithFee.sol#1)
	- 0.5.16 (z_mocks/masset/platform-integrations/MockCToken.sol#1)
	- 0.5.16 (masset/Masset.sol#1)
	- ABIEncoderV2 (masset/Masset.sol#2)
	- 0.5.16 (z_mocks/shared/MockERC20.sol#1)
	- 0.5.16 (masset/mUSD.sol#1)
	- ABIEncoderV2 (masset/mUSD.sol#2)
	- 0.5.16 (z_mocks/upgradability/MockImplementation.sol#1)
	- 0.5.16 (masset/shared/MassetStructs.sol#1)
	- 0.5.16 (interfaces/INexus.sol#1)
	- 0.5.16 (governance/InitializableGovernableWhitelist.sol#1)
	- 0.5.16 (nexus/Nexus.sol#1)
	- 0.5.16 (interfaces/IPlatformIntegration.sol#1)
	- 0.5.16 (masset/shared/MassetHelpers.sol#1)
	- 0.5.16 (z_mocks/governance/MockGovernable.sol#1)
	- 0.5.16 (z_mocks/masset/platform-integrations/MockCompoundIntegration.sol#1)
	- 0.5.16 (governance/Governable.sol#1)
	- 0.5.16 (shared/InitializableModule.sol#1)
	- 0.5.16 (shared/StableMath.sol#1)
	- 0.5.16 (z_mocks/shared/PublicStableMath.sol#1)
	- 0.5.16 (masset/forge-validator/IForgeValidator.sol#1)
	- ABIEncoderV2 (masset/forge-validator/IForgeValidator.sol#2)
	- 0.5.16 (interfaces/ISavingsContract.sol#1)
	- 0.5.16 (masset/forge-validator/ForgeValidator.sol#1)
	- ABIEncoderV2 (masset/forge-validator/ForgeValidator.sol#2)
	- 0.5.16 (masset/platform-integrations/CompoundIntegration.sol#1)
	- 0.5.16 (z_mocks/shared/MockInitializableModule.sol#1)
	- 0.5.16 (masset/platform-integrations/InitializableAbstractIntegration.sol#1)
	- 0.5.16 (z_mocks/masset/platform-integrations/MockAave.sol#1)
	- 0.5.16 (shared/InitializableModuleKeys.sol#1)
	- 0.5.16 (masset/platform-integrations/AaveIntegration.sol#1)
	- 0.5.16 (z_mocks/shared/MockCommonHelpers.sol#1)
	- 0.5.16 (governance/ClaimableGovernor.sol#1)
	- 0.5.16 (z_mocks/shared/MockModule.sol#1)
	- 0.5.16 (shared/Module.sol#1)
	- 0.5.16 (Migrations.sol#1)
	- 0.5.16 (shared/ModuleKeys.sol#1)
	- 0.5.16 (masset/platform-integrations/ICompound.sol#1)
	- 0.5.16 (governance/DelayedClaimableGovernor.sol#1)
	- 0.5.16 (shared/PausableModule.sol#1)
	- 0.5.16 (z_mocks/shared/MockProxy.sol#1)
	- 0.5.16 (z_mocks/nexus/MockNexus.sol#1)
	- 0.5.16 (upgradability/DelayedProxyAdmin.sol#1)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Pragma version0.5.16 (masset/BasketManager.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (interfaces/IMasset.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version^0.5.0 (openzeppelin-solidity/contracts/access/Roles.sol#1) allows old versions
Pragma version^0.5.0 (@openzeppelin/upgrades/contracts/upgradeability/BaseUpgradeabilityProxy.sol#1) allows old versions
Pragma version0.5.16 (interfaces/ISavingsManager.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/platform-integrations/IAave.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/MassetToken.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (savings/SavingsContract.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (interfaces/IBasketManager.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (savings/SavingsManager.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (shared/CommonHelpers.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version^0.5.0 (@openzeppelin/upgrades/contracts/upgradeability/UpgradeabilityProxy.sol#1) allows old versions
Pragma version0.5.16 (z_mocks/shared/MockPausableModule.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/shared/MockERC20WithFee.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/masset/platform-integrations/MockCToken.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/Masset.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version^0.5.0 (@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol#1) allows old versions
Pragma version0.5.16 (z_mocks/shared/MockERC20.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/mUSD.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/upgradability/MockImplementation.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/shared/MassetStructs.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (interfaces/INexus.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version^0.5.0 (openzeppelin-solidity/contracts/math/SafeMath.sol#1) allows old versions
Pragma version0.5.16 (governance/InitializableGovernableWhitelist.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (nexus/Nexus.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version>=0.4.24<0.7.0 (@openzeppelin/upgrades/contracts/Initializable.sol#1) allows old versions
Pragma version0.5.16 (interfaces/IPlatformIntegration.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/shared/MassetHelpers.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/governance/MockGovernable.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/masset/platform-integrations/MockCompoundIntegration.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (governance/Governable.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version^0.5.0 (openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol#1) allows old versions
Pragma version^0.5.0 (openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol#1) allows old versions
Pragma version0.5.16 (shared/InitializableModule.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (shared/StableMath.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/shared/PublicStableMath.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/forge-validator/IForgeValidator.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version^0.5.0 (openzeppelin-solidity/contracts/utils/Address.sol#1) allows old versions
Pragma version0.5.16 (interfaces/ISavingsContract.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/forge-validator/ForgeValidator.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/platform-integrations/CompoundIntegration.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/shared/MockInitializableModule.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/platform-integrations/InitializableAbstractIntegration.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/masset/platform-integrations/MockAave.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version^0.5.0 (openzeppelin-solidity/contracts/access/roles/MinterRole.sol#1) allows old versions
Pragma version0.5.16 (shared/InitializableModuleKeys.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/platform-integrations/AaveIntegration.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/shared/MockCommonHelpers.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (governance/ClaimableGovernor.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/shared/MockModule.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version^0.5.0 (@openzeppelin/upgrades/contracts/upgradeability/BaseAdminUpgradeabilityProxy.sol#1) allows old versions
Pragma version0.5.16 (shared/Module.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version^0.5.0 (openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol#1) allows old versions
Pragma version0.5.16 (Migrations.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (shared/ModuleKeys.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (masset/platform-integrations/ICompound.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (governance/DelayedClaimableGovernor.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (shared/PausableModule.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (z_mocks/shared/MockProxy.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version^0.5.0 (openzeppelin-solidity/contracts/token/ERC20/ERC20.sol#1) allows old versions
Pragma version^0.5.0 (openzeppelin-solidity/contracts/token/ERC20/IERC20.sol#1) allows old versions
Pragma version^0.5.0 (@openzeppelin/upgrades/contracts/upgradeability/InitializableUpgradeabilityProxy.sol#1) allows old versions
Pragma version0.5.16 (z_mocks/nexus/MockNexus.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version0.5.16 (upgradability/DelayedProxyAdmin.sol#1) necessitates versions too recent to be trusted. Consider deploying with 0.5.11
Pragma version^0.5.0 (@openzeppelin/upgrades/contracts/upgradeability/AdminUpgradeabilityProxy.sol#1) allows old versions
Pragma version^0.5.0 (@openzeppelin/upgrades/contracts/utils/Address.sol#1) allows old versions
Pragma version^0.5.0 (@openzeppelin/upgrades/contracts/upgradeability/InitializableAdminUpgradeabilityProxy.sol#1) allows old versions
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity[0m



INFO:Detectors:[92m
Parameter BasketManager.initialize(address,address,uint256,address[],address[],uint256[],bool[])._nexus (masset/BasketManager.sol#52) is not in mixedCase
Parameter BasketManager.initialize(address,address,uint256,address[],address[],uint256[],bool[])._mAsset (masset/BasketManager.sol#53) is not in mixedCase
Parameter BasketManager.initialize(address,address,uint256,address[],address[],uint256[],bool[])._grace (masset/BasketManager.sol#54) is not in mixedCase
Parameter BasketManager.initialize(address,address,uint256,address[],address[],uint256[],bool[])._bassets (masset/BasketManager.sol#55) is not in mixedCase
Parameter BasketManager.initialize(address,address,uint256,address[],address[],uint256[],bool[])._integrators (masset/BasketManager.sol#56) is not in mixedCase
Parameter BasketManager.initialize(address,address,uint256,address[],address[],uint256[],bool[])._weights (masset/BasketManager.sol#57) is not in mixedCase
Parameter BasketManager.initialize(address,address,uint256,address[],address[],uint256[],bool[])._hasTransferFees (masset/BasketManager.sol#58) is not in mixedCase
Parameter BasketManager.increaseVaultBalance(uint8,address,uint256)._bAsset (masset/BasketManager.sol#110) is not in mixedCase
Parameter BasketManager.increaseVaultBalance(uint8,address,uint256)._increaseAmount (masset/BasketManager.sol#110) is not in mixedCase
Parameter BasketManager.decreaseVaultBalance(uint8,address,uint256)._bAsset (masset/BasketManager.sol#119) is not in mixedCase
Parameter BasketManager.decreaseVaultBalance(uint8,address,uint256)._decreaseAmount (masset/BasketManager.sol#119) is not in mixedCase
Parameter BasketManager.addBasset(address,address,bool)._basset (masset/BasketManager.sol#172) is not in mixedCase
Parameter BasketManager.addBasset(address,address,bool)._integration (masset/BasketManager.sol#172) is not in mixedCase
Parameter BasketManager.addBasset(address,address,bool)._isTransferFeeCharged (masset/BasketManager.sol#172) is not in mixedCase
Parameter BasketManager.setBasketWeights(address[],uint256[])._bAssets (masset/BasketManager.sol#245) is not in mixedCase
Parameter BasketManager.setBasketWeights(address[],uint256[])._weights (masset/BasketManager.sol#246) is not in mixedCase
Parameter BasketManager.setTransferFeesFlag(address,bool)._bAsset (masset/BasketManager.sol#306) is not in mixedCase
Parameter BasketManager.setTransferFeesFlag(address,bool)._flag (masset/BasketManager.sol#306) is not in mixedCase
Parameter BasketManager.setGrace(uint256)._newGrace (masset/BasketManager.sol#319) is not in mixedCase
Parameter BasketManager.removeBasset(address)._assetToRemove (masset/BasketManager.sol#332) is not in mixedCase
Parameter BasketManager.prepareForgeBasset(address,bool)._token (masset/BasketManager.sol#385) is not in mixedCase
Parameter BasketManager.prepareForgeBassets(uint32,uint8,bool)._bitmap (masset/BasketManager.sol#409) is not in mixedCase
Parameter BasketManager.prepareForgeBassets(uint32,uint8,bool)._size (masset/BasketManager.sol#410) is not in mixedCase
Parameter BasketManager.getBasset(address)._token (masset/BasketManager.sol#436) is not in mixedCase
Parameter BasketManager.getBassetIntegrator(address)._token (masset/BasketManager.sol#450) is not in mixedCase
Parameter BasketManager.getBitmapFor(address[])._bassets (masset/BasketManager.sol#519) is not in mixedCase
Parameter BasketManager.handlePegLoss(address,bool)._bAsset (masset/BasketManager.sol#600) is not in mixedCase
Parameter BasketManager.handlePegLoss(address,bool)._belowPeg (masset/BasketManager.sol#600) is not in mixedCase
Parameter BasketManager.negateIsolation(address)._bAsset (masset/BasketManager.sol#627) is not in mixedCase
Parameter AaveIntegrationV2.deposit(address,uint256,bool)._bAsset (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#17) is not in mixedCase
Parameter AaveIntegrationV2.deposit(address,uint256,bool)._amount (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#18) is not in mixedCase
Parameter AaveIntegrationV2.deposit(address,uint256,bool)._isTokenFeeCharged (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#19) is not in mixedCase
Parameter AaveIntegrationV2.withdraw(address,address,uint256,bool)._receiver (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#48) is not in mixedCase
Parameter AaveIntegrationV2.withdraw(address,address,uint256,bool)._bAsset (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#49) is not in mixedCase
Parameter AaveIntegrationV2.withdraw(address,address,uint256,bool)._amount (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#50) is not in mixedCase
Parameter AaveIntegrationV2.checkBalance(address)._bAsset (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#69) is not in mixedCase
Parameter AaveIntegrationV3.deposit(address,uint256,bool)._bAsset (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#184) is not in mixedCase
Parameter AaveIntegrationV3.deposit(address,uint256,bool)._amount (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#185) is not in mixedCase
Parameter AaveIntegrationV3.deposit(address,uint256,bool)._isTokenFeeCharged (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#186) is not in mixedCase
Parameter AaveIntegrationV3.withdraw(address,address,uint256,bool)._receiver (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#215) is not in mixedCase
Parameter AaveIntegrationV3.withdraw(address,address,uint256,bool)._bAsset (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#216) is not in mixedCase
Parameter AaveIntegrationV3.withdraw(address,address,uint256,bool)._amount (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#217) is not in mixedCase
Parameter AaveIntegrationV3.checkBalance(address)._bAsset (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#235) is not in mixedCase
Parameter AaveIntegrationV3.checkBalanceView(address)._bAsset (z_mocks/masset/platform-integrations/MockUpgradedAaveIntegration.sol#291) is not in mixedCase
Parameter SavingsContract.automateInterestCollectionFlag(bool)._enabled (savings/SavingsContract.sol#58) is not in mixedCase
Parameter SavingsContract.depositInterest(uint256)._amount (savings/SavingsContract.sol#74) is not in mixedCase
Parameter SavingsContract.depositSavings(uint256)._amount (savings/SavingsContract.sol#103) is not in mixedCase
Parameter SavingsContract.redeem(uint256)._credits (savings/SavingsContract.sol#133) is not in mixedCase
Constant IBasketManager.version_intf (interfaces/IBasketManager.sol#13) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter SavingsManager.setSavingsContract(address,address)._mAsset (savings/SavingsManager.sol#60) is not in mixedCase
Parameter SavingsManager.setSavingsContract(address,address)._savingsContract (savings/SavingsManager.sol#60) is not in mixedCase
Parameter SavingsManager.setSavingsRate(uint256)._savingsRate (savings/SavingsManager.sol#73) is not in mixedCase
Parameter SavingsManager.collectAndDistributeInterest(address)._mAsset (savings/SavingsManager.sol#86) is not in mixedCase
Parameter SavingsManager.withdrawUnallocatedInterest(address,address)._mAsset (savings/SavingsManager.sol#139) is not in mixedCase
Parameter SavingsManager.withdrawUnallocatedInterest(address,address)._recipient (savings/SavingsManager.sol#139) is not in mixedCase
Constant SavingsManager.secondsInYear (savings/SavingsManager.sol#40) is not in UPPER_CASE_WITH_UNDERSCORES
Constant SavingsManager.maxAPY (savings/SavingsManager.sol#42) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter CommonHelpers.getDecimals(address)._token (shared/CommonHelpers.sol#20) is not in mixedCase
Parameter Masset.mint(address,uint256)._basset (masset/Masset.sol#109) is not in mixedCase
Parameter Masset.mint(address,uint256)._bassetQuantity (masset/Masset.sol#110) is not in mixedCase
Parameter Masset.mintTo(address,uint256,address)._basset (masset/Masset.sol#127) is not in mixedCase
Parameter Masset.mintTo(address,uint256,address)._bassetQuantity (masset/Masset.sol#128) is not in mixedCase
Parameter Masset.mintTo(address,uint256,address)._recipient (masset/Masset.sol#129) is not in mixedCase
Parameter Masset.mintMulti(uint32,uint256[],address)._bassetsBitmap (masset/Masset.sol#145) is not in mixedCase
Parameter Masset.mintMulti(uint32,uint256[],address)._bassetQuantity (masset/Masset.sol#146) is not in mixedCase
Parameter Masset.mintMulti(uint32,uint256[],address)._recipient (masset/Masset.sol#147) is not in mixedCase
Parameter Masset.redeem(address,uint256)._basset (masset/Masset.sol#272) is not in mixedCase
Parameter Masset.redeem(address,uint256)._bassetQuantity (masset/Masset.sol#273) is not in mixedCase
Parameter Masset.redeemTo(address,uint256,address)._basset (masset/Masset.sol#284) is not in mixedCase
Parameter Masset.redeemTo(address,uint256,address)._bassetQuantity (masset/Masset.sol#285) is not in mixedCase
Parameter Masset.redeemTo(address,uint256,address)._recipient (masset/Masset.sol#286) is not in mixedCase
Parameter Masset.redeemMulti(uint32,uint256[],address)._bassetsBitmap (masset/Masset.sol#302) is not in mixedCase
Parameter Masset.redeemMulti(uint32,uint256[],address)._bassetQuantities (masset/Masset.sol#303) is not in mixedCase
Parameter Masset.redeemMulti(uint32,uint256[],address)._recipient (masset/Masset.sol#304) is not in mixedCase
Parameter Masset.upgradeForgeValidator(address)._newForgeValidator (masset/Masset.sol#462) is not in mixedCase
Parameter Masset.setFeeRecipient(address)._feeRecipient (masset/Masset.sol#483) is not in mixedCase
Parameter Masset.setRedemptionFee(uint256)._redemptionFee (masset/Masset.sol#495) is not in mixedCase
Constant Masset.maxFee (masset/Masset.sol#51) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter MockImplementationV1.initialize(address)._proxyAdmin (z_mocks/upgradability/MockImplementation.sol#15) is not in mixedCase
Parameter Nexus.initialize(bytes32[],address[],bool[],address)._keys (nexus/Nexus.sol#77) is not in mixedCase
Parameter Nexus.initialize(bytes32[],address[],bool[],address)._addresses (nexus/Nexus.sol#78) is not in mixedCase
Parameter Nexus.initialize(bytes32[],address[],bool[],address)._isLocked (nexus/Nexus.sol#79) is not in mixedCase
Parameter Nexus.initialize(bytes32[],address[],bool[],address)._governor (nexus/Nexus.sol#80) is not in mixedCase
Parameter Nexus.proposeModule(bytes32,address)._key (nexus/Nexus.sol#111) is not in mixedCase
Parameter Nexus.proposeModule(bytes32,address)._addr (nexus/Nexus.sol#111) is not in mixedCase
Parameter Nexus.cancelProposedModule(bytes32)._key (nexus/Nexus.sol#131) is not in mixedCase
Parameter Nexus.acceptProposedModule(bytes32)._key (nexus/Nexus.sol#146) is not in mixedCase
Parameter Nexus.acceptProposedModules(bytes32[])._keys (nexus/Nexus.sol#157) is not in mixedCase
Parameter Nexus.requestLockModule(bytes32)._key (nexus/Nexus.sol#209) is not in mixedCase
Parameter Nexus.cancelLockModule(bytes32)._key (nexus/Nexus.sol#225) is not in mixedCase
Parameter Nexus.lockModule(bytes32)._key (nexus/Nexus.sol#239) is not in mixedCase
Parameter Nexus.moduleExists(bytes32)._key (nexus/Nexus.sol#259) is not in mixedCase
Parameter Nexus.getModule(bytes32)._key (nexus/Nexus.sol#270) is not in mixedCase
Variable Initializable.______gap (@openzeppelin/upgrades/contracts/Initializable.sol#61) is not in mixedCase
Parameter MassetHelpers.transferTokens(address,address,address,bool,uint256)._sender (masset/shared/MassetHelpers.sol#19) is not in mixedCase
Parameter MassetHelpers.transferTokens(address,address,address,bool,uint256)._recipient (masset/shared/MassetHelpers.sol#20) is not in mixedCase
Parameter MassetHelpers.transferTokens(address,address,address,bool,uint256)._basset (masset/shared/MassetHelpers.sol#21) is not in mixedCase
Parameter MassetHelpers.transferTokens(address,address,address,bool,uint256)._isFeeCharged (masset/shared/MassetHelpers.sol#22) is not in mixedCase
Parameter MassetHelpers.transferTokens(address,address,address,bool,uint256)._qty (masset/shared/MassetHelpers.sol#23) is not in mixedCase
Parameter MassetHelpers.safeInfiniteApprove(address,address)._asset (masset/shared/MassetHelpers.sol#39) is not in mixedCase
Parameter MassetHelpers.safeInfiniteApprove(address,address)._spender (masset/shared/MassetHelpers.sol#39) is not in mixedCase
Parameter MockCompoundIntegration.logBalance(address)._bAsset (z_mocks/masset/platform-integrations/MockCompoundIntegration.sol#12) is not in mixedCase
Parameter Governable.changeGovernor(address)._newGovernor (governance/Governable.sol#52) is not in mixedCase
Constant StableMath.fullScale (shared/StableMath.sol#21) is not in UPPER_CASE_WITH_UNDERSCORES
Constant StableMath.ratioScale (shared/StableMath.sol#29) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter ForgeValidator.validateMint(uint256,uint256,MassetStructs.Basset,uint256)._totalVault (masset/forge-validator/ForgeValidator.sol#32) is not in mixedCase
Parameter ForgeValidator.validateMint(uint256,uint256,MassetStructs.Basset,uint256)._grace (masset/forge-validator/ForgeValidator.sol#32) is not in mixedCase
Parameter ForgeValidator.validateMint(uint256,uint256,MassetStructs.Basset,uint256)._bAsset (masset/forge-validator/ForgeValidator.sol#32) is not in mixedCase
Parameter ForgeValidator.validateMint(uint256,uint256,MassetStructs.Basset,uint256)._bAssetQuantity (masset/forge-validator/ForgeValidator.sol#32) is not in mixedCase
Parameter ForgeValidator.validateMint(uint256,uint256,MassetStructs.Basset[],uint256[])._totalVault (masset/forge-validator/ForgeValidator.sol#65) is not in mixedCase
Parameter ForgeValidator.validateMint(uint256,uint256,MassetStructs.Basset[],uint256[])._grace (masset/forge-validator/ForgeValidator.sol#66) is not in mixedCase
Parameter ForgeValidator.validateMint(uint256,uint256,MassetStructs.Basset[],uint256[])._bAssets (masset/forge-validator/ForgeValidator.sol#67) is not in mixedCase
Parameter ForgeValidator.validateMint(uint256,uint256,MassetStructs.Basset[],uint256[])._bAssetQuantity (masset/forge-validator/ForgeValidator.sol#68) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,MassetStructs.Basset[],uint256,uint256,uint256)._basketIsFailed (masset/forge-validator/ForgeValidator.sol#123) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,MassetStructs.Basset[],uint256,uint256,uint256)._totalVault (masset/forge-validator/ForgeValidator.sol#124) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,MassetStructs.Basset[],uint256,uint256,uint256)._allBassets (masset/forge-validator/ForgeValidator.sol#125) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,MassetStructs.Basset[],uint256,uint256,uint256)._grace (masset/forge-validator/ForgeValidator.sol#126) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,MassetStructs.Basset[],uint256,uint256,uint256)._indexToRedeem (masset/forge-validator/ForgeValidator.sol#127) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,MassetStructs.Basset[],uint256,uint256,uint256)._bAssetQuantity (masset/forge-validator/ForgeValidator.sol#128) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,uint256,uint8[],uint256[],MassetStructs.Basset[])._basketIsFailed (masset/forge-validator/ForgeValidator.sol#179) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,uint256,uint8[],uint256[],MassetStructs.Basset[])._totalVault (masset/forge-validator/ForgeValidator.sol#180) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,uint256,uint8[],uint256[],MassetStructs.Basset[])._grace (masset/forge-validator/ForgeValidator.sol#181) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,uint256,uint8[],uint256[],MassetStructs.Basset[])._idxs (masset/forge-validator/ForgeValidator.sol#182) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,uint256,uint8[],uint256[],MassetStructs.Basset[])._bAssetQuantities (masset/forge-validator/ForgeValidator.sol#183) is not in mixedCase
Parameter ForgeValidator.validateRedemption(bool,uint256,uint256,uint8[],uint256[],MassetStructs.Basset[])._allBassets (masset/forge-validator/ForgeValidator.sol#184) is not in mixedCase
Parameter CompoundIntegration.deposit(address,uint256,bool)._bAsset (masset/platform-integrations/CompoundIntegration.sol#32) is not in mixedCase
Parameter CompoundIntegration.deposit(address,uint256,bool)._amount (masset/platform-integrations/CompoundIntegration.sol#33) is not in mixedCase
Parameter CompoundIntegration.deposit(address,uint256,bool)._isTokenFeeCharged (masset/platform-integrations/CompoundIntegration.sol#34) is not in mixedCase
Parameter CompoundIntegration.withdraw(address,address,uint256,bool)._receiver (masset/platform-integrations/CompoundIntegration.sol#70) is not in mixedCase
Parameter CompoundIntegration.withdraw(address,address,uint256,bool)._bAsset (masset/platform-integrations/CompoundIntegration.sol#71) is not in mixedCase
Parameter CompoundIntegration.withdraw(address,address,uint256,bool)._amount (masset/platform-integrations/CompoundIntegration.sol#72) is not in mixedCase
Parameter CompoundIntegration.checkBalance(address)._bAsset (masset/platform-integrations/CompoundIntegration.sol#98) is not in mixedCase
Parameter MockInitializableModule.initialize(address)._nexus (z_mocks/shared/MockInitializableModule.sol#11) is not in mixedCase
Parameter InitializableAbstractIntegration.initialize(address,address[],address,address[],address[])._nexus (masset/platform-integrations/InitializableAbstractIntegration.sol#50) is not in mixedCase
Parameter InitializableAbstractIntegration.initialize(address,address[],address,address[],address[])._whitelisted (masset/platform-integrations/InitializableAbstractIntegration.sol#51) is not in mixedCase
Parameter InitializableAbstractIntegration.initialize(address,address[],address,address[],address[])._platformAddress (masset/platform-integrations/InitializableAbstractIntegration.sol#52) is not in mixedCase
Parameter InitializableAbstractIntegration.initialize(address,address[],address,address[],address[])._bAssets (masset/platform-integrations/InitializableAbstractIntegration.sol#53) is not in mixedCase
Parameter InitializableAbstractIntegration.initialize(address,address[],address,address[],address[])._pTokens (masset/platform-integrations/InitializableAbstractIntegration.sol#54) is not in mixedCase
Parameter InitializableAbstractIntegration.setPTokenAddress(address,address)._bAsset (masset/platform-integrations/InitializableAbstractIntegration.sol#95) is not in mixedCase
Parameter InitializableAbstractIntegration.setPTokenAddress(address,address)._pToken (masset/platform-integrations/InitializableAbstractIntegration.sol#95) is not in mixedCase
Parameter MockAToken.redeem(uint256)._amount (z_mocks/masset/platform-integrations/MockAave.sol#30) is not in mixedCase
Parameter MockAave.addAToken(address,address)._aToken (z_mocks/masset/platform-integrations/MockAave.sol#44) is not in mixedCase
Parameter MockAave.addAToken(address,address)._underlying (z_mocks/masset/platform-integrations/MockAave.sol#44) is not in mixedCase
Parameter MockAave.deposit(address,uint256,uint16)._reserve (z_mocks/masset/platform-integrations/MockAave.sol#49) is not in mixedCase
Parameter MockAave.deposit(address,uint256,uint16)._amount (z_mocks/masset/platform-integrations/MockAave.sol#49) is not in mixedCase
Parameter MockAaveIntegration.logBalance(address)._bAsset (z_mocks/masset/platform-integrations/MockAave.sol#77) is not in mixedCase
Variable InitializableModuleKeys.Key_Governance (shared/InitializableModuleKeys.sol#13) is not in mixedCase
Variable InitializableModuleKeys.Key_Staking (shared/InitializableModuleKeys.sol#14) is not in mixedCase
Variable InitializableModuleKeys.Key_ProxyAdmin (shared/InitializableModuleKeys.sol#15) is not in mixedCase
Variable InitializableModuleKeys.Key_OracleHub (shared/InitializableModuleKeys.sol#18) is not in mixedCase
Variable InitializableModuleKeys.Key_Manager (shared/InitializableModuleKeys.sol#19) is not in mixedCase
Variable InitializableModuleKeys.Key_Recollateraliser (shared/InitializableModuleKeys.sol#20) is not in mixedCase
Variable InitializableModuleKeys.Key_MetaToken (shared/InitializableModuleKeys.sol#21) is not in mixedCase
Variable InitializableModuleKeys.Key_SavingsManager (shared/InitializableModuleKeys.sol#22) is not in mixedCase
Parameter AaveIntegration.deposit(address,uint256,bool)._bAsset (masset/platform-integrations/AaveIntegration.sol#30) is not in mixedCase
Parameter AaveIntegration.deposit(address,uint256,bool)._amount (masset/platform-integrations/AaveIntegration.sol#31) is not in mixedCase
Parameter AaveIntegration.deposit(address,uint256,bool)._isTokenFeeCharged (masset/platform-integrations/AaveIntegration.sol#32) is not in mixedCase
Parameter AaveIntegration.withdraw(address,address,uint256,bool)._receiver (masset/platform-integrations/AaveIntegration.sol#69) is not in mixedCase
Parameter AaveIntegration.withdraw(address,address,uint256,bool)._bAsset (masset/platform-integrations/AaveIntegration.sol#70) is not in mixedCase
Parameter AaveIntegration.withdraw(address,address,uint256,bool)._amount (masset/platform-integrations/AaveIntegration.sol#71) is not in mixedCase
Parameter AaveIntegration.withdraw(address,address,uint256,bool)._isTokenFeeCharged (masset/platform-integrations/AaveIntegration.sol#72) is not in mixedCase
Parameter AaveIntegration.checkBalance(address)._bAsset (masset/platform-integrations/AaveIntegration.sol#107) is not in mixedCase
Parameter MockCommonHelpers.getDecimals(address)._token (z_mocks/shared/MockCommonHelpers.sol#7) is not in mixedCase
Parameter ClaimableGovernor.requestGovernorChange(address)._proposedGovernor (governance/ClaimableGovernor.sol#39) is not in mixedCase
Parameter Migrations.upgrade(address).new_address (Migrations.sol#19) is not in mixedCase
Variable Migrations.last_completed_migration (Migrations.sol#5) is not in mixedCase



Constant ModuleKeys.Key_Governance (shared/ModuleKeys.sol#13) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ModuleKeys.Key_Staking (shared/ModuleKeys.sol#14) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ModuleKeys.Key_ProxyAdmin (shared/ModuleKeys.sol#15) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ModuleKeys.Key_OracleHub (shared/ModuleKeys.sol#18) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ModuleKeys.Key_Manager (shared/ModuleKeys.sol#19) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ModuleKeys.Key_Recollateraliser (shared/ModuleKeys.sol#20) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ModuleKeys.Key_MetaToken (shared/ModuleKeys.sol#21) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ModuleKeys.Key_SavingsManager (shared/ModuleKeys.sol#22) is not in UPPER_CASE_WITH_UNDERSCORES



Parameter DelayedClaimableGovernor.requestGovernorChange(address)._proposedGovernor (governance/DelayedClaimableGovernor.sol#38) is not in mixedCase
Parameter InitializableUpgradeabilityProxy.initialize(address,bytes)._logic (@openzeppelin/upgrades/contracts/upgradeability/InitializableUpgradeabilityProxy.sol#19) is not in mixedCase
Parameter InitializableUpgradeabilityProxy.initialize(address,bytes)._data (@openzeppelin/upgrades/contracts/upgradeability/InitializableUpgradeabilityProxy.sol#19) is not in mixedCase
Parameter MockNexus.setProxyAdmin(address)._proxyAdmin (z_mocks/nexus/MockNexus.sol#33) is not in mixedCase
Parameter DelayedProxyAdmin.proposeUpgrade(address,address,bytes)._proxy (upgradability/DelayedProxyAdmin.sol#52) is not in mixedCase
Parameter DelayedProxyAdmin.proposeUpgrade(address,address,bytes)._implementation (upgradability/DelayedProxyAdmin.sol#53) is not in mixedCase
Parameter DelayedProxyAdmin.proposeUpgrade(address,address,bytes)._data (upgradability/DelayedProxyAdmin.sol#54) is not in mixedCase
Parameter DelayedProxyAdmin.cancelUpgrade(address)._proxy (upgradability/DelayedProxyAdmin.sol#76) is not in mixedCase
Parameter DelayedProxyAdmin.acceptUpgradeRequest(address)._proxy (upgradability/DelayedProxyAdmin.sol#88) is not in mixedCase
Parameter DelayedProxyAdmin.validateProxy(address,address)._proxy (upgradability/DelayedProxyAdmin.sol#126) is not in mixedCase
Parameter DelayedProxyAdmin.validateProxy(address,address)._newImpl (upgradability/DelayedProxyAdmin.sol#126) is not in mixedCase
Parameter DelayedProxyAdmin.getProxyAdmin(address)._proxy (upgradability/DelayedProxyAdmin.sol#143) is not in mixedCase
Parameter DelayedProxyAdmin.getProxyImplementation(address)._proxy (upgradability/DelayedProxyAdmin.sol#157) is not in mixedCase
Parameter InitializableAdminUpgradeabilityProxy.initialize(address,address,bytes)._logic (@openzeppelin/upgrades/contracts/upgradeability/InitializableAdminUpgradeabilityProxy.sol#21) is not in mixedCase
Parameter InitializableAdminUpgradeabilityProxy.initialize(address,address,bytes)._admin (@openzeppelin/upgrades/contracts/upgradeability/InitializableAdminUpgradeabilityProxy.sol#21) is not in mixedCase
Parameter InitializableAdminUpgradeabilityProxy.initialize(address,address,bytes)._data (@openzeppelin/upgrades/contracts/upgradeability/InitializableAdminUpgradeabilityProxy.sol#21) is not in mixedCase



initialize(address,address,uint256,address[],address[],uint256[],bool[]) should be declared external:
	- BasketManager.initialize(address,address,uint256,address[],address[],uint256[],bool[]) (masset/BasketManager.sol#51-82)

## FIXED ##

getModule(bytes32) should be declared external:
	- Nexus.getModule(bytes32) (nexus/Nexus.sol#270-272)

## FIXED ##

changeGovernor(address) should be declared external:
	- ClaimableGovernor.changeGovernor(address) (governance/ClaimableGovernor.sol#31-33)
	- Governable.changeGovernor(address) (governance/Governable.sol#52-54)

## FIXED ##

initialize(address,address[],address,address[],address[]) should be declared external:
	- InitializableAbstractIntegration.initialize(address,address[],address,address[],address[]) (masset/platform-integrations/InitializableAbstractIntegration.sol#49-61)

## FIXED ##

paused() should be declared external:
	- PausableModule.paused() (shared/PausableModule.sol#53-55)

## FIXED ##

unpause() should be declared external:
	- PausableModule.unpause() (shared/PausableModule.sol#68-71)

## FIXED ##


setProxyAdmin(address) should be declared external:
	- MockNexus.setProxyAdmin(address) (z_mocks/nexus/MockNexus.sol#33-35)

## FIXED ##

INFO:Slither:. analyzed (78 contracts with 46 detectors), 439 result(s) found
INFO:Slither:[94mUse https://crytic.io/ to get access to additional detectors and Github integration[0m
