[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SavingsContract
Line:        668
Source: 
>     /** @dev Enable or disable the automation of fee collection during deposit process */
>     function automateInterestCollectionFlag(bool _enabled)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external


## README ##
- There is no need to validate the input, as its boolean


[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SavingsContract
Line:        724
Source: 
>      */
>     function depositSavings(uint256 _amount)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external


## README ##
- amount argument is being validated in the function


[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SavingsContract
Line:        756
Source: 
>      */
>     function redeem(uint256 _credits)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external


## README ##
- credits argument is being validated in the function


[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SavingsContract
Line:        732
Source: 
>             // Collect recent interest generated by basket and update exchange rate
>             ISavingsManager(_savingsManager()).collectAndDistributeInterest(address(mUSD));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }


## README ##
- SavingsManager is a trusted contract


[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SavingsContract
Line:        736
Source: 
>         // Transfer tokens from sender to here
>         require(mUSD.transferFrom(msg.sender, address(this), _amount), "Must receive tokens");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         totalSavings = totalSavings.add(_amount);


## README ##
- mUSD is a trusted contract


[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ModuleKeys
Line:        28
Source: 
>     // Governance                                                                   // Phases
>     bytes32 public constant Key_Governance = keccak256("Governance");               // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2


## README ##
- Not a security issue


[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ModuleKeys
Line:        29
Source: 
>     bytes32 public constant Key_Governance = keccak256("Governance");               // 2.x
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_ProxyAdmin = keccak256("ProxyAdmin");               // 1.0


## README ##
- Not a security issue


[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ModuleKeys
Line:        30
Source: 
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2
>     bytes32 public constant Key_ProxyAdmin = keccak256("ProxyAdmin");               // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Not a security issue



[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ModuleKeys
Line:        33
Source: 
>     // mStable
>     bytes32 public constant Key_OracleHub = keccak256("OracleHub");                 // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2


## README ##
- Not a security issue



[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ModuleKeys
Line:        34
Source: 
>     bytes32 public constant Key_OracleHub = keccak256("OracleHub");                 // 1.2
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x


## README ##
- Not a security issue



[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ModuleKeys
Line:        35
Source: 
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_MetaToken = keccak256("MetaToken");                 // 1.1


## README ##
- Not a security issue


[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ModuleKeys
Line:        36
Source: 
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x
>     bytes32 public constant Key_MetaToken = keccak256("MetaToken");                 // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_SavingsManager = keccak256("SavingsManager");       // 1.0



## README ##
- Not a security issue


[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ModuleKeys
Line:        37
Source: 
>     bytes32 public constant Key_MetaToken = keccak256("MetaToken");                 // 1.1
>     bytes32 public constant Key_SavingsManager = keccak256("SavingsManager");       // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StableMath
Line:        399
Source: 
>      */
>     uint256 private constant fullScale = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Not a security issue



[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    StableMath
Line:        407
Source: 
>      */
>     uint256 private constant ratioScale = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Not a security issue



[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Module
Line:        110
Source: 
>     function _governor() internal view returns (address) {
>         return nexus.governor();
>                ^^^^^^^^^^^^^^^^
>     }

## README ##
- Not a security issue
- Nexus is a trusted contract


[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SavingsContract
Line:        694
Source: 
>         // Transfer the interest from sender to here
>         require(mUSD.transferFrom(msg.sender, address(this), _amount), "Must receive tokens");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         totalSavings = totalSavings.add(_amount);


## README ##
- Not a security issue
- mUSD is trusted contract and confirms to ERC20 standard.


[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SavingsContract
Line:        736
Source: 
>         // Transfer tokens from sender to here
>         require(mUSD.transferFrom(msg.sender, address(this), _amount), "Must receive tokens");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         totalSavings = totalSavings.add(_amount);


## README ##
- Not a security issue
- mUSD is trusted contract and confirms to ERC20 standard.



[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SavingsContract
Line:        773
Source: 
>         // Transfer tokens from here to sender
>         require(mUSD.transfer(msg.sender, massetReturned), "Must send tokens");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Not a security issue
- mUSD is trusted contract and confirms to ERC20 standard.



[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Module
Line:        166
Source: 
>     function _savingsManager() internal view returns (address) {
>         return nexus.getModule(Key_SavingsManager);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue
- Nexus is a trusted contract.


[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SavingsContract
Line:        732
Source: 
>             // Collect recent interest generated by basket and update exchange rate
>             ISavingsManager(_savingsManager()).collectAndDistributeInterest(address(mUSD));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }


## README ##
- Not a security issue
- SavingsManager is a trusted contract


[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SavingsContract
Line:        641
Source: 
>     // Amount of underlying savings in the contract
>     uint256 public totalSavings;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Total number of savings credits issued


## README ##
- Not a security issue
- Default initialized to 0.


[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SavingsContract
Line:        643
Source: 
>     // Total number of savings credits issued
>     uint256 public totalCredits;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Not a security issue
- Default initialized to 0.



[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        399
Source: 
>      */
>     uint256 private constant fullScale = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Wrong report, this is a constant, not a variable.


[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        407
Source: 
>      */
>     uint256 private constant ratioScale = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Wrong report, this is a constant, not a variable.



[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        399
Source: 
>      */
>     uint256 private constant fullScale = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Wrong report, this is a constant, not a variable.
- Its already initialized.


[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        407
Source: 
>      */
>     uint256 private constant ratioScale = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

## README ##
- Wrong report, this is a constant, not a variable.
- Its already initialized.



[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        399
Source: 
>      */
>     uint256 private constant fullScale = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Wrong report, this is a constant, not a variable.
- Its already initialized.



[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        407
Source: 
>      */
>     uint256 private constant ratioScale = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Wrong report, this is a constant, not a variable.
- Its already initialized.



[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SavingsContract
Line:        737
Source: 
>         require(mUSD.transferFrom(msg.sender, address(this), _amount), "Must receive tokens");
>         totalSavings = totalSavings.add(_amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- It is an expected behavior.


[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SavingsContract
Line:        741
Source: 
>         creditsIssued = _massetToCredit(_amount);
>         totalCredits = totalCredits.add(creditsIssued);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- It is an expected behavior.


[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        110
Source: 
>     function _governor() internal view returns (address) {
>         return nexus.governor();
>                ^^^^^^^^^^^^^^^^
>     }


## README ##
- Wrong report, its being used in modifier


[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        118
Source: 
>     function _governance() internal view returns (address) {
>         return nexus.getModule(Key_Governance);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

## README ##
- Wrong report, its being used in modifier



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        126
Source: 
>     function _staking() internal view returns (address) {
>         return nexus.getModule(Key_Staking);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Wrong report, its being used in modifier


[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        134
Source: 
>     function _proxyAdmin() internal view returns (address) {
>         return nexus.getModule(Key_ProxyAdmin);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue


[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        142
Source: 
>     function _metaToken() internal view returns (address) {
>         return nexus.getModule(Key_MetaToken);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        150
Source: 
>     function _oracleHub() internal view returns (address) {
>         return nexus.getModule(Key_OracleHub);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        158
Source: 
>     function _manager() internal view returns (address) {
>         return nexus.getModule(Key_Manager);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        166
Source: 
>     function _savingsManager() internal view returns (address) {
>         return nexus.getModule(Key_SavingsManager);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        174
Source: 
>     function _recollateraliser() internal view returns (address) {
>         return nexus.getModule(Key_Recollateraliser);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        118
Source: 
>     function _governance() internal view returns (address) {
>         return nexus.getModule(Key_Governance);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        126
Source: 
>     function _staking() internal view returns (address) {
>         return nexus.getModule(Key_Staking);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        134
Source: 
>     function _proxyAdmin() internal view returns (address) {
>         return nexus.getModule(Key_ProxyAdmin);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        142
Source: 
>     function _metaToken() internal view returns (address) {
>         return nexus.getModule(Key_MetaToken);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        150
Source: 
>     function _oracleHub() internal view returns (address) {
>         return nexus.getModule(Key_OracleHub);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        158
Source: 
>     function _manager() internal view returns (address) {
>         return nexus.getModule(Key_Manager);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Module
Line:        174
Source: 
>     function _recollateraliser() internal view returns (address) {
>         return nexus.getModule(Key_Recollateraliser);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }


## README ##
- Not a security issue



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        28
Source: 
>     // Governance                                                                   // Phases
>     bytes32 public constant Key_Governance = keccak256("Governance");               // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        29
Source: 
>     bytes32 public constant Key_Governance = keccak256("Governance");               // 2.x
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_ProxyAdmin = keccak256("ProxyAdmin");               // 1.0


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        30
Source: 
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2
>     bytes32 public constant Key_ProxyAdmin = keccak256("ProxyAdmin");               // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        33
Source: 
>     // mStable
>     bytes32 public constant Key_OracleHub = keccak256("OracleHub");                 // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        34
Source: 
>     bytes32 public constant Key_OracleHub = keccak256("OracleHub");                 // 1.2
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        35
Source: 
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_MetaToken = keccak256("MetaToken");                 // 1.1


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        36
Source: 
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x
>     bytes32 public constant Key_MetaToken = keccak256("MetaToken");                 // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_SavingsManager = keccak256("SavingsManager");       // 1.0


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        37
Source: 
>     bytes32 public constant Key_MetaToken = keccak256("MetaToken");                 // 1.1
>     bytes32 public constant Key_SavingsManager = keccak256("SavingsManager");       // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        399
Source: 
>      */
>     uint256 private constant fullScale = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Wrong report, its being used.


[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        407
Source: 
>      */
>     uint256 private constant ratioScale = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Wrong report, its being used.



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        28
Source: 
>     // Governance                                                                   // Phases
>     bytes32 public constant Key_Governance = keccak256("Governance");               // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        29
Source: 
>     bytes32 public constant Key_Governance = keccak256("Governance");               // 2.x
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_ProxyAdmin = keccak256("ProxyAdmin");               // 1.0


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        30
Source: 
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2
>     bytes32 public constant Key_ProxyAdmin = keccak256("ProxyAdmin");               // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        33
Source: 
>     // mStable
>     bytes32 public constant Key_OracleHub = keccak256("OracleHub");                 // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        34
Source: 
>     bytes32 public constant Key_OracleHub = keccak256("OracleHub");                 // 1.2
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        35
Source: 
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_MetaToken = keccak256("MetaToken");                 // 1.1


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        36
Source: 
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x
>     bytes32 public constant Key_MetaToken = keccak256("MetaToken");                 // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_SavingsManager = keccak256("SavingsManager");       // 1.0


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        37
Source: 
>     bytes32 public constant Key_MetaToken = keccak256("MetaToken");                 // 1.1
>     bytes32 public constant Key_SavingsManager = keccak256("SavingsManager");       // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }


## README ##
- Not a security issue, its being used in Nexus and the modifiers of the contract



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Module
Line:        56
Source: 
> 
>     INexus public nexus;
>     ^^^^^^^^^^^^^^^^^^^
> 

## README ##
- Wrong report, its being used.


[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        399
Source: 
>      */
>     uint256 private constant fullScale = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Wrong report, its being used.



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        407
Source: 
>      */
>     uint256 private constant ratioScale = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Wrong report, its being used.



[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        28
Source: 
>     // Governance                                                                   // Phases
>     bytes32 public constant Key_Governance = keccak256("Governance");               // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        29
Source: 
>     bytes32 public constant Key_Governance = keccak256("Governance");               // 2.x
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_ProxyAdmin = keccak256("ProxyAdmin");               // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        30
Source: 
>     bytes32 public constant Key_Staking = keccak256("Staking");                     // 1.2
>     bytes32 public constant Key_ProxyAdmin = keccak256("ProxyAdmin");               // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        33
Source: 
>     // mStable
>     bytes32 public constant Key_OracleHub = keccak256("OracleHub");                 // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        34
Source: 
>     bytes32 public constant Key_OracleHub = keccak256("OracleHub");                 // 1.2
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        35
Source: 
>     bytes32 public constant Key_Manager = keccak256("Manager");                     // 1.2
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_MetaToken = keccak256("MetaToken");                 // 1.1

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ModuleKeys
Line:        36
Source: 
>     bytes32 public constant Key_Recollateraliser = keccak256("Recollateraliser");   // 2.x
>     bytes32 public constant Key_MetaToken = keccak256("MetaToken");                 // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public constant Key_SavingsManager = keccak256("SavingsManager");       // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        407
Source: 
>      */
>     uint256 private constant ratioScale = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
