[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Initializable
Line:        284
Source: 
>     uint256 cs;
>     assembly { cs := extcodesize(self) }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return cs == 0;


## README ##
- OZ library code


[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Address
Line:        765
Source: 
>         // solhint-disable-next-line no-inline-assembly
>         assembly { codehash := extcodehash(account) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return (codehash != accountHash && codehash != 0x0);


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Initializable
Line:        249
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Initializable
Line:        254
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Initializable
Line:        289
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        801
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        857
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        801
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        857
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        801
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        857
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        801
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        857
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        28
Source: 
>     // Governance                           // Phases
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_STAKING;             // 1.2


## README ##
- Ignore


[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        29
Source: 
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     bytes32 public KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0


## README ##
- Ignore



[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        30
Source: 
>     bytes32 public KEY_STAKING;             // 1.2
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        33
Source: 
>     // mStable
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        34
Source: 
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     bytes32 public KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        35
Source: 
>     bytes32 public KEY_MANAGER;             // 1.2
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        36
Source: 
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        37
Source: 
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 



## README ##
- Ignore



[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Initializable
Line:        289
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Address
Line:        801
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>          ^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Initializable
Line:        262
Source: 
> 
>     bool isTopLevelCall = !initializing;
>     ^^^^^^^^^^^^^^^^^^^
>     if (isTopLevelCall) {


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Initializable
Line:        285
Source: 
>     assembly { cs := extcodesize(self) }
>     return cs == 0;
>            ^^
>   }


## README ##
- OZ library code



[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Address
Line:        766
Source: 
>         assembly { codehash := extcodehash(account) }
>         return (codehash != accountHash && codehash != 0x0);
>                 ^^^^^^^^
>     }


## README ##
- OZ library code



[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        28
Source: 
>     // Governance                           // Phases
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_STAKING;             // 1.2

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        29
Source: 
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     bytes32 public KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        30
Source: 
>     bytes32 public KEY_STAKING;             // 1.2
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        33
Source: 
>     // mStable
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        34
Source: 
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     bytes32 public KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        35
Source: 
>     bytes32 public KEY_MANAGER;             // 1.2
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        36
Source: 
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        37
Source: 
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        28
Source: 
>     // Governance                           // Phases
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_STAKING;             // 1.2

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        29
Source: 
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     bytes32 public KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        30
Source: 
>     bytes32 public KEY_STAKING;             // 1.2
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        33
Source: 
>     // mStable
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        34
Source: 
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     bytes32 public KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        35
Source: 
>     bytes32 public KEY_MANAGER;             // 1.2
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        36
Source: 
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        37
Source: 
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- IGNORE



[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModule
Line:        72
Source: 
> 
>     INexus public nexus;
>     ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        28
Source: 
>     // Governance                           // Phases
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_STAKING;             // 1.2

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        29
Source: 
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     bytes32 public KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        30
Source: 
>     bytes32 public KEY_STAKING;             // 1.2
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        33
Source: 
>     // mStable
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        34
Source: 
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     bytes32 public KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        35
Source: 
>     bytes32 public KEY_MANAGER;             // 1.2
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        36
Source: 
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        37
Source: 
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Initialized via initialize() function. This is done for upgradable contracts.




[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    InitializableModule
Line:        72
Source: 
> 
>     INexus public nexus;
>     ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        249
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- OZ library code



[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        254
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        289
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        442
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        450
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        442
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        450
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        442
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        450
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        442
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    StableMath
Line:        450
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- Same issue already present in other contracts. We have added our analysis for
  those issues previously.


[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        801
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        854
Source: 
>         // solhint-disable-next-line max-line-length
>         require(address(token).isContract(), "SafeERC20: call to non-contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 


## README ##
- OZ library code



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        857
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");


## README ##
- OZ library code



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        823
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"


## README ##
- OZ library code



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        830
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));


## README ##
- OZ library code



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        835
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));


## README ##
- OZ library code



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        885
Source: 
>         if(_isFeeCharged) {
>             uint256 balBefore = IERC20(_basset).balanceOf(_recipient);
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);


## README ##
- The value `balBefore` is being used.


[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        887
Source: 
>             IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);
>             uint256 balAfter = IERC20(_basset).balanceOf(_recipient);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             receivedQty = StableMath.min(_qty, balAfter.sub(balBefore));


## README ##
- The value `balAfter` is being used.



[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        127
Source: 
>     function _governor() internal view returns (address) {
>         return nexus.governor();
>                ^^^^^^^^^^^^^^^^
>     }


## README ##
- Nexus related methods, ignoring as we have already gone through these.

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        135
Source: 
>     function _governance() internal view returns (address) {
>         return nexus.getModule(KEY_GOVERNANCE);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        143
Source: 
>     function _staking() internal view returns (address) {
>         return nexus.getModule(KEY_STAKING);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        151
Source: 
>     function _proxyAdmin() internal view returns (address) {
>         return nexus.getModule(KEY_PROXY_ADMIN);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        159
Source: 
>     function _metaToken() internal view returns (address) {
>         return nexus.getModule(KEY_META_TOKEN);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        167
Source: 
>     function _oracleHub() internal view returns (address) {
>         return nexus.getModule(KEY_ORACLE_HUB);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        175
Source: 
>     function _manager() internal view returns (address) {
>         return nexus.getModule(KEY_MANAGER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        183
Source: 
>     function _savingsManager() internal view returns (address) {
>         return nexus.getModule(KEY_SAVINGS_MANAGER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        191
Source: 
>     function _recollateraliser() internal view returns (address) {
>         return nexus.getModule(KEY_RECOLLATERALISER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        801
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        854
Source: 
>         // solhint-disable-next-line max-line-length
>         require(address(token).isContract(), "SafeERC20: call to non-contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        857
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        823
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        830
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        835
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        885
Source: 
>         if(_isFeeCharged) {
>             uint256 balBefore = IERC20(_basset).balanceOf(_recipient);
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        887
Source: 
>             IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);
>             uint256 balAfter = IERC20(_basset).balanceOf(_recipient);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             receivedQty = StableMath.min(_qty, balAfter.sub(balBefore));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        127
Source: 
>     function _governor() internal view returns (address) {
>         return nexus.governor();
>                ^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        135
Source: 
>     function _governance() internal view returns (address) {
>         return nexus.getModule(KEY_GOVERNANCE);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        143
Source: 
>     function _staking() internal view returns (address) {
>         return nexus.getModule(KEY_STAKING);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        151
Source: 
>     function _proxyAdmin() internal view returns (address) {
>         return nexus.getModule(KEY_PROXY_ADMIN);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        159
Source: 
>     function _metaToken() internal view returns (address) {
>         return nexus.getModule(KEY_META_TOKEN);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        167
Source: 
>     function _oracleHub() internal view returns (address) {
>         return nexus.getModule(KEY_ORACLE_HUB);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        175
Source: 
>     function _manager() internal view returns (address) {
>         return nexus.getModule(KEY_MANAGER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        183
Source: 
>     function _savingsManager() internal view returns (address) {
>         return nexus.getModule(KEY_SAVINGS_MANAGER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    InitializableModule
Line:        191
Source: 
>     function _recollateraliser() internal view returns (address) {
>         return nexus.getModule(KEY_RECOLLATERALISER);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        801
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        854
Source: 
>         // solhint-disable-next-line max-line-length
>         require(address(token).isContract(), "SafeERC20: call to non-contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        857
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        823
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        830
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        835
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        885
Source: 
>         if(_isFeeCharged) {
>             uint256 balBefore = IERC20(_basset).balanceOf(_recipient);
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        887
Source: 
>             IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);
>             uint256 balAfter = IERC20(_basset).balanceOf(_recipient);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             receivedQty = StableMath.min(_qty, balAfter.sub(balBefore));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        801
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        854
Source: 
>         // solhint-disable-next-line max-line-length
>         require(address(token).isContract(), "SafeERC20: call to non-contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        857
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        823
Source: 
>         // solhint-disable-next-line max-line-length
>         require((value == 0) || (token.allowance(address(this), spender) == 0),
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        830
Source: 
>     function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).add(value);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        835
Source: 
>     function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {
>         uint256 newAllowance = token.allowance(address(this), spender).sub(value, "SafeERC20: decreased allowance below zero");
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        885
Source: 
>         if(_isFeeCharged) {
>             uint256 balBefore = IERC20(_basset).balanceOf(_recipient);
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    MassetHelpers
Line:        887
Source: 
>             IERC20(_basset).safeTransferFrom(_sender, _recipient, _qty);
>             uint256 balAfter = IERC20(_basset).balanceOf(_recipient);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             receivedQty = StableMath.min(_qty, balAfter.sub(balBefore));

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        28
Source: 
>     // Governance                           // Phases
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_STAKING;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        29
Source: 
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     bytes32 public KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        30
Source: 
>     bytes32 public KEY_STAKING;             // 1.2
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        33
Source: 
>     // mStable
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        34
Source: 
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     bytes32 public KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        35
Source: 
>     bytes32 public KEY_MANAGER;             // 1.2
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        36
Source: 
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        37
Source: 
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        442
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        450
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        28
Source: 
>     // Governance                           // Phases
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_STAKING;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        29
Source: 
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     bytes32 public KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        30
Source: 
>     bytes32 public KEY_STAKING;             // 1.2
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        33
Source: 
>     // mStable
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        34
Source: 
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     bytes32 public KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        35
Source: 
>     bytes32 public KEY_MANAGER;             // 1.2
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        36
Source: 
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        37
Source: 
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModule
Line:        72
Source: 
> 
>     INexus public nexus;
>     ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        442
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        450
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        28
Source: 
>     // Governance                           // Phases
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_STAKING;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        29
Source: 
>     bytes32 public KEY_GOVERNANCE;          // 2.x
>     bytes32 public KEY_STAKING;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        30
Source: 
>     bytes32 public KEY_STAKING;             // 1.2
>     bytes32 public KEY_PROXY_ADMIN;         // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        33
Source: 
>     // mStable
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_MANAGER;             // 1.2

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        34
Source: 
>     bytes32 public KEY_ORACLE_HUB;          // 1.2
>     bytes32 public KEY_MANAGER;             // 1.2
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        35
Source: 
>     bytes32 public KEY_MANAGER;             // 1.2
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_META_TOKEN;          // 1.1

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        36
Source: 
>     bytes32 public KEY_RECOLLATERALISER;    // 2.x
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModuleKeys
Line:        37
Source: 
>     bytes32 public KEY_META_TOKEN;          // 1.1
>     bytes32 public KEY_SAVINGS_MANAGER;     // 1.0
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableModule
Line:        72
Source: 
> 
>     INexus public nexus;
>     ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    InitializableGovernableWhitelist
Line:        199
Source: 
> 
>     mapping(address => bool) public whitelist;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        442
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        450
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        249
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        254
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        289
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        442
Source: 
>      */
>     uint256 private constant FULL_SCALE = 1e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    StableMath
Line:        450
Source: 
>      */
>     uint256 private constant RATIO_SCALE = 1e8;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m


## README ##
- Rest of the above since last comment are already covered into previous report files.