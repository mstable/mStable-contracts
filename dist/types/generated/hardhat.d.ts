/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "TransparentUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransparentUpgradeableProxy__factory>;
    getContractFactory(
      name: "UpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeableProxy__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Collector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Collector__factory>;
    getContractFactory(
      name: "IBPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBPool__factory>;
    getContractFactory(
      name: "RevenueRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RevenueRecipient__factory>;
    getContractFactory(
      name: "FeederLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeederLogic__factory>;
    getContractFactory(
      name: "FeederManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeederManager__factory>;
    getContractFactory(
      name: "FeederPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeederPool__factory>;
    getContractFactory(
      name: "InterestValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestValidator__factory>;
    getContractFactory(
      name: "FeederWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeederWrapper__factory>;
    getContractFactory(
      name: "ClaimableGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimableGovernor__factory>;
    getContractFactory(
      name: "DelayedClaimableGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DelayedClaimableGovernor__factory>;
    getContractFactory(
      name: "Governable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Governable__factory>;
    getContractFactory(
      name: "IBoostDirector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBoostDirector__factory>;
    getContractFactory(
      name: "IBoostedVaultWithLockup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBoostedVaultWithLockup__factory>;
    getContractFactory(
      name: "IEjector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEjector__factory>;
    getContractFactory(
      name: "IFeederPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeederPool__factory>;
    getContractFactory(
      name: "IIncentivisedVotingLockup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIncentivisedVotingLockup__factory>;
    getContractFactory(
      name: "IInvariantValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInvariantValidator__factory>;
    getContractFactory(
      name: "IMasset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMasset__factory>;
    getContractFactory(
      name: "INexus",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INexus__factory>;
    getContractFactory(
      name: "IPlatformIntegration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPlatformIntegration__factory>;
    getContractFactory(
      name: "IRevenueRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRevenueRecipient__factory>;
    getContractFactory(
      name: "IRewardsDistributionRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardsDistributionRecipient__factory>;
    getContractFactory(
      name: "ISavingsContractV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISavingsContractV1__factory>;
    getContractFactory(
      name: "ISavingsContractV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISavingsContractV2__factory>;
    getContractFactory(
      name: "ISavingsManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISavingsManager__factory>;
    getContractFactory(
      name: "ILiquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidator__factory>;
    getContractFactory(
      name: "Liquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Liquidator__factory>;
    getContractFactory(
      name: "Masset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Masset__factory>;
    getContractFactory(
      name: "MassetLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MassetLogic__factory>;
    getContractFactory(
      name: "MassetManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MassetManager__factory>;
    getContractFactory(
      name: "AaveV2Integration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveV2Integration__factory>;
    getContractFactory(
      name: "AbstractIntegration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractIntegration__factory>;
    getContractFactory(
      name: "CompoundIntegration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundIntegration__factory>;
    getContractFactory(
      name: "IGateway",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGateway__factory>;
    getContractFactory(
      name: "IGatewayRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGatewayRegistry__factory>;
    getContractFactory(
      name: "RenWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenWrapper__factory>;
    getContractFactory(
      name: "MV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MV1__factory>;
    getContractFactory(
      name: "MV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MV2__factory>;
    getContractFactory(
      name: "Nexus",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Nexus__factory>;
    getContractFactory(
      name: "IAaveATokenV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveATokenV2__factory>;
    getContractFactory(
      name: "IAaveLendingPoolV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveLendingPoolV2__factory>;
    getContractFactory(
      name: "ILendingPoolAddressesProviderV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPoolAddressesProviderV2__factory>;
    getContractFactory(
      name: "IStakedAave",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakedAave__factory>;
    getContractFactory(
      name: "IAaveIncentivesController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveIncentivesController__factory>;
    getContractFactory(
      name: "ICERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICERC20__factory>;
    getContractFactory(
      name: "ICurve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICurve__factory>;
    getContractFactory(
      name: "DyDxPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DyDxPool__factory>;
    getContractFactory(
      name: "DyDxFlashLoan",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DyDxFlashLoan__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "IUniswapV3Quoter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Quoter__factory>;
    getContractFactory(
      name: "IUniswapV3SwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapRouter__factory>;
    getContractFactory(
      name: "IClaimRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimRewards__factory>;
    getContractFactory(
      name: "IPLiquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPLiquidator__factory>;
    getContractFactory(
      name: "PAaveIntegration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PAaveIntegration__factory>;
    getContractFactory(
      name: "PLiquidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PLiquidator__factory>;
    getContractFactory(
      name: "InitializableRewardsDistributionRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializableRewardsDistributionRecipient__factory>;
    getContractFactory(
      name: "BoostDirector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoostDirector__factory>;
    getContractFactory(
      name: "BoostedSavingsVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoostedSavingsVault__factory>;
    getContractFactory(
      name: "BoostedTokenWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoostedTokenWrapper__factory>;
    getContractFactory(
      name: "IConnector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IConnector__factory>;
    getContractFactory(
      name: "SaveWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SaveWrapper__factory>;
    getContractFactory(
      name: "Poker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Poker__factory>;
    getContractFactory(
      name: "SavingsContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SavingsContract__factory>;
    getContractFactory(
      name: "SavingsManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SavingsManager__factory>;
    getContractFactory(
      name: "ERC205",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC205__factory>;
    getContractFactory(
      name: "IBasicToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasicToken__factory>;
    getContractFactory(
      name: "IERC20WithCheckpointing",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20WithCheckpointing__factory>;
    getContractFactory(
      name: "ImmutableModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ImmutableModule__factory>;
    getContractFactory(
      name: "InitializableERC20Detailed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializableERC20Detailed__factory>;
    getContractFactory(
      name: "InitializableToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializableToken__factory>;
    getContractFactory(
      name: "PausableModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableModule__factory>;
    getContractFactory(
      name: "DelayedProxyAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DelayedProxyAdmin__factory>;
    getContractFactory(
      name: "AssetProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetProxy__factory>;
    getContractFactory(
      name: "BasketManagerProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasketManagerProxy__factory>;
    getContractFactory(
      name: "LiquidatorProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidatorProxy__factory>;
    getContractFactory(
      name: "VaultProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultProxy__factory>;
    getContractFactory(
      name: "ConfigurableRightsPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConfigurableRightsPool__factory>;
    getContractFactory(
      name: "CRPFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CRPFactory__factory>;
    getContractFactory(
      name: "MockBPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockBPool__factory>;
    getContractFactory(
      name: "RevenueRecipientV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RevenueRecipientV1__factory>;
    getContractFactory(
      name: "ExposedFeederLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExposedFeederLogic__factory>;
    getContractFactory(
      name: "ExposedFeederPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExposedFeederPool__factory>;
    getContractFactory(
      name: "ExposedMasset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExposedMasset__factory>;
    getContractFactory(
      name: "ExposedMassetLogic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExposedMassetLogic__factory>;
    getContractFactory(
      name: "MaliciousAaveIntegration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MaliciousAaveIntegration__factory>;
    getContractFactory(
      name: "IBasketManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasketManager__factory>;
    getContractFactory(
      name: "IMassetV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMassetV1__factory>;
    getContractFactory(
      name: "MusdV2Rebalance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MusdV2Rebalance__factory>;
    getContractFactory(
      name: "MusdV2SusdBalancer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MusdV2SusdBalancer__factory>;
    getContractFactory(
      name: "MockAaveV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAaveV2__factory>;
    getContractFactory(
      name: "MockATokenV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockATokenV2__factory>;
    getContractFactory(
      name: "MockCToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockCToken__factory>;
    getContractFactory(
      name: "MockMasset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockMasset__factory>;
    getContractFactory(
      name: "MockMasset1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockMasset1__factory>;
    getContractFactory(
      name: "MockPlatformIntegration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPlatformIntegration__factory>;
    getContractFactory(
      name: "MockPlatformIntegrationWithToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPlatformIntegrationWithToken__factory>;
    getContractFactory(
      name: "MockRewardToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockRewardToken__factory>;
    getContractFactory(
      name: "ValidatorWithTVLCap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ValidatorWithTVLCap__factory>;
    getContractFactory(
      name: "MockNexus",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockNexus__factory>;
    getContractFactory(
      name: "MockConnector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockConnector__factory>;
    getContractFactory(
      name: "MockErroneousConnector1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockErroneousConnector1__factory>;
    getContractFactory(
      name: "MockErroneousConnector2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockErroneousConnector2__factory>;
    getContractFactory(
      name: "MockLendingConnector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockLendingConnector__factory>;
    getContractFactory(
      name: "MockVaultConnector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockVaultConnector__factory>;
    getContractFactory(
      name: "MockBoostedSavingsVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockBoostedSavingsVault__factory>;
    getContractFactory(
      name: "MockRevenueRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockRevenueRecipient__factory>;
    getContractFactory(
      name: "MockSavingsManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockSavingsManager__factory>;
    getContractFactory(
      name: "MockStakingContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStakingContract__factory>;
    getContractFactory(
      name: "DeadToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DeadToken__factory>;
    getContractFactory(
      name: "MockAaveIncentivesController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAaveIncentivesController__factory>;
    getContractFactory(
      name: "MockERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC20__factory>;
    getContractFactory(
      name: "ERC20WithFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20WithFee__factory>;
    getContractFactory(
      name: "MockERC20WithFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC20WithFee__factory>;
    getContractFactory(
      name: "MockGovernable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockGovernable__factory>;
    getContractFactory(
      name: "MockInitializableToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockInitializableToken__factory>;
    getContractFactory(
      name: "MockInitializableTokenWithFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockInitializableTokenWithFee__factory>;
    getContractFactory(
      name: "MockRoot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockRoot__factory>;
    getContractFactory(
      name: "MockStakedAave",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStakedAave__factory>;
    getContractFactory(
      name: "MockTrigger",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTrigger__factory>;
    getContractFactory(
      name: "MockUniswap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUniswap__factory>;
    getContractFactory(
      name: "MockUniswapV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUniswapV3__factory>;
    getContractFactory(
      name: "PublicStableMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PublicStableMath__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
