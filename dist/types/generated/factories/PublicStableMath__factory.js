"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PublicStableMath__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
            },
        ],
        name: "clamp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "y",
                type: "uint256",
            },
        ],
        name: "divPrecisely",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "ratio",
                type: "uint256",
            },
        ],
        name: "divRatioPrecisely",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "getFullScale",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "getRatioScale",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "y",
                type: "uint256",
            },
        ],
        name: "max",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "y",
                type: "uint256",
            },
        ],
        name: "min",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "ratio",
                type: "uint256",
            },
        ],
        name: "mulRatioTruncate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "ratio",
                type: "uint256",
            },
        ],
        name: "mulRatioTruncateCeil",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "y",
                type: "uint256",
            },
        ],
        name: "mulTruncate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "y",
                type: "uint256",
            },
        ],
        name: "mulTruncateCeil",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "y",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "scale",
                type: "uint256",
            },
        ],
        name: "mulTruncateScale",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
        ],
        name: "scaleInteger",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506104af806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637ae2b5c71161008c578063c1c40a3311610066578063c1c40a3314610186578063d472b90c14610199578063d63a4d5c1461014d578063e44b560a146101a1576100cf565b80637ae2b5c71461014d5780638f8a618a146101605780639e7bde5214610173576100cf565b806309444a4c146100d45780630b6ab2f0146100ee578063320b5c64146101015780633519a77e146101145780636d5433e6146101275780637473708e1461013a575b600080fd5b6100dc6101b4565b60405190815260200160405180910390f35b6100dc6100fc3660046103a9565b6101c5565b6100dc61010f3660046103a9565b6101d8565b6100dc6101223660046103a9565b6101e4565b6100dc6101353660046103a9565b6101f0565b6100dc6101483660046103ca565b6101fc565b6100dc61015b3660046103a9565b610211565b6100dc61016e3660046103a9565b61021d565b6100dc610181366004610391565b610229565b6100dc6101943660046103a9565b61023a565b6100dc610246565b6100dc6101af3660046103a9565b610252565b6000670de0b6b3a76400005b905090565b60006101d1838361025e565b9392505050565b60006101d1838361027d565b60006101d1838361028e565b60006101d183836102d2565b60006102098484846102e8565b949350505050565b60006101d183836102ff565b60006101d18383610314565b600061023482610329565b92915050565b60006101d1838361033d565b60006305f5e1006101c0565b60006101d18383610380565b600081610273670de0b6b3a76400008561042d565b6101d1919061040d565b60006101d183836305f5e1006102e8565b60008061029b838561042d565b9050600060016102af6305f5e100846103f5565b6102b9919061044c565b90506102c96305f5e1008261040d565b95945050505050565b60008183116102e157816101d1565b5090919050565b6000816102f5848661042d565b610209919061040d565b600081831161030e57826101d1565b50919050565b60006101d18383670de0b6b3a76400006102e8565b6000610234670de0b6b3a76400008361042d565b60008061034a838561042d565b905060006001610362670de0b6b3a7640000846103f5565b61036c919061044c565b90506102c9670de0b6b3a76400008261040d565b6000816102736305f5e1008561042d565b6000602082840312156103a2578081fd5b5035919050565b600080604083850312156103bb578081fd5b50508035926020909101359150565b6000806000606084860312156103de578081fd5b505081359360208301359350604090920135919050565b6000821982111561040857610408610463565b500190565b60008261042857634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561044757610447610463565b500290565b60008282101561045e5761045e610463565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205785996ad005d4b1636f6dac2bae90f37843c10f2eb15813a0554ab3de9b80a764736f6c63430008020033";
class PublicStableMath__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.PublicStableMath__factory = PublicStableMath__factory;
PublicStableMath__factory.bytecode = _bytecode;
PublicStableMath__factory.abi = _abi;
//# sourceMappingURL=PublicStableMath__factory.js.map