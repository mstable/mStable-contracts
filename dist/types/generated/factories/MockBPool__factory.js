"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockBPool__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_inputToOutputRatio",
                type: "uint256",
            },
            {
                internalType: "address[]",
                name: "_tokens",
                type: "address[]",
            },
            {
                internalType: "string",
                name: "_name",
                type: "string",
            },
            {
                internalType: "string",
                name: "_symbol",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amt",
                type: "uint256",
            },
        ],
        name: "addOutputToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "subtractedValue",
                type: "uint256",
            },
        ],
        name: "decreaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "addedValue",
                type: "uint256",
            },
        ],
        name: "increaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenIn",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenAmountIn",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "minPoolAmountOut",
                type: "uint256",
            },
        ],
        name: "joinswapExternAmountIn",
        outputs: [
            {
                internalType: "uint256",
                name: "poolAmountOut",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenIn",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenAmountIn",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "tokenOut",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "minAmountOut",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "swapExactAmountIn",
        outputs: [
            {
                internalType: "uint256",
                name: "tokenAmountOut",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b50604051620013143803806200131483398101604081905262000034916200022a565b8151829082906200004d906003906020850190620000f3565b50805162000063906004906020840190620000f3565b5050506005849055825160005b81811015620000e757600160066000878481518110620000a057634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000de81620003bc565b91505062000070565b505050505050620003fa565b82805462000101906200037f565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600082601f830112620001aa578081fd5b81516001600160401b03811115620001c657620001c6620003e4565b6020620001dc601f8301601f191682016200034c565b8281528582848701011115620001f0578384fd5b835b838110156200020f578581018301518282018401528201620001f2565b838111156200022057848385840101525b5095945050505050565b6000806000806080858703121562000240578384fd5b8451602080870151919550906001600160401b038082111562000261578586fd5b818801915088601f83011262000275578586fd5b8151818111156200028a576200028a620003e4565b8381026200029a8582016200034c565b8281528581019085870183870188018e1015620002b5578a8bfd5b8a96505b84871015620002f157805193506001600160a01b0384168414620002db578a8bfd5b83835260019690960195918701918701620002b9565b5060408c01519099509550505050808311156200030c578485fd5b6200031a89848a0162000199565b9450606088015192508083111562000330578384fd5b5050620003408782880162000199565b91505092959194509250565b604051601f8201601f191681016001600160401b0381118282101715620003775762000377620003e4565b604052919050565b6002810460018216806200039457607f821691505b60208210811415620003b657634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415620003dd57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b610f0a806200040a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101da578063a457c2d7146101e2578063a9059cbb146101f5578063dd62ed3e14610208576100ea565b806370a082311461018a57806372970df01461019d5780638201aa3f146101b2576100ea565b806323b872dd116100c857806323b872dd14610142578063313ce5671461015557806339509351146101645780635db3427714610177576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610241565b6040516101049190610d9b565b60405180910390f35b61012061011b366004610cd3565b6102d3565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610c98565b6102e9565b60405160128152602001610104565b610120610172366004610cd3565b6103a1565b610134610185366004610d49565b6103d8565b610134610198366004610c4c565b61050b565b6101b06101ab366004610cd3565b61052a565b005b6101c56101c0366004610cfc565b6105b5565b60408051928352602083019190915201610104565b6100f76107a3565b6101206101f0366004610cd3565b6107b2565b610120610203366004610cd3565b61084d565b610134610216366004610c66565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461025090610e83565b80601f016020809104026020016040519081016040528092919081815260200182805461027c90610e83565b80156102c95780601f1061029e576101008083540402835291602001916102c9565b820191906000526020600020905b8154815290600101906020018083116102ac57829003601f168201915b5050505050905090565b60006102e033848461085a565b50600192915050565b60006102f684848461097e565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103805760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610394853361038f8685610e6c565b61085a565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102e091859061038f908690610e15565b6001600160a01b03831660009081526006602052604081205460ff166104105760405162461bcd60e51b815260040161037790610dee565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd90606401602060405180830381600087803b15801561045e57600080fd5b505af1158015610472573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104969190610d7b565b50670de0b6b3a7640000600554846104ae9190610e4d565b6104b89190610e2d565b90508181116105015760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081bdd5d1c1d5d08185b5bdd5b9d605a1b6044820152606401610377565b61039a3382610b56565b6001600160a01b0381166000908152602081905260409020545b919050565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd90606401602060405180830381600087803b15801561057857600080fd5b505af115801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b09190610d7b565b505050565b6001600160a01b038516600090815260066020526040812054819060ff166105ef5760405162461bcd60e51b815260040161037790610dee565b6001600160a01b03851660009081526006602052604090205460ff166106275760405162461bcd60e51b815260040161037790610dee565b6040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b038816906323b872dd90606401602060405180830381600087803b15801561067557600080fd5b505af1158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad9190610d7b565b50670de0b6b3a7640000600554876106c59190610e4d565b6106cf9190610e2d565b91508382116107185760405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081bdd5d1c1d5d08185b5bdd5b9d605a1b6044820152606401610377565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0386169063a9059cbb90604401602060405180830381600087803b15801561076057600080fd5b505af1158015610774573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107989190610d7b565b509550959350505050565b60606004805461025090610e83565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156108345760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610377565b610843338561038f8685610e6c565b5060019392505050565b60006102e033848461097e565b6001600160a01b0383166108bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610377565b6001600160a01b03821661091d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610377565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166109e25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610377565b6001600160a01b038216610a445760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610377565b6001600160a01b03831660009081526020819052604090205481811015610abc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610377565b610ac68282610e6c565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610afc908490610e15565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b4891815260200190565b60405180910390a350505050565b6001600160a01b038216610bac5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610377565b8060026000828254610bbe9190610e15565b90915550506001600160a01b03821660009081526020819052604081208054839290610beb908490610e15565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b038116811461052557600080fd5b600060208284031215610c5d578081fd5b61039a82610c35565b60008060408385031215610c78578081fd5b610c8183610c35565b9150610c8f60208401610c35565b90509250929050565b600080600060608486031215610cac578081fd5b610cb584610c35565b9250610cc360208501610c35565b9150604084013590509250925092565b60008060408385031215610ce5578182fd5b610cee83610c35565b946020939093013593505050565b600080600080600060a08688031215610d13578081fd5b610d1c86610c35565b945060208601359350610d3160408701610c35565b94979396509394606081013594506080013592915050565b600080600060608486031215610d5d578283fd5b610d6684610c35565b95602085013595506040909401359392505050565b600060208284031215610d8c578081fd5b8151801515811461039a578182fd5b6000602080835283518082850152825b81811015610dc757858101830151858201604001528201610dab565b81811115610dd85783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600d908201526c24b73b30b634b2103a37b5b2b760991b604082015260600190565b60008219821115610e2857610e28610ebe565b500190565b600082610e4857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610e6757610e67610ebe565b500290565b600082821015610e7e57610e7e610ebe565b500390565b600281046001821680610e9757607f821691505b60208210811415610eb857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a431f5ecabe5b07a98a4606edac0a0d801657673cbcdcb5b50dc71ac696cb8fe64736f6c63430008020033";
class MockBPool__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_inputToOutputRatio, _tokens, _name, _symbol, overrides) {
        return super.deploy(_inputToOutputRatio, _tokens, _name, _symbol, overrides || {});
    }
    getDeployTransaction(_inputToOutputRatio, _tokens, _name, _symbol, overrides) {
        return super.getDeployTransaction(_inputToOutputRatio, _tokens, _name, _symbol, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockBPool__factory = MockBPool__factory;
MockBPool__factory.bytecode = _bytecode;
MockBPool__factory.abi = _abi;
//# sourceMappingURL=MockBPool__factory.js.map