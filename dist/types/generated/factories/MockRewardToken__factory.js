"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockRewardToken__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_nexus",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "RewardTokenApproved",
        type: "event",
    },
    {
        inputs: [],
        name: "approveRewardToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "claimRewards",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "nexus",
        outputs: [
            {
                internalType: "contract INexus",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_rewardAmount",
                type: "uint256",
            },
        ],
        name: "setRewardAmount",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
        ],
        name: "setRewardToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a06040526103e860015534801561001657600080fd5b50604051610910380380610910833981016040819052610035916100a6565b806001600160a01b0381166100905760405162461bcd60e51b815260206004820152601560248201527f4e657875732061646472657373206973207a65726f0000000000000000000000604482015260640160405180910390fd5b60601b6001600160601b031916608052506100d4565b6000602082840312156100b7578081fd5b81516001600160a01b03811681146100cd578182fd5b9392505050565b60805160601c6108186100f860003960008181609b01526101b701526108186000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063372500ab1461005c5780638aee812714610066578063a3f5c1d214610096578063a8a65a78146100d9578063e7296454146100ec575b600080fd5b6100646100f4565b005b6100646100743660046106c6565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6100bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100646100e736600461071e565b600155565b61006461017f565b60005460015460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561014457600080fd5b505af1158015610158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017c91906106fe565b50565b6040516385acd64160e01b81527f1e9cb14d7560734a61fa5ff9273953e971ff3cd9283c03d8346e3264617933d460048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906385acd6419060240160206040518083038186803b15801561020157600080fd5b505afa158015610215573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023991906106e2565b90506001600160a01b0381166102a05760405162461bcd60e51b815260206004820152602160248201527f4c697175696461746f7220616464726573732063616e6e6f74206265207a65726044820152606f60f81b60648201526084015b60405180910390fd5b6000546102b6906001600160a01b031682610300565b600054604080516001600160a01b03928316815291831660208301527f71b4effce66e58c9e4ad29e468e7100f7e8b5d106381fd905a25eee3ea1b6a93910160405180910390a150565b6103156001600160a01b03831682600061032f565b61032b6001600160a01b0383168260001961032f565b5050565b8015806103b85750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561037e57600080fd5b505afa158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b69190610736565b155b6104235760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610297565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261047590849061047a565b505050565b60006104cf826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661054c9092919063ffffffff16565b80519091501561047557808060200190518101906104ed91906106fe565b6104755760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610297565b606061055b8484600085610565565b90505b9392505050565b6060824710156105c65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610297565b843b6106145760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610297565b600080866001600160a01b03168587604051610630919061074e565b60006040518083038185875af1925050503d806000811461066d576040519150601f19603f3d011682016040523d82523d6000602084013e610672565b606091505b509150915061068282828661068d565b979650505050505050565b6060831561069c57508161055e565b8251156106ac5782518084602001fd5b8160405162461bcd60e51b8152600401610297919061076a565b6000602082840312156106d7578081fd5b813561055e816107cd565b6000602082840312156106f3578081fd5b815161055e816107cd565b60006020828403121561070f578081fd5b8151801515811461055e578182fd5b60006020828403121561072f578081fd5b5035919050565b600060208284031215610747578081fd5b5051919050565b6000825161076081846020870161079d565b9190910192915050565b600060208252825180602084015261078981604085016020870161079d565b601f01601f19169190910160400192915050565b60005b838110156107b85781810151838201526020016107a0565b838111156107c7576000848401525b50505050565b6001600160a01b038116811461017c57600080fdfea26469706673582212208301a2dd27477f6b3da8419a35a9e708a843983617dfbcad1ad674c2d65ea74964736f6c63430008020033";
class MockRewardToken__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_nexus, overrides) {
        return super.deploy(_nexus, overrides || {});
    }
    getDeployTransaction(_nexus, overrides) {
        return super.getDeployTransaction(_nexus, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockRewardToken__factory = MockRewardToken__factory;
MockRewardToken__factory.bytecode = _bytecode;
MockRewardToken__factory.abi = _abi;
//# sourceMappingURL=MockRewardToken__factory.js.map