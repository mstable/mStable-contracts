"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockMasset1__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "_name",
                type: "string",
            },
            {
                internalType: "string",
                name: "_symbol",
                type: "string",
            },
            {
                internalType: "uint8",
                name: "_decimals",
                type: "uint8",
            },
            {
                internalType: "address",
                name: "_initialRecipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_initialMint",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "collectInterest",
        outputs: [
            {
                internalType: "uint256",
                name: "totalInterestGained",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "newSupply",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "subtractedValue",
                type: "uint256",
            },
        ],
        name: "decreaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "addedValue",
                type: "uint256",
            },
        ],
        name: "increaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "setAmountForCollectInterest",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405260006006553480156200001657600080fd5b5060405162000f1a38038062000f1a8339810160408190526200003991620002fa565b84848484848484816003908051906020019062000058929190620001a1565b5080516200006e906004906020840190620001a1565b50506005805460ff191660ff8616908117909155620000a9915083906200009790600a6200040d565b620000a3908462000502565b620000b9565b505050505050505050506200058d565b6001600160a01b038216620001145760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001289190620003a5565b90915550506001600160a01b0382166000908152602081905260408120805483929062000157908490620003a5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001af9062000524565b90600052602060002090601f016020900481019282620001d357600085556200021e565b82601f10620001ee57805160ff19168380011785556200021e565b828001600101855582156200021e579182015b828111156200021e57825182559160200191906001019062000201565b506200022c92915062000230565b5090565b5b808211156200022c576000815560010162000231565b600082601f83011262000258578081fd5b81516001600160401b038082111562000275576200027562000577565b604051601f8301601f19908116603f01168101908282118183101715620002a057620002a062000577565b81604052838152602092508683858801011115620002bc578485fd5b8491505b83821015620002df5785820183015181830184015290820190620002c0565b83821115620002f057848385830101525b9695505050505050565b600080600080600060a0868803121562000312578081fd5b85516001600160401b038082111562000329578283fd5b6200033789838a0162000247565b965060208801519150808211156200034d578283fd5b506200035c8882890162000247565b945050604086015160ff8116811462000373578182fd5b60608701519093506001600160a01b038116811462000390578182fd5b80925050608086015190509295509295909350565b60008219821115620003bb57620003bb62000561565b500190565b80825b6001808611620003d4575062000404565b818704821115620003e957620003e962000561565b80861615620003f757918102915b9490941c938002620003c3565b94509492505050565b60006200041e600019848462000425565b9392505050565b60008262000436575060016200041e565b8162000445575060006200041e565b81600181146200045e576002811462000469576200049d565b60019150506200041e565b60ff8411156200047d576200047d62000561565b6001841b91508482111562000496576200049662000561565b506200041e565b5060208310610133831016604e8410600b8410161715620004d5575081810a83811115620004cf57620004cf62000561565b6200041e565b620004e48484846001620003c0565b808604821115620004f957620004f962000561565b02949350505050565b60008160001904831182151516156200051f576200051f62000561565b500290565b6002810460018216806200053957607f821691505b602082108114156200055b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61097d806200059d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b41146101a7578063a457c2d7146101af578063a9059cbb146101c2578063dd62ed3e146101d5576100cf565b8063313ce5671461016c578063395093511461018157806370a0823114610194576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd146101275780632a2fab221461013a5780632dd5dde014610157575b600080fd5b6100dc61020e565b6040516100e99190610874565b60405180910390f35b610105610100366004610833565b6102a0565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b6101056101353660046107f8565b6102b6565b61014261036c565b604080519283526020830191909152016100e9565b61016a61016536600461085c565b600655565b005b60055460405160ff90911681526020016100e9565b61010561018f366004610833565b610385565b6101196101a23660046107a5565b6103bc565b6100dc6103db565b6101056101bd366004610833565b6103ea565b6101056101d0366004610833565b610485565b6101196101e33660046107c6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461021d906108f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610249906108f6565b80156102965780601f1061026b57610100808354040283529160200191610296565b820191906000526020600020905b81548152906001019060200180831161027957829003601f168201915b5050505050905090565b60006102ad338484610492565b50600192915050565b60006102c38484846105b6565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561034d5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610361853361035c86856108df565b610492565b506001949350505050565b600654600061037a60025490565b600060065591929050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102ad91859061035c9086906108c7565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461021d906108f6565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561046c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610344565b61047b338561035c86856108df565b5060019392505050565b60006102ad3384846105b6565b6001600160a01b0383166104f45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610344565b6001600160a01b0382166105555760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610344565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661061a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610344565b6001600160a01b03821661067c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610344565b6001600160a01b038316600090815260208190526040902054818110156106f45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610344565b6106fe82826108df565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906107349084906108c7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161078091815260200190565b60405180910390a350505050565b80356001600160a01b03811681146103d657600080fd5b6000602082840312156107b6578081fd5b6107bf8261078e565b9392505050565b600080604083850312156107d8578081fd5b6107e18361078e565b91506107ef6020840161078e565b90509250929050565b60008060006060848603121561080c578081fd5b6108158461078e565b92506108236020850161078e565b9150604084013590509250925092565b60008060408385031215610845578182fd5b61084e8361078e565b946020939093013593505050565b60006020828403121561086d578081fd5b5035919050565b6000602080835283518082850152825b818110156108a057858101830151858201604001528201610884565b818111156108b15783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156108da576108da610931565b500190565b6000828210156108f1576108f1610931565b500390565b60028104600182168061090a57607f821691505b6020821081141561092b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212203c0175266f782782db5b9909e3ad731d5a1591948fa2ac9544c4f924ec455b1964736f6c63430008020033";
class MockMasset1__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_name, _symbol, _decimals, _initialRecipient, _initialMint, overrides) {
        return super.deploy(_name, _symbol, _decimals, _initialRecipient, _initialMint, overrides || {});
    }
    getDeployTransaction(_name, _symbol, _decimals, _initialRecipient, _initialMint, overrides) {
        return super.getDeployTransaction(_name, _symbol, _decimals, _initialRecipient, _initialMint, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockMasset1__factory = MockMasset1__factory;
MockMasset1__factory.bytecode = _bytecode;
MockMasset1__factory.abi = _abi;
//# sourceMappingURL=MockMasset1__factory.js.map