"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExposedMassetLogic__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                internalType: "uint8",
                name: "_i",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "_rawInput",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
        ],
        name: "computeMint",
        outputs: [
            {
                internalType: "uint256",
                name: "mintAmount",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                internalType: "uint8[]",
                name: "_indices",
                type: "uint8[]",
            },
            {
                internalType: "uint256[]",
                name: "_rawInputs",
                type: "uint256[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
        ],
        name: "computeMintMulti",
        outputs: [
            {
                internalType: "uint256",
                name: "mintAmount",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                internalType: "uint8",
                name: "_o",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "_netMassetQuantity",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "_feeRate",
                type: "uint256",
            },
        ],
        name: "computeRedeem",
        outputs: [
            {
                internalType: "uint256",
                name: "rawOutputUnits",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "scaledFee",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                internalType: "uint8[]",
                name: "_indices",
                type: "uint8[]",
            },
            {
                internalType: "uint256[]",
                name: "_rawOutputs",
                type: "uint256[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "_feeRate",
                type: "uint256",
            },
        ],
        name: "computeRedeemExact",
        outputs: [
            {
                internalType: "uint256",
                name: "grossMasset",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                internalType: "uint8",
                name: "_i",
                type: "uint8",
            },
            {
                internalType: "uint8",
                name: "_o",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "_rawInput",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_feeRate",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
        ],
        name: "computeSwap",
        outputs: [
            {
                internalType: "uint256",
                name: "bAssetOutputQuantity",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "scaledSwapFee",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
        ],
        name: "getK",
        outputs: [
            {
                internalType: "uint256",
                name: "k",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610c09806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301611c8a146100675780633eb09dad1461008d578063638e4bf1146100b5578063a75c0403146100c8578063b6da525a146100db578063d07312a2146100ee575b600080fd5b61007a6100753660046105e8565b610101565b6040519081526020015b60405180910390f35b6100a061009b36600461067f565b61019a565b60408051928352602083019190915201610084565b6100a06100c33660046107c9565b610239565b61007a6100d636600461071f565b61027b565b6100a06100e9366004610828565b61030e565b61007a6100fc36600461076c565b6103b0565b604051635fcf845960e11b815260009073__$6a4be19f34d71a078def5cee18ccebcd10$__9063bf9f08b2906101419088908890889088906004016109e3565b60206040518083038186803b15801561015957600080fd5b505af415801561016d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019191906108a9565b95945050505050565b60008073__$6a4be19f34d71a078def5cee18ccebcd10$__63b3ffbf3188888888886040518663ffffffff1660e01b81526004016101dc959493929190610a2f565b604080518083038186803b1580156101f357600080fd5b505af4158015610207573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022b91906108c1565b915091509550959350505050565b60008073__$6a4be19f34d71a078def5cee18ccebcd10$__637c14499488888888886040518663ffffffff1660e01b81526004016101dc959493929190610ae8565b60405163d38e18e960e01b815260009073__$6a4be19f34d71a078def5cee18ccebcd10$__9063d38e18e9906102b79086908690600401610a8c565b604080518083038186803b1580156102ce57600080fd5b505af41580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030691906108c1565b949350505050565b60008073__$6a4be19f34d71a078def5cee18ccebcd10$__63b995a2b58989898989896040518763ffffffff1660e01b815260040161035296959493929190610b1b565b604080518083038186803b15801561036957600080fd5b505af415801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a191906108c1565b91509150965096945050505050565b604051630ce8bc9b60e01b815260009073__$6a4be19f34d71a078def5cee18ccebcd10$__90630ce8bc9b90610141908890889088908890600401610ab5565b600082601f830112610400578081fd5b8135602061041561041083610b99565b610b68565b82815281810190858301604080860288018501891015610433578687fd5b865b86811015610459576104478a8461052f565b85529385019391810191600101610435565b509198975050505050505050565b600082601f830112610477578081fd5b8135602061048761041083610b99565b82815281810190858301838502870184018810156104a3578586fd5b855b858110156104c1578135845292840192908401906001016104a5565b5090979650505050505050565b600082601f8301126104de578081fd5b813560206104ee61041083610b99565b828152818101908583018385028701840188101561050a578586fd5b855b858110156104c15761051d826105d7565b8452928401929084019060010161050c565b600060408284031215610540578081fd5b61054a6040610b68565b9050610555826105bb565b8152610563602083016105bb565b602082015292915050565b600060a0828403121561057f578081fd5b6105896080610b68565b905081358152602082013560208201526105a6836040840161052f565b60408201526080820135606082015292915050565b80356001600160801b03811681146105d257600080fd5b919050565b803560ff811681146105d257600080fd5b60008060008061010085870312156105fe578384fd5b843567ffffffffffffffff80821115610615578586fd5b610621888389016103f0565b95506020870135915080821115610636578485fd5b610642888389016104ce565b94506040870135915080821115610657578384fd5b5061066487828801610467565b925050610674866060870161056e565b905092959194509250565b60008060008060006101208688031215610697578081fd5b853567ffffffffffffffff808211156106ae578283fd5b6106ba89838a016103f0565b965060208801359150808211156106cf578283fd5b6106db89838a016104ce565b955060408801359150808211156106f0578283fd5b506106fd88828901610467565b93505061070d876060880161056e565b94979396509194610100013592915050565b60008060c08385031215610731578182fd5b823567ffffffffffffffff811115610747578283fd5b610753858286016103f0565b925050610763846020850161056e565b90509250929050565b6000806000806101008587031215610782578384fd5b843567ffffffffffffffff811115610798578485fd5b6107a4878288016103f0565b9450506107b3602086016105d7565b925060408501359150610674866060870161056e565b600080600080600061012086880312156107e1578081fd5b853567ffffffffffffffff8111156107f7578182fd5b610803888289016103f0565b955050610812602087016105d7565b93506040860135925061070d876060880161056e565b6000806000806000806101408789031215610841578384fd5b863567ffffffffffffffff811115610857578485fd5b61086389828a016103f0565b965050610872602088016105d7565b9450610880604088016105d7565b9350606087013592506080870135915061089d8860a0890161056e565b90509295509295509295565b6000602082840312156108ba578081fd5b5051919050565b600080604083850312156108d3578182fd5b505080516020909101519092909150565b6000815180845260208085019450808401835b838110156109335761092087835180516001600160801b03908116835260209182015116910152565b60409690960195908201906001016108f7565b509495945050505050565b6000815180845260208085019450808401835b8381101561093357815187529582019590820190600101610951565b6000815180845260208085019450808401835b8381101561093357815160ff1687529582019590820190600101610980565b805182526020810151602083015260408101516109d5604084018280516001600160801b03908116835260209182015116910152565b506060015160809190910152565b60006101008083526109f7818401886108e4565b90508281036020840152610a0b818761096d565b90508281036040840152610a1f818661093e565b915050610191606083018461099f565b6000610120808352610a43818401896108e4565b90508281036020840152610a57818861096d565b90508281036040840152610a6b818761093e565b915050610a7b606083018561099f565b826101008301529695505050505050565b600060c08252610a9f60c08301856108e4565b9050610aae602083018461099f565b9392505050565b6000610100808352610ac9818401886108e4565b91505060ff85166020830152836040830152610191606083018461099f565b6000610120808352610afc818401896108e4565b91505060ff86166020830152846040830152610a7b606083018561099f565b6000610140808352610b2f8184018a6108e4565b91505060ff8716602083015260ff86166040830152846060830152836080830152610b5d60a083018461099f565b979650505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b9157610b91610bbd565b604052919050565b600067ffffffffffffffff821115610bb357610bb3610bbd565b5060209081020190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212204d7bae8dc3c35000d41799c90dab49c6360ec5274680d044a318324c52aa77df64736f6c63430008020033";
class ExposedMassetLogic__factory extends ethers_1.ContractFactory {
    constructor(linkLibraryAddresses, signer) {
        super(_abi, ExposedMassetLogic__factory.linkBytecode(linkLibraryAddresses), signer);
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$6a4be19f34d71a078def5cee18ccebcd10\\$__", "g"), linkLibraryAddresses["__$6a4be19f34d71a078def5cee18ccebcd10$__"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ExposedMassetLogic__factory = ExposedMassetLogic__factory;
ExposedMassetLogic__factory.bytecode = _bytecode;
ExposedMassetLogic__factory.abi = _abi;
//# sourceMappingURL=ExposedMassetLogic__factory.js.map