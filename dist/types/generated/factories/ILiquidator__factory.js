"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ILiquidator__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "claimStakedAave",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_integration",
                type: "address",
            },
            {
                internalType: "address",
                name: "_sellToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_bAsset",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "_uniswapPath",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_uniswapPathReversed",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "_trancheAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_minReturn",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_mAsset",
                type: "address",
            },
            {
                internalType: "bool",
                name: "_useAave",
                type: "bool",
            },
        ],
        name: "createLiquidation",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_integration",
                type: "address",
            },
        ],
        name: "deleteLiquidation",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_integration",
                type: "address",
            },
        ],
        name: "triggerLiquidation",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "triggerLiquidationAave",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_integration",
                type: "address",
            },
            {
                internalType: "address",
                name: "_bAsset",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "_uniswapPath",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_uniswapPathReversed",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "_trancheAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_minReturn",
                type: "uint256",
            },
        ],
        name: "updateBasset",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class ILiquidator__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ILiquidator__factory = ILiquidator__factory;
ILiquidator__factory.abi = _abi;
//# sourceMappingURL=ILiquidator__factory.js.map