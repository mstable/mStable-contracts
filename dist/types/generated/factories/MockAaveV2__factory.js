"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockAaveV2__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_aToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_underlying",
                type: "address",
            },
        ],
        name: "addAToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "breakLendingPools",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_reserve",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint16",
                name: "",
                type: "uint16",
            },
        ],
        name: "deposit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getLendingPool",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "reserve",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "withdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405260018054306001600160a01b0319918216811790925560028054909116909117905534801561003257600080fd5b50610b71806100426000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630261bf8b1461005c578063180326ba1461007b57806369328dec1461009e578063811711c7146100b1578063e8eda9df146100c4575b600080fd5b600154604080516001600160a01b039092168252519081900360200190f35b61009c600180546001600160a01b0319908116909155600280549091169055565b005b61009c6100ac36600461098d565b6100d7565b61009c6100bf36600461095b565b6101d2565b61009c6100d23660046109c8565b61020c565b6001600160a01b0383811660009081526020819052604090819020549051632770a7eb60e21b815233600482015260248101859052911690639dc29fac90604401600060405180830381600087803b15801561013257600080fd5b505af1158015610146573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038481166004830152602482018690528616925063a9059cbb9150604401602060405180830381600087803b15801561019457600080fd5b505af11580156101a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cc9190610a1c565b50505050565b6101dc81836103be565b6001600160a01b0390811660009081526020819052604090208054919092166001600160a01b0319909116179055565b6001600160a01b038481166000908152602081905260408082205490516370a0823160e01b8152336004820152919216906370a082319060240160206040518083038186803b15801561025e57600080fd5b505afa158015610272573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102969190610a3c565b90506512309ce540006000670de0b6b3a76400006102b48385610ac3565b6102be9190610aa3565b6001600160a01b03888116600090815260208190526040908190205490516340c10f1960e01b81523360048201526024810184905292935016906340c10f1990604401600060405180830381600087803b15801561031b57600080fd5b505af115801561032f573d6000803e3d6000fd5b5050505061034133308960018a6103ed565b506001600160a01b03878116600090815260208190526040908190205490516340c10f1960e01b8152336004820152602481018990529116906340c10f1990604401600060405180830381600087803b15801561039d57600080fd5b505af11580156103b1573d6000803e3d6000fd5b5050505050505050505050565b6103d36001600160a01b03831682600061054e565b6103e96001600160a01b0383168260001961054e565b5050565b808215610530576040516370a0823160e01b81526001600160a01b038681166004830152600091908616906370a082319060240160206040518083038186803b15801561043957600080fd5b505afa15801561044d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104719190610a3c565b90506104886001600160a01b0386168888866106af565b6040516370a0823160e01b81526001600160a01b038781166004830152600091908716906370a082319060240160206040518083038186803b1580156104cd57600080fd5b505afa1580156104e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105059190610a3c565b90506105118282610ae2565b841161051d5783610527565b6105278282610ae2565b92505050610545565b6105456001600160a01b0385168787856106af565b95945050505050565b8015806105d75750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561059d57600080fd5b505afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190610a3c565b155b6106475760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b0383166024820152604481018290526106aa90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526106e7565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526101cc9085906323b872dd60e01b90608401610673565b600061073c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107b99092919063ffffffff16565b8051909150156106aa578080602001905181019061075a9190610a1c565b6106aa5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161063e565b60606107c884846000856107d2565b90505b9392505050565b6060824710156108335760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161063e565b61083c85610901565b6108885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161063e565b600080866001600160a01b031685876040516108a49190610a54565b60006040518083038185875af1925050503d80600081146108e1576040519150601f19603f3d011682016040523d82523d6000602084013e6108e6565b606091505b50915091506108f682828661090b565b979650505050505050565b803b15155b919050565b6060831561091a5750816107cb565b82511561092a5782518084602001fd5b8160405162461bcd60e51b815260040161063e9190610a70565b80356001600160a01b038116811461090657600080fd5b6000806040838503121561096d578182fd5b61097683610944565b915061098460208401610944565b90509250929050565b6000806000606084860312156109a1578081fd5b6109aa84610944565b9250602084013591506109bf60408501610944565b90509250925092565b600080600080608085870312156109dd578081fd5b6109e685610944565b9350602085013592506109fb60408601610944565b9150606085013561ffff81168114610a11578182fd5b939692955090935050565b600060208284031215610a2d578081fd5b815180151581146107cb578182fd5b600060208284031215610a4d578081fd5b5051919050565b60008251610a66818460208701610af9565b9190910192915050565b6000602082528251806020840152610a8f816040850160208701610af9565b601f01601f19169190910160400192915050565b600082610abe57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610add57610add610b25565b500290565b600082821015610af457610af4610b25565b500390565b60005b83811015610b14578181015183820152602001610afc565b838111156101cc5750506000910152565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220232ee341bb7d4c6a5981e2c2c15e6ee64dba7dea76132461625eb5fd9d8065c364736f6c63430008020033";
class MockAaveV2__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockAaveV2__factory = MockAaveV2__factory;
MockAaveV2__factory.bytecode = _bytecode;
MockAaveV2__factory.abi = _abi;
//# sourceMappingURL=MockAaveV2__factory.js.map