"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockStakingContract__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "setBalanceOf",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610130806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806370a08231146037578063b46310f6146058575b600080fd5b6046604236600460b6565b6081565b60405190815260200160405180910390f35b607f606336600460d4565b6001600160a01b03909116600090815260208190526040902055565b005b6001600160a01b0381166000908152602081905260409020545b919050565b80356001600160a01b0381168114609b57600080fd5b60006020828403121560c6578081fd5b60cd8260a0565b9392505050565b6000806040838503121560e5578081fd5b60ec8360a0565b94602093909301359350505056fea26469706673582212208d70f8e79282a6542d3378b79be42fe92c91e376294d8885f63c08733741da0d64736f6c63430008020033";
class MockStakingContract__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockStakingContract__factory = MockStakingContract__factory;
MockStakingContract__factory.bytecode = _bytecode;
MockStakingContract__factory.abi = _abi;
//# sourceMappingURL=MockStakingContract__factory.js.map